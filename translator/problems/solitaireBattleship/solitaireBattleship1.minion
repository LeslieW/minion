MINION 1
# This file has been automatically generated by theEssence'-> Minion translator
# 
# Input file for Minion built for Version 0.3
#    http://sourceforge.net/projects/minion
#
#
#
# The variables used in this model correspond to the following
# decision variables of the original problem:
#   (minion	original)
#
# Boolean domain variables:
#
#	x0	grid
#	x1	grid
#	x2	grid
#	x3	grid
#	x4	grid
#	x5	grid
#	x6	grid
#	x7	grid
#	x8	grid
#	x9	grid
#	x10	grid
#	x11	grid
#	x12	grid
#	x13	grid
#	x14	grid
#	x15	grid
#	x16	grid
#	x17	grid
#	x18	grid
#	x19	grid
#	x20	grid
#	x21	grid
#	x22	grid
#	x23	grid
#	x24	grid
#	x25	grid
#	x26	grid
#	x27	grid
#	x28	grid
#	x29	grid
#	x30	grid
#	x31	grid
#	x32	grid
#	x33	grid
#	x34	grid
#	x35	grid
#	x36	grid
#	x37	grid
#	x38	grid
#	x39	grid
#	x40	grid
#	x41	grid
#	x42	grid
#	x43	grid
#	x44	grid
#	x45	grid
#	x46	grid
#	x47	grid
#	x48	grid
#	x49	grid
#	x50	grid
#	x51	grid
#	x52	grid
#	x53	grid
#	x54	grid
#	x55	grid
#	x56	grid
#	x57	grid
#	x58	grid
#	x59	grid
#	x60	grid
#	x61	grid
#	x62	grid
#	x63	grid
#	x64	grid
#	x65	grid
#	x66	grid
#	x67	grid
#	x68	grid
#	x69	grid
#	x70	grid
#	x71	grid
#	x72	grid
#	x73	grid
#	x74	grid
#	x75	grid
#	x76	grid
#	x77	grid
#	x78	grid
#	x79	grid
#	x80	grid
#	x81	grid
#	x82	grid
#	x83	grid
#	x84	grid
#	x85	grid
#	x86	grid
#	x87	grid
#	x88	grid
#	x89	grid
#	x90	grid
#	x91	grid
#	x92	grid
#	x93	grid
#	x94	grid
#	x95	grid
#	x96	grid
#	x97	grid
#	x98	grid
#	x99	grid
#	x100	freshVariable20
#	x101	freshVariable21
#	x102	freshVariable22
#	x103	freshVariable23
#	x104	freshVariable24
#	x105	freshVariable25
#	x106	freshVariable26
#	x107	freshVariable27
#	x108	freshVariable28
#	x109	freshVariable29
#
# 2-dimensional matrices:
#	x0	grid[1,1]
#	x1	grid[1,2]
#	x2	grid[1,3]
#	x3	grid[1,4]
#	x4	grid[1,5]
#	x5	grid[1,6]
#	x6	grid[1,7]
#	x7	grid[1,8]
#	x8	grid[1,9]
#	x9	grid[1,10]
#	x10	grid[2,1]
#	x11	grid[2,2]
#	x12	grid[2,3]
#	x13	grid[2,4]
#	x14	grid[2,5]
#	x15	grid[2,6]
#	x16	grid[2,7]
#	x17	grid[2,8]
#	x18	grid[2,9]
#	x19	grid[2,10]
#	x20	grid[3,1]
#	x21	grid[3,2]
#	x22	grid[3,3]
#	x23	grid[3,4]
#	x24	grid[3,5]
#	x25	grid[3,6]
#	x26	grid[3,7]
#	x27	grid[3,8]
#	x28	grid[3,9]
#	x29	grid[3,10]
#	x30	grid[4,1]
#	x31	grid[4,2]
#	x32	grid[4,3]
#	x33	grid[4,4]
#	x34	grid[4,5]
#	x35	grid[4,6]
#	x36	grid[4,7]
#	x37	grid[4,8]
#	x38	grid[4,9]
#	x39	grid[4,10]
#	x40	grid[5,1]
#	x41	grid[5,2]
#	x42	grid[5,3]
#	x43	grid[5,4]
#	x44	grid[5,5]
#	x45	grid[5,6]
#	x46	grid[5,7]
#	x47	grid[5,8]
#	x48	grid[5,9]
#	x49	grid[5,10]
#	x50	grid[6,1]
#	x51	grid[6,2]
#	x52	grid[6,3]
#	x53	grid[6,4]
#	x54	grid[6,5]
#	x55	grid[6,6]
#	x56	grid[6,7]
#	x57	grid[6,8]
#	x58	grid[6,9]
#	x59	grid[6,10]
#	x60	grid[7,1]
#	x61	grid[7,2]
#	x62	grid[7,3]
#	x63	grid[7,4]
#	x64	grid[7,5]
#	x65	grid[7,6]
#	x66	grid[7,7]
#	x67	grid[7,8]
#	x68	grid[7,9]
#	x69	grid[7,10]
#	x70	grid[8,1]
#	x71	grid[8,2]
#	x72	grid[8,3]
#	x73	grid[8,4]
#	x74	grid[8,5]
#	x75	grid[8,6]
#	x76	grid[8,7]
#	x77	grid[8,8]
#	x78	grid[8,9]
#	x79	grid[8,10]
#	x80	grid[9,1]
#	x81	grid[9,2]
#	x82	grid[9,3]
#	x83	grid[9,4]
#	x84	grid[9,5]
#	x85	grid[9,6]
#	x86	grid[9,7]
#	x87	grid[9,8]
#	x88	grid[9,9]
#	x89	grid[9,10]
#	x90	grid[10,1]
#	x91	grid[10,2]
#	x92	grid[10,3]
#	x93	grid[10,4]
#	x94	grid[10,5]
#	x95	grid[10,6]
#	x96	grid[10,7]
#	x97	grid[10,8]
#	x98	grid[10,9]
#	x99	grid[10,10]

110
0

0

0

0
[ ] [ ] 
1
[x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65, x66, x67, x68, x69, x70, x71, x72, x73, x74, x75, x76, x77, x78, x79, x80, x81, x82, x83, x84, x85, x86, x87, x88, x89, x90, x91, x92, x93, x94, x95, x96, x97, x98, x99]
1
[[x0,x1,x2,x3,x4,x5,x6,x7,x8,x9],
[x10,x11,x12,x13,x14,x15,x16,x17,x18,x19],
[x20,x21,x22,x23,x24,x25,x26,x27,x28,x29],
[x30,x31,x32,x33,x34,x35,x36,x37,x38,x39],
[x40,x41,x42,x43,x44,x45,x46,x47,x48,x49],
[x50,x51,x52,x53,x54,x55,x56,x57,x58,x59],
[x60,x61,x62,x63,x64,x65,x66,x67,x68,x69],
[x70,x71,x72,x73,x74,x75,x76,x77,x78,x79],
[x80,x81,x82,x83,x84,x85,x86,x87,x88,x89],
[x90,x91,x92,x93,x94,x95,x96,x97,x98,x99]
]
0
objective none
print m0
sumgeq([x0, x1, x2, x3, x4, x5, x6, x7, x8, x9], 1)
sumleq([x0, x1, x2, x3, x4, x5, x6, x7, x8, x9], 1)
sumgeq([x10, x11, x12, x13, x14, x15, x16, x17, x18, x19], 5)
sumleq([x10, x11, x12, x13, x14, x15, x16, x17, x18, x19], 5)
sumgeq([x20, x21, x22, x23, x24, x25, x26, x27, x28, x29], 1)
sumleq([x20, x21, x22, x23, x24, x25, x26, x27, x28, x29], 1)
sumgeq([x30, x31, x32, x33, x34, x35, x36, x37, x38, x39], 4)
sumleq([x30, x31, x32, x33, x34, x35, x36, x37, x38, x39], 4)
sumgeq([x40, x41, x42, x43, x44, x45, x46, x47, x48, x49], 0)
sumleq([x40, x41, x42, x43, x44, x45, x46, x47, x48, x49], 0)
sumgeq([x50, x51, x52, x53, x54, x55, x56, x57, x58, x59], 3)
sumleq([x50, x51, x52, x53, x54, x55, x56, x57, x58, x59], 3)
sumgeq([x60, x61, x62, x63, x64, x65, x66, x67, x68, x69], 1)
sumleq([x60, x61, x62, x63, x64, x65, x66, x67, x68, x69], 1)
sumgeq([x70, x71, x72, x73, x74, x75, x76, x77, x78, x79], 1)
sumleq([x70, x71, x72, x73, x74, x75, x76, x77, x78, x79], 1)
sumgeq([x80, x81, x82, x83, x84, x85, x86, x87, x88, x89], 3)
sumleq([x80, x81, x82, x83, x84, x85, x86, x87, x88, x89], 3)
sumgeq([x90, x91, x92, x93, x94, x95, x96, x97, x98, x99], 1)
sumleq([x90, x91, x92, x93, x94, x95, x96, x97, x98, x99], 1)
sumgeq([x0, x10, x20, x30, x40, x50, x60, x70, x80, x90], 2)
sumleq([x0, x10, x20, x30, x40, x50, x60, x70, x80, x90], 2)
sumgeq([x1, x11, x21, x31, x41, x51, x61, x71, x81, x91], 2)
sumleq([x1, x11, x21, x31, x41, x51, x61, x71, x81, x91], 2)
sumgeq([x2, x12, x22, x32, x42, x52, x62, x72, x82, x92], 0)
sumleq([x2, x12, x22, x32, x42, x52, x62, x72, x82, x92], 0)
sumgeq([x3, x13, x23, x33, x43, x53, x63, x73, x83, x93], 5)
sumleq([x3, x13, x23, x33, x43, x53, x63, x73, x83, x93], 5)
sumgeq([x4, x14, x24, x34, x44, x54, x64, x74, x84, x94], 0)
sumleq([x4, x14, x24, x34, x44, x54, x64, x74, x84, x94], 0)
sumgeq([x5, x15, x25, x35, x45, x55, x65, x75, x85, x95], 1)
sumleq([x5, x15, x25, x35, x45, x55, x65, x75, x85, x95], 1)
sumgeq([x6, x16, x26, x36, x46, x56, x66, x76, x86, x96], 3)
sumleq([x6, x16, x26, x36, x46, x56, x66, x76, x86, x96], 3)
sumgeq([x7, x17, x27, x37, x47, x57, x67, x77, x87, x97], 2)
sumleq([x7, x17, x27, x37, x47, x57, x67, x77, x87, x97], 2)
sumgeq([x8, x18, x28, x38, x48, x58, x68, x78, x88, x98], 2)
sumleq([x8, x18, x28, x38, x48, x58, x68, x78, x88, x98], 2)
sumgeq([x9, x19, x29, x39, x49, x59, x69, x79, x89, x99], 3)
sumleq([x9, x19, x29, x39, x49, x59, x69, x79, x89, x99], 3)
eq(x35, 0)
eq(x53, 0)
eq(x79, 1)
eq(x81, 1)
eq(x70, 0)
eq(x70, 0)
eq(x72, 0)
eq(x91, 0)
eq(x71, 0)
eq(x82, 0)
eq(x92, 0)
eq(x72, 0)
eq(x18, 1)
eq(x7, 0)
eq(x27, 0)
eq(x29, 0)
eq(x9, 0)
reify(eq(x17, 1), x100)
reify(eq(x19, 1), x101)
reify(sumgeq([x100, x101], 2), x102)
reify(sumleq([x100, x101], 2), x103)

product(x102, x103, x104)
reify(eq(x28, 1), x105)
reify(eq(x8, 1), x106)
reify(sumgeq([x105, x106], 2), x107)
reify(sumleq([x105, x106], 2), x108)

product(x107, x108, x109)
sumgeq([x104, x109], 1)
eq(x13, 1)
eq(x23, 1)
eq(x32, 0)
eq(x22, 0)
eq(x12, 0)
eq(x2, 0)
eq(x3, 0)
eq(x4, 0)
eq(x14, 0)
eq(x24, 0)
eq(x34, 0)
eq(x56, 1)
eq(x66, 1)
eq(x75, 0)
eq(x65, 0)
eq(x55, 0)
eq(x45, 0)
eq(x46, 0)
eq(x47, 0)
eq(x57, 0)
eq(x67, 0)
eq(x77, 0)
eq(x33, 1)
eq(x23, 1)
eq(x42, 0)
eq(x32, 0)
eq(x22, 0)
eq(x12, 0)
eq(x41, 0)
eq(x24, 0)
eq(x34, 0)
eq(x44, 0)
eq(x43, 0)
eq(x16, 1)
eq(x17, 1)
eq(x25, 0)
eq(x15, 0)
eq(x5, 0)
eq(x6, 0)
eq(x7, 0)
eq(x28, 0)
eq(x8, 0)
eq(x27, 0)
eq(x26, 0)
eq(x37, 1)
eq(x38, 1)
eq(x46, 0)
eq(x36, 0)
eq(x26, 0)
eq(x27, 0)
eq(x28, 0)
eq(x49, 0)
eq(x29, 0)
eq(x48, 0)
eq(x47, 0)
