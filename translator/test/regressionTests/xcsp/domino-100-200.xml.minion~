MINION 3

#This file has been automatically generated by TAILOR v0.2
#bug-reports: andrea@cs.st-and.ac.uk

# amount of common subexpressions used:0
# amount of inferred common subexpressions used:0
# amount of original variables saved (over direct equality):98
# amount of constraints:8
# amount of auxiliary variables: 7

**VARIABLES**
DISCRETE V0 {0..199}
DISCRETE V10 {0..199}

# auxiliary variables
BOOL aux0 
BOOL aux1 
BOOL aux2 
BOOL aux3 
BOOL aux4 
BOOL aux5 
BOOL aux6 

# aliases
ALIAS V1 = V0
ALIAS V2 = V1
ALIAS V3 = V2
ALIAS V4 = V3
ALIAS V5 = V4
ALIAS V6 = V5
ALIAS V7 = V6
ALIAS V8 = V7
ALIAS V9 = V10
ALIAS V11 = V10
ALIAS V12 = V11
ALIAS V13 = V12
ALIAS V14 = V13
ALIAS V15 = V14
ALIAS V16 = V15
ALIAS V17 = V16
ALIAS V18 = V17
ALIAS V19 = V18
ALIAS V20 = V19
ALIAS V21 = V20
ALIAS V22 = V21
ALIAS V23 = V22
ALIAS V24 = V23
ALIAS V25 = V24
ALIAS V26 = V25
ALIAS V27 = V26
ALIAS V28 = V27
ALIAS V29 = V28
ALIAS V30 = V29
ALIAS V31 = V30
ALIAS V32 = V31
ALIAS V33 = V32
ALIAS V34 = V33
ALIAS V35 = V34
ALIAS V36 = V35
ALIAS V37 = V36
ALIAS V38 = V37
ALIAS V39 = V38
ALIAS V40 = V39
ALIAS V41 = V40
ALIAS V42 = V41
ALIAS V43 = V42
ALIAS V44 = V43
ALIAS V45 = V44
ALIAS V46 = V45
ALIAS V47 = V46
ALIAS V48 = V47
ALIAS V49 = V48
ALIAS V50 = V49
ALIAS V51 = V50
ALIAS V52 = V51
ALIAS V53 = V52
ALIAS V54 = V53
ALIAS V55 = V54
ALIAS V56 = V55
ALIAS V57 = V56
ALIAS V58 = V57
ALIAS V59 = V58
ALIAS V60 = V59
ALIAS V61 = V60
ALIAS V62 = V61
ALIAS V63 = V62
ALIAS V64 = V63
ALIAS V65 = V64
ALIAS V66 = V65
ALIAS V67 = V66
ALIAS V68 = V67
ALIAS V69 = V68
ALIAS V70 = V69
ALIAS V71 = V70
ALIAS V72 = V71
ALIAS V73 = V72
ALIAS V74 = V73
ALIAS V75 = V74
ALIAS V76 = V75
ALIAS V77 = V76
ALIAS V78 = V77
ALIAS V79 = V78
ALIAS V80 = V79
ALIAS V81 = V80
ALIAS V82 = V81
ALIAS V83 = V82
ALIAS V84 = V83
ALIAS V85 = V84
ALIAS V86 = V85
ALIAS V87 = V86
ALIAS V88 = V87
ALIAS V89 = V88
ALIAS V90 = V89
ALIAS V91 = V90
ALIAS V92 = V91
ALIAS V93 = V92
ALIAS V94 = V93
ALIAS V95 = V94
ALIAS V96 = V95
ALIAS V97 = V96
ALIAS V98 = V97
ALIAS V99 = V98

**SEARCH**

PRINT [
[V0],[V10]]

VARORDER [
V0,V10,
aux0,aux1,aux2,aux3,aux4,aux5,aux6]


**CONSTRAINTS**

reify(eq(199, V99), aux0)
reify(eq(199, V0), aux1)
reify(sumgeq([aux1,aux0], 2), aux2)
reify(sumleq([1,V0], V99), aux4)
reify(sumgeq([1,V0], V99), aux5)
product(aux4,aux5, aux6)
eq(aux6, aux3)
watchsumgeq([aux3,aux2], 1)

**EOF**
