MINION 3

#This file has been automatically generated by TAILOR v0.2
#bug-reports: andrea@cs.st-and.ac.uk

# amount of common subexpressions used:30
# amount of inferred common subexpressions used:0
# amount of original variables saved (over direct equality):0
# amount of constraints:80
# amount of auxiliary variables: 60

**VARIABLES**
DISCRETE V0 {0..99}
DISCRETE V1 {0..99}
DISCRETE V2 {0..99}
DISCRETE V3 {0..99}
DISCRETE V4 {0..99}

# auxiliary variables
DISCRETE aux0 {1..9}
DISCRETE aux1 {1..9}
DISCRETE aux2 {-8..8}
DISCRETE aux3 {0..8}
BOOL aux4 
DISCRETE aux5 {0..9}
DISCRETE aux6 {0..9}
DISCRETE aux7 {-9..9}
DISCRETE aux8 {0..9}
BOOL aux9 
BOOL aux10 
BOOL aux11 
BOOL aux12 
BOOL aux13 
DISCRETE aux14 {1..9}
DISCRETE aux15 {-8..8}
DISCRETE aux16 {0..8}
BOOL aux17 
DISCRETE aux18 {0..9}
DISCRETE aux19 {-9..9}
DISCRETE aux20 {0..9}
BOOL aux21 
BOOL aux22 
BOOL aux23 
BOOL aux24 
BOOL aux25 
DISCRETE aux26 {1..9}
DISCRETE aux27 {-8..8}
DISCRETE aux28 {0..8}
BOOL aux29 
DISCRETE aux30 {0..9}
DISCRETE aux31 {-9..9}
DISCRETE aux32 {0..9}
BOOL aux33 
BOOL aux34 
BOOL aux35 
BOOL aux36 
BOOL aux37 
DISCRETE aux38 {1..9}
DISCRETE aux39 {-8..8}
DISCRETE aux40 {0..8}
BOOL aux41 
DISCRETE aux42 {0..9}
DISCRETE aux43 {-9..9}
DISCRETE aux44 {0..9}
BOOL aux45 
BOOL aux46 
BOOL aux47 
BOOL aux48 
BOOL aux49 
DISCRETE aux50 {-8..8}
DISCRETE aux51 {0..8}
BOOL aux52 
DISCRETE aux53 {-9..9}
DISCRETE aux54 {0..9}
BOOL aux55 
BOOL aux56 
BOOL aux57 
BOOL aux58 
BOOL aux59 

# aliases

**SEARCH**

PRINT [
[V0],[V1],[V2],[V3],[V4]]

VARORDER [
V0,V1,V2,V3,V4,
aux0,aux1,aux2,aux3,aux4,aux5,aux6,aux7,
aux8,aux9,aux10,aux11,aux12,aux13,aux14,aux15,
aux16,aux17,aux18,aux19,aux20,aux21,aux22,aux23,
aux24,aux25,aux26,aux27,aux28,aux29,aux30,aux31,
aux32,aux33,aux34,aux35,aux36,aux37,aux38,aux39,
aux40,aux41,aux42,aux43,aux44,aux45,aux46,aux47,
aux48,aux49,aux50,aux51,aux52,aux53,aux54,aux55,
aux56,aux57,aux58,aux59]


**CONSTRAINTS**

weightedsumgeq([1,-1], [aux38,aux0], aux50)
weightedsumleq([1,-1], [aux38,aux0], aux50)
abs(aux51,aux50)
reify(eq(2, aux51), aux52)
weightedsumgeq([1,-1], [aux42,aux5], aux53)
weightedsumleq([1,-1], [aux42,aux5], aux53)
abs(aux54,aux53)
reify(eq(1, aux54), aux55)
reify(sumgeq([aux55,aux52], 2), aux56)
reify(eq(2, aux54), aux57)
reify(eq(1, aux51), aux58)
reify(sumgeq([aux58,aux57], 2), aux59)
watchsumgeq([aux59,aux56], 1)
div(V4, 10, aux38)
weightedsumgeq([1,-1], [aux26,aux38], aux39)
weightedsumleq([1,-1], [aux26,aux38], aux39)
abs(aux40,aux39)
reify(eq(2, aux40), aux41)
modulo(V4, 10, aux42)
weightedsumgeq([1,-1], [aux30,aux42], aux43)
weightedsumleq([1,-1], [aux30,aux42], aux43)
abs(aux44,aux43)
reify(eq(1, aux44), aux45)
reify(sumgeq([aux45,aux41], 2), aux46)
reify(eq(2, aux44), aux47)
reify(eq(1, aux40), aux48)
reify(sumgeq([aux48,aux47], 2), aux49)
watchsumgeq([aux49,aux46], 1)
div(V3, 10, aux26)
weightedsumgeq([1,-1], [aux14,aux26], aux27)
weightedsumleq([1,-1], [aux14,aux26], aux27)
abs(aux28,aux27)
reify(eq(2, aux28), aux29)
modulo(V3, 10, aux30)
weightedsumgeq([1,-1], [aux18,aux30], aux31)
weightedsumleq([1,-1], [aux18,aux30], aux31)
abs(aux32,aux31)
reify(eq(1, aux32), aux33)
reify(sumgeq([aux33,aux29], 2), aux34)
reify(eq(2, aux32), aux35)
reify(eq(1, aux28), aux36)
reify(sumgeq([aux36,aux35], 2), aux37)
watchsumgeq([aux37,aux34], 1)
div(V2, 10, aux14)
weightedsumgeq([1,-1], [aux1,aux14], aux15)
weightedsumleq([1,-1], [aux1,aux14], aux15)
abs(aux16,aux15)
reify(eq(2, aux16), aux17)
modulo(V2, 10, aux18)
weightedsumgeq([1,-1], [aux6,aux18], aux19)
weightedsumleq([1,-1], [aux6,aux18], aux19)
abs(aux20,aux19)
reify(eq(1, aux20), aux21)
reify(sumgeq([aux21,aux17], 2), aux22)
reify(eq(2, aux20), aux23)
reify(eq(1, aux16), aux24)
reify(sumgeq([aux24,aux23], 2), aux25)
watchsumgeq([aux25,aux22], 1)
div(V0, 10, aux0)
div(V1, 10, aux1)
weightedsumgeq([1,-1], [aux0,aux1], aux2)
weightedsumleq([1,-1], [aux0,aux1], aux2)
abs(aux3,aux2)
reify(eq(2, aux3), aux4)
modulo(V0, 10, aux5)
modulo(V1, 10, aux6)
weightedsumgeq([1,-1], [aux5,aux6], aux7)
weightedsumleq([1,-1], [aux5,aux6], aux7)
abs(aux8,aux7)
reify(eq(1, aux8), aux9)
reify(sumgeq([aux9,aux4], 2), aux10)
reify(eq(2, aux8), aux11)
reify(eq(1, aux3), aux12)
reify(sumgeq([aux12,aux11], 2), aux13)
watchsumgeq([aux13,aux10], 1)
diseq(V2, V4)
diseq(V1, V4)
diseq(V1, V3)
diseq(V0, V3)
diseq(V0, V2)

**EOF**
