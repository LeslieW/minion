MINION 3

#This file has been automatically generated by TAILOR v0.2
#bug-reports: andrea@cs.st-and.ac.uk

# amount of common subexpressions used:0
# amount of inferred common subexpressions used:0
# amount of original variables saved (over direct equality):0
# amount of constraints:225
# amount of auxiliary variables: 90

**VARIABLES**
DISCRETE V0 {1..10}
DISCRETE V1 {1..10}
DISCRETE V2 {1..10}
DISCRETE V3 {1..10}
DISCRETE V4 {1..10}
DISCRETE V5 {1..10}
DISCRETE V6 {1..10}
DISCRETE V7 {1..10}
DISCRETE V8 {1..10}
DISCRETE V9 {1..10}

# auxiliary variables
DISCRETE aux0 {-9..9}
DISCRETE aux1 {-27..9}
DISCRETE aux2 {-9..9}
DISCRETE aux3 {-27..9}
DISCRETE aux4 {-9..9}
DISCRETE aux5 {-27..9}
DISCRETE aux6 {-9..9}
DISCRETE aux7 {-27..9}
DISCRETE aux8 {-9..9}
DISCRETE aux9 {-27..9}
DISCRETE aux10 {-9..9}
DISCRETE aux11 {-27..9}
DISCRETE aux12 {-9..9}
DISCRETE aux13 {-27..9}
DISCRETE aux14 {-9..9}
DISCRETE aux15 {-27..9}
DISCRETE aux16 {-9..9}
DISCRETE aux17 {-27..9}
DISCRETE aux18 {-9..9}
DISCRETE aux19 {-27..9}
DISCRETE aux20 {-9..9}
DISCRETE aux21 {-27..9}
DISCRETE aux22 {-9..9}
DISCRETE aux23 {-27..9}
DISCRETE aux24 {-9..9}
DISCRETE aux25 {-27..9}
DISCRETE aux26 {-9..9}
DISCRETE aux27 {-27..9}
DISCRETE aux28 {-9..9}
DISCRETE aux29 {-27..9}
DISCRETE aux30 {-9..9}
DISCRETE aux31 {-27..9}
DISCRETE aux32 {-9..9}
DISCRETE aux33 {-27..9}
DISCRETE aux34 {-9..9}
DISCRETE aux35 {-27..9}
DISCRETE aux36 {-9..9}
DISCRETE aux37 {-27..9}
DISCRETE aux38 {-9..9}
DISCRETE aux39 {-27..9}
DISCRETE aux40 {-9..9}
DISCRETE aux41 {-27..9}
DISCRETE aux42 {-9..9}
DISCRETE aux43 {-27..9}
DISCRETE aux44 {-9..9}
DISCRETE aux45 {-27..9}
DISCRETE aux46 {-9..9}
DISCRETE aux47 {-27..9}
DISCRETE aux48 {-9..9}
DISCRETE aux49 {-27..9}
DISCRETE aux50 {-9..9}
DISCRETE aux51 {-27..9}
DISCRETE aux52 {-9..9}
DISCRETE aux53 {-27..9}
DISCRETE aux54 {-9..9}
DISCRETE aux55 {-27..9}
DISCRETE aux56 {-9..9}
DISCRETE aux57 {-27..9}
DISCRETE aux58 {-9..9}
DISCRETE aux59 {-27..9}
DISCRETE aux60 {-9..9}
DISCRETE aux61 {-27..9}
DISCRETE aux62 {-9..9}
DISCRETE aux63 {-27..9}
DISCRETE aux64 {-9..9}
DISCRETE aux65 {-27..9}
DISCRETE aux66 {-9..9}
DISCRETE aux67 {-27..9}
DISCRETE aux68 {-9..9}
DISCRETE aux69 {-27..9}
DISCRETE aux70 {-9..9}
DISCRETE aux71 {-27..9}
DISCRETE aux72 {-9..9}
DISCRETE aux73 {-27..9}
DISCRETE aux74 {-9..9}
DISCRETE aux75 {-27..9}
DISCRETE aux76 {-9..9}
DISCRETE aux77 {-27..9}
DISCRETE aux78 {-9..9}
DISCRETE aux79 {-27..9}
DISCRETE aux80 {-9..9}
DISCRETE aux81 {-27..9}
DISCRETE aux82 {-9..9}
DISCRETE aux83 {-27..9}
DISCRETE aux84 {-9..9}
DISCRETE aux85 {-27..9}
DISCRETE aux86 {-9..9}
DISCRETE aux87 {-27..9}
DISCRETE aux88 {-9..9}
DISCRETE aux89 {-27..9}

# aliases

**SEARCH**

PRINT [
[V0],[V1],[V2],[V3],[V4],[V5],[V6],[V7],
[V8],[V9]]

VARORDER [
V0,V1,V2,V3,V4,V5,V6,V7,
V8,V9,
aux0,aux1,aux2,aux3,aux4,aux5,aux6,aux7,
aux8,aux9,aux10,aux11,aux12,aux13,aux14,aux15,
aux16,aux17,aux18,aux19,aux20,aux21,aux22,aux23,
aux24,aux25,aux26,aux27,aux28,aux29,aux30,aux31,
aux32,aux33,aux34,aux35,aux36,aux37,aux38,aux39,
aux40,aux41,aux42,aux43,aux44,aux45,aux46,aux47,
aux48,aux49,aux50,aux51,aux52,aux53,aux54,aux55,
aux56,aux57,aux58,aux59,aux60,aux61,aux62,aux63,
aux64,aux65,aux66,aux67,aux68,aux69,aux70,aux71,
aux72,aux73,aux74,aux75,aux76,aux77,aux78,aux79,
aux80,aux81,aux82,aux83,aux84,aux85,aux86,aux87,
aux88,aux89]


**CONSTRAINTS**

weightedsumgeq([1,-1], [V8,V9], aux88)
weightedsumleq([1,-1], [V8,V9], aux88)
abs(aux89,aux88)
diseq(V8, V9)
diseq(1, aux89)
weightedsumgeq([1,-1], [V7,V9], aux86)
weightedsumleq([1,-1], [V7,V9], aux86)
abs(aux87,aux86)
diseq(V7, V9)
diseq(2, aux87)
weightedsumgeq([1,-1], [V7,V8], aux84)
weightedsumleq([1,-1], [V7,V8], aux84)
abs(aux85,aux84)
diseq(V7, V8)
diseq(1, aux85)
weightedsumgeq([1,-1], [V6,V9], aux82)
weightedsumleq([1,-1], [V6,V9], aux82)
abs(aux83,aux82)
diseq(V6, V9)
diseq(3, aux83)
weightedsumgeq([1,-1], [V6,V8], aux80)
weightedsumleq([1,-1], [V6,V8], aux80)
abs(aux81,aux80)
diseq(V6, V8)
diseq(2, aux81)
weightedsumgeq([1,-1], [V6,V7], aux78)
weightedsumleq([1,-1], [V6,V7], aux78)
abs(aux79,aux78)
diseq(V6, V7)
diseq(1, aux79)
weightedsumgeq([1,-1], [V5,V9], aux76)
weightedsumleq([1,-1], [V5,V9], aux76)
abs(aux77,aux76)
diseq(V5, V9)
diseq(4, aux77)
weightedsumgeq([1,-1], [V5,V8], aux74)
weightedsumleq([1,-1], [V5,V8], aux74)
abs(aux75,aux74)
diseq(V5, V8)
diseq(3, aux75)
weightedsumgeq([1,-1], [V5,V7], aux72)
weightedsumleq([1,-1], [V5,V7], aux72)
abs(aux73,aux72)
diseq(V5, V7)
diseq(2, aux73)
weightedsumgeq([1,-1], [V5,V6], aux70)
weightedsumleq([1,-1], [V5,V6], aux70)
abs(aux71,aux70)
diseq(V5, V6)
diseq(1, aux71)
weightedsumgeq([1,-1], [V4,V9], aux68)
weightedsumleq([1,-1], [V4,V9], aux68)
abs(aux69,aux68)
diseq(V4, V9)
diseq(5, aux69)
weightedsumgeq([1,-1], [V4,V8], aux66)
weightedsumleq([1,-1], [V4,V8], aux66)
abs(aux67,aux66)
diseq(V4, V8)
diseq(4, aux67)
weightedsumgeq([1,-1], [V4,V7], aux64)
weightedsumleq([1,-1], [V4,V7], aux64)
abs(aux65,aux64)
diseq(V4, V7)
diseq(3, aux65)
weightedsumgeq([1,-1], [V4,V6], aux62)
weightedsumleq([1,-1], [V4,V6], aux62)
abs(aux63,aux62)
diseq(V4, V6)
diseq(2, aux63)
weightedsumgeq([1,-1], [V4,V5], aux60)
weightedsumleq([1,-1], [V4,V5], aux60)
abs(aux61,aux60)
diseq(V4, V5)
diseq(1, aux61)
weightedsumgeq([1,-1], [V3,V9], aux58)
weightedsumleq([1,-1], [V3,V9], aux58)
abs(aux59,aux58)
diseq(V3, V9)
diseq(6, aux59)
weightedsumgeq([1,-1], [V3,V8], aux56)
weightedsumleq([1,-1], [V3,V8], aux56)
abs(aux57,aux56)
diseq(V3, V8)
diseq(5, aux57)
weightedsumgeq([1,-1], [V3,V7], aux54)
weightedsumleq([1,-1], [V3,V7], aux54)
abs(aux55,aux54)
diseq(V3, V7)
diseq(4, aux55)
weightedsumgeq([1,-1], [V3,V6], aux52)
weightedsumleq([1,-1], [V3,V6], aux52)
abs(aux53,aux52)
diseq(V3, V6)
diseq(3, aux53)
weightedsumgeq([1,-1], [V3,V5], aux50)
weightedsumleq([1,-1], [V3,V5], aux50)
abs(aux51,aux50)
diseq(V3, V5)
diseq(2, aux51)
weightedsumgeq([1,-1], [V3,V4], aux48)
weightedsumleq([1,-1], [V3,V4], aux48)
abs(aux49,aux48)
diseq(V3, V4)
diseq(1, aux49)
weightedsumgeq([1,-1], [V2,V9], aux46)
weightedsumleq([1,-1], [V2,V9], aux46)
abs(aux47,aux46)
diseq(V2, V9)
diseq(7, aux47)
weightedsumgeq([1,-1], [V2,V8], aux44)
weightedsumleq([1,-1], [V2,V8], aux44)
abs(aux45,aux44)
diseq(V2, V8)
diseq(6, aux45)
weightedsumgeq([1,-1], [V2,V7], aux42)
weightedsumleq([1,-1], [V2,V7], aux42)
abs(aux43,aux42)
diseq(V2, V7)
diseq(5, aux43)
weightedsumgeq([1,-1], [V2,V6], aux40)
weightedsumleq([1,-1], [V2,V6], aux40)
abs(aux41,aux40)
diseq(V2, V6)
diseq(4, aux41)
weightedsumgeq([1,-1], [V2,V5], aux38)
weightedsumleq([1,-1], [V2,V5], aux38)
abs(aux39,aux38)
diseq(V2, V5)
diseq(3, aux39)
weightedsumgeq([1,-1], [V2,V4], aux36)
weightedsumleq([1,-1], [V2,V4], aux36)
abs(aux37,aux36)
diseq(V2, V4)
diseq(2, aux37)
weightedsumgeq([1,-1], [V2,V3], aux34)
weightedsumleq([1,-1], [V2,V3], aux34)
abs(aux35,aux34)
diseq(V2, V3)
diseq(1, aux35)
weightedsumgeq([1,-1], [V1,V9], aux32)
weightedsumleq([1,-1], [V1,V9], aux32)
abs(aux33,aux32)
diseq(V1, V9)
diseq(8, aux33)
weightedsumgeq([1,-1], [V1,V8], aux30)
weightedsumleq([1,-1], [V1,V8], aux30)
abs(aux31,aux30)
diseq(V1, V8)
diseq(7, aux31)
weightedsumgeq([1,-1], [V1,V7], aux28)
weightedsumleq([1,-1], [V1,V7], aux28)
abs(aux29,aux28)
diseq(V1, V7)
diseq(6, aux29)
weightedsumgeq([1,-1], [V1,V6], aux26)
weightedsumleq([1,-1], [V1,V6], aux26)
abs(aux27,aux26)
diseq(V1, V6)
diseq(5, aux27)
weightedsumgeq([1,-1], [V1,V5], aux24)
weightedsumleq([1,-1], [V1,V5], aux24)
abs(aux25,aux24)
diseq(V1, V5)
diseq(4, aux25)
weightedsumgeq([1,-1], [V1,V4], aux22)
weightedsumleq([1,-1], [V1,V4], aux22)
abs(aux23,aux22)
diseq(V1, V4)
diseq(3, aux23)
weightedsumgeq([1,-1], [V1,V3], aux20)
weightedsumleq([1,-1], [V1,V3], aux20)
abs(aux21,aux20)
diseq(V1, V3)
diseq(2, aux21)
weightedsumgeq([1,-1], [V1,V2], aux18)
weightedsumleq([1,-1], [V1,V2], aux18)
abs(aux19,aux18)
diseq(V1, V2)
diseq(1, aux19)
weightedsumgeq([1,-1], [V0,V9], aux16)
weightedsumleq([1,-1], [V0,V9], aux16)
abs(aux17,aux16)
diseq(V0, V9)
diseq(9, aux17)
weightedsumgeq([1,-1], [V0,V8], aux14)
weightedsumleq([1,-1], [V0,V8], aux14)
abs(aux15,aux14)
diseq(V0, V8)
diseq(8, aux15)
weightedsumgeq([1,-1], [V0,V7], aux12)
weightedsumleq([1,-1], [V0,V7], aux12)
abs(aux13,aux12)
diseq(V0, V7)
diseq(7, aux13)
weightedsumgeq([1,-1], [V0,V6], aux10)
weightedsumleq([1,-1], [V0,V6], aux10)
abs(aux11,aux10)
diseq(V0, V6)
diseq(6, aux11)
weightedsumgeq([1,-1], [V0,V5], aux8)
weightedsumleq([1,-1], [V0,V5], aux8)
abs(aux9,aux8)
diseq(V0, V5)
diseq(5, aux9)
weightedsumgeq([1,-1], [V0,V4], aux6)
weightedsumleq([1,-1], [V0,V4], aux6)
abs(aux7,aux6)
diseq(V0, V4)
diseq(4, aux7)
weightedsumgeq([1,-1], [V0,V3], aux4)
weightedsumleq([1,-1], [V0,V3], aux4)
abs(aux5,aux4)
diseq(V0, V3)
diseq(3, aux5)
weightedsumgeq([1,-1], [V0,V2], aux2)
weightedsumleq([1,-1], [V0,V2], aux2)
abs(aux3,aux2)
diseq(V0, V2)
diseq(2, aux3)
weightedsumgeq([1,-1], [V0,V1], aux0)
weightedsumleq([1,-1], [V0,V1], aux0)
abs(aux1,aux0)
diseq(V0, V1)
diseq(1, aux1)

**EOF**
