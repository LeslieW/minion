MINION 3

#This file has been automatically generated by TAILOR v0.2
#bug-reports: andrea@cs.st-and.ac.uk

# amount of common subexpressions used:130
# amount of inferred common subexpressions used:0
# amount of original variables saved (over direct equality):0
# amount of constraints:455
# amount of auxiliary variables: 250

**VARIABLES**
DISCRETE V0 {0..9}
DISCRETE V1 {0..9}
DISCRETE V2 {0..9}
DISCRETE V3 {0..9}
DISCRETE V4 {0..9}
DISCRETE V5 {0..9}
DISCRETE V6 {0..9}
DISCRETE V7 {0..9}
DISCRETE V8 {0..9}
DISCRETE V9 {0..9}
DISCRETE V10 {0..99}
DISCRETE V11 {0..99}
DISCRETE V12 {0..99}
DISCRETE V13 {0..99}
DISCRETE V14 {0..99}

# auxiliary variables
DISCRETE aux0 {-9..9}
DISCRETE aux1 {0..9}
DISCRETE aux2 {-9..9}
DISCRETE aux3 {0..9}
DISCRETE aux4 {-9..9}
DISCRETE aux5 {0..9}
DISCRETE aux6 {-9..9}
DISCRETE aux7 {0..9}
DISCRETE aux8 {-9..9}
DISCRETE aux9 {0..9}
DISCRETE aux10 {-9..9}
DISCRETE aux11 {0..9}
DISCRETE aux12 {-9..9}
DISCRETE aux13 {0..9}
DISCRETE aux14 {-9..9}
DISCRETE aux15 {0..9}
DISCRETE aux16 {-9..9}
DISCRETE aux17 {0..9}
DISCRETE aux18 {-9..9}
DISCRETE aux19 {0..9}
DISCRETE aux20 {-9..9}
DISCRETE aux21 {0..9}
DISCRETE aux22 {-9..9}
DISCRETE aux23 {0..9}
DISCRETE aux24 {-9..9}
DISCRETE aux25 {0..9}
DISCRETE aux26 {-9..9}
DISCRETE aux27 {0..9}
DISCRETE aux28 {-9..9}
DISCRETE aux29 {0..9}
DISCRETE aux30 {-9..9}
DISCRETE aux31 {0..9}
DISCRETE aux32 {-9..9}
DISCRETE aux33 {0..9}
DISCRETE aux34 {-9..9}
DISCRETE aux35 {0..9}
DISCRETE aux36 {-9..9}
DISCRETE aux37 {0..9}
DISCRETE aux38 {-9..9}
DISCRETE aux39 {0..9}
DISCRETE aux40 {-9..9}
DISCRETE aux41 {0..9}
DISCRETE aux42 {-9..9}
DISCRETE aux43 {0..9}
DISCRETE aux44 {-9..9}
DISCRETE aux45 {0..9}
DISCRETE aux46 {-9..9}
DISCRETE aux47 {0..9}
DISCRETE aux48 {-9..9}
DISCRETE aux49 {0..9}
DISCRETE aux50 {-9..9}
DISCRETE aux51 {0..9}
DISCRETE aux52 {-9..9}
DISCRETE aux53 {0..9}
DISCRETE aux54 {-9..9}
DISCRETE aux55 {0..9}
DISCRETE aux56 {-9..9}
DISCRETE aux57 {0..9}
DISCRETE aux58 {-9..9}
DISCRETE aux59 {0..9}
DISCRETE aux60 {-9..9}
DISCRETE aux61 {0..9}
DISCRETE aux62 {-9..9}
DISCRETE aux63 {0..9}
DISCRETE aux64 {-9..9}
DISCRETE aux65 {0..9}
DISCRETE aux66 {-9..9}
DISCRETE aux67 {0..9}
DISCRETE aux68 {-9..9}
DISCRETE aux69 {0..9}
DISCRETE aux70 {-9..9}
DISCRETE aux71 {0..9}
DISCRETE aux72 {-9..9}
DISCRETE aux73 {0..9}
DISCRETE aux74 {-9..9}
DISCRETE aux75 {0..9}
DISCRETE aux76 {-9..9}
DISCRETE aux77 {0..9}
DISCRETE aux78 {-9..9}
DISCRETE aux79 {0..9}
DISCRETE aux80 {-9..9}
DISCRETE aux81 {0..9}
DISCRETE aux82 {-9..9}
DISCRETE aux83 {0..9}
DISCRETE aux84 {-9..9}
DISCRETE aux85 {0..9}
DISCRETE aux86 {-9..9}
DISCRETE aux87 {0..9}
DISCRETE aux88 {-9..9}
DISCRETE aux89 {0..9}
DISCRETE aux90 {0..9}
DISCRETE aux91 {0..9}
DISCRETE aux92 {-9..9}
DISCRETE aux93 {0..9}
BOOL aux94 
DISCRETE aux95 {0..9}
DISCRETE aux96 {0..9}
DISCRETE aux97 {-9..9}
DISCRETE aux98 {0..9}
BOOL aux99 
BOOL aux100 
BOOL aux101 
BOOL aux102 
BOOL aux103 
DISCRETE aux104 {0..9}
DISCRETE aux105 {-9..9}
DISCRETE aux106 {0..9}
BOOL aux107 
DISCRETE aux108 {0..9}
DISCRETE aux109 {-9..9}
DISCRETE aux110 {0..9}
BOOL aux111 
BOOL aux112 
BOOL aux113 
BOOL aux114 
BOOL aux115 
DISCRETE aux116 {0..9}
DISCRETE aux117 {-9..9}
DISCRETE aux118 {0..9}
BOOL aux119 
DISCRETE aux120 {0..9}
DISCRETE aux121 {-9..9}
DISCRETE aux122 {0..9}
BOOL aux123 
BOOL aux124 
BOOL aux125 
BOOL aux126 
BOOL aux127 
DISCRETE aux128 {0..9}
DISCRETE aux129 {-9..9}
DISCRETE aux130 {0..9}
BOOL aux131 
DISCRETE aux132 {0..9}
DISCRETE aux133 {-9..9}
DISCRETE aux134 {0..9}
BOOL aux135 
BOOL aux136 
BOOL aux137 
BOOL aux138 
BOOL aux139 
DISCRETE aux140 {-9..9}
DISCRETE aux141 {0..9}
BOOL aux142 
DISCRETE aux143 {-9..9}
DISCRETE aux144 {0..9}
BOOL aux145 
BOOL aux146 
BOOL aux147 
BOOL aux148 
BOOL aux149 
BOOL aux150 
BOOL aux151 
BOOL aux152 
BOOL aux153 
BOOL aux154 
BOOL aux155 
BOOL aux156 
BOOL aux157 
BOOL aux158 
BOOL aux159 
BOOL aux160 
BOOL aux161 
BOOL aux162 
BOOL aux163 
BOOL aux164 
BOOL aux165 
BOOL aux166 
BOOL aux167 
BOOL aux168 
BOOL aux169 
BOOL aux170 
BOOL aux171 
BOOL aux172 
BOOL aux173 
BOOL aux174 
BOOL aux175 
BOOL aux176 
BOOL aux177 
BOOL aux178 
BOOL aux179 
BOOL aux180 
BOOL aux181 
BOOL aux182 
BOOL aux183 
BOOL aux184 
BOOL aux185 
BOOL aux186 
BOOL aux187 
BOOL aux188 
BOOL aux189 
BOOL aux190 
BOOL aux191 
BOOL aux192 
BOOL aux193 
BOOL aux194 
BOOL aux195 
BOOL aux196 
BOOL aux197 
BOOL aux198 
BOOL aux199 
BOOL aux200 
BOOL aux201 
BOOL aux202 
BOOL aux203 
BOOL aux204 
BOOL aux205 
BOOL aux206 
BOOL aux207 
BOOL aux208 
BOOL aux209 
BOOL aux210 
BOOL aux211 
BOOL aux212 
BOOL aux213 
BOOL aux214 
BOOL aux215 
BOOL aux216 
BOOL aux217 
BOOL aux218 
BOOL aux219 
BOOL aux220 
BOOL aux221 
BOOL aux222 
BOOL aux223 
BOOL aux224 
BOOL aux225 
BOOL aux226 
BOOL aux227 
BOOL aux228 
BOOL aux229 
BOOL aux230 
BOOL aux231 
BOOL aux232 
BOOL aux233 
BOOL aux234 
BOOL aux235 
BOOL aux236 
BOOL aux237 
BOOL aux238 
BOOL aux239 
BOOL aux240 
BOOL aux241 
BOOL aux242 
BOOL aux243 
BOOL aux244 
BOOL aux245 
BOOL aux246 
BOOL aux247 
BOOL aux248 
BOOL aux249 

# aliases

**SEARCH**

PRINT [
[V0],[V1],[V2],[V3],[V4],[V5],[V6],[V7],
[V8],[V9],[V10],[V11],[V12],[V13],[V14]]

VARORDER [
V0,V1,V2,V3,V4,V5,V6,V7,
V8,V9,V10,V11,V12,V13,V14,
aux0,aux1,aux2,aux3,aux4,aux5,aux6,aux7,
aux8,aux9,aux10,aux11,aux12,aux13,aux14,aux15,
aux16,aux17,aux18,aux19,aux20,aux21,aux22,aux23,
aux24,aux25,aux26,aux27,aux28,aux29,aux30,aux31,
aux32,aux33,aux34,aux35,aux36,aux37,aux38,aux39,
aux40,aux41,aux42,aux43,aux44,aux45,aux46,aux47,
aux48,aux49,aux50,aux51,aux52,aux53,aux54,aux55,
aux56,aux57,aux58,aux59,aux60,aux61,aux62,aux63,
aux64,aux65,aux66,aux67,aux68,aux69,aux70,aux71,
aux72,aux73,aux74,aux75,aux76,aux77,aux78,aux79,
aux80,aux81,aux82,aux83,aux84,aux85,aux86,aux87,
aux88,aux89,aux90,aux91,aux92,aux93,aux94,aux95,
aux96,aux97,aux98,aux99,aux100,aux101,aux102,aux103,
aux104,aux105,aux106,aux107,aux108,aux109,aux110,aux111,
aux112,aux113,aux114,aux115,aux116,aux117,aux118,aux119,
aux120,aux121,aux122,aux123,aux124,aux125,aux126,aux127,
aux128,aux129,aux130,aux131,aux132,aux133,aux134,aux135,
aux136,aux137,aux138,aux139,aux140,aux141,aux142,aux143,
aux144,aux145,aux146,aux147,aux148,aux149,aux150,aux151,
aux152,aux153,aux154,aux155,aux156,aux157,aux158,aux159,
aux160,aux161,aux162,aux163,aux164,aux165,aux166,aux167,
aux168,aux169,aux170,aux171,aux172,aux173,aux174,aux175,
aux176,aux177,aux178,aux179,aux180,aux181,aux182,aux183,
aux184,aux185,aux186,aux187,aux188,aux189,aux190,aux191,
aux192,aux193,aux194,aux195,aux196,aux197,aux198,aux199,
aux200,aux201,aux202,aux203,aux204,aux205,aux206,aux207,
aux208,aux209,aux210,aux211,aux212,aux213,aux214,aux215,
aux216,aux217,aux218,aux219,aux220,aux221,aux222,aux223,
aux224,aux225,aux226,aux227,aux228,aux229,aux230,aux231,
aux232,aux233,aux234,aux235,aux236,aux237,aux238,aux239,
aux240,aux241,aux242,aux243,aux244,aux245,aux246,aux247,
aux248,aux249]


**CONSTRAINTS**

reify(diseq(V9, aux132), aux248)
reify(diseq(9, aux128), aux249)
watchsumgeq([aux249,aux248], 1)
reify(diseq(V9, aux120), aux246)
reify(diseq(9, aux116), aux247)
watchsumgeq([aux247,aux246], 1)
reify(diseq(V9, aux108), aux244)
reify(diseq(9, aux104), aux245)
watchsumgeq([aux245,aux244], 1)
reify(diseq(V9, aux96), aux242)
reify(diseq(9, aux91), aux243)
watchsumgeq([aux243,aux242], 1)
reify(diseq(V9, aux95), aux240)
reify(diseq(9, aux90), aux241)
watchsumgeq([aux241,aux240], 1)
reify(diseq(V8, aux132), aux238)
reify(diseq(8, aux128), aux239)
watchsumgeq([aux239,aux238], 1)
reify(diseq(V8, aux120), aux236)
reify(diseq(8, aux116), aux237)
watchsumgeq([aux237,aux236], 1)
reify(diseq(V8, aux108), aux234)
reify(diseq(8, aux104), aux235)
watchsumgeq([aux235,aux234], 1)
reify(diseq(V8, aux96), aux232)
reify(diseq(8, aux91), aux233)
watchsumgeq([aux233,aux232], 1)
reify(diseq(V8, aux95), aux230)
reify(diseq(8, aux90), aux231)
watchsumgeq([aux231,aux230], 1)
reify(diseq(V7, aux132), aux228)
reify(diseq(7, aux128), aux229)
watchsumgeq([aux229,aux228], 1)
reify(diseq(V7, aux120), aux226)
reify(diseq(7, aux116), aux227)
watchsumgeq([aux227,aux226], 1)
reify(diseq(V7, aux108), aux224)
reify(diseq(7, aux104), aux225)
watchsumgeq([aux225,aux224], 1)
reify(diseq(V7, aux96), aux222)
reify(diseq(7, aux91), aux223)
watchsumgeq([aux223,aux222], 1)
reify(diseq(V7, aux95), aux220)
reify(diseq(7, aux90), aux221)
watchsumgeq([aux221,aux220], 1)
reify(diseq(V6, aux132), aux218)
reify(diseq(6, aux128), aux219)
watchsumgeq([aux219,aux218], 1)
reify(diseq(V6, aux120), aux216)
reify(diseq(6, aux116), aux217)
watchsumgeq([aux217,aux216], 1)
reify(diseq(V6, aux108), aux214)
reify(diseq(6, aux104), aux215)
watchsumgeq([aux215,aux214], 1)
reify(diseq(V6, aux96), aux212)
reify(diseq(6, aux91), aux213)
watchsumgeq([aux213,aux212], 1)
reify(diseq(V6, aux95), aux210)
reify(diseq(6, aux90), aux211)
watchsumgeq([aux211,aux210], 1)
reify(diseq(V5, aux132), aux208)
reify(diseq(5, aux128), aux209)
watchsumgeq([aux209,aux208], 1)
reify(diseq(V5, aux120), aux206)
reify(diseq(5, aux116), aux207)
watchsumgeq([aux207,aux206], 1)
reify(diseq(V5, aux108), aux204)
reify(diseq(5, aux104), aux205)
watchsumgeq([aux205,aux204], 1)
reify(diseq(V5, aux96), aux202)
reify(diseq(5, aux91), aux203)
watchsumgeq([aux203,aux202], 1)
reify(diseq(V5, aux95), aux200)
reify(diseq(5, aux90), aux201)
watchsumgeq([aux201,aux200], 1)
reify(diseq(V4, aux132), aux198)
reify(diseq(4, aux128), aux199)
watchsumgeq([aux199,aux198], 1)
reify(diseq(V4, aux120), aux196)
reify(diseq(4, aux116), aux197)
watchsumgeq([aux197,aux196], 1)
reify(diseq(V4, aux108), aux194)
reify(diseq(4, aux104), aux195)
watchsumgeq([aux195,aux194], 1)
reify(diseq(V4, aux96), aux192)
reify(diseq(4, aux91), aux193)
watchsumgeq([aux193,aux192], 1)
reify(diseq(V4, aux95), aux190)
reify(diseq(4, aux90), aux191)
watchsumgeq([aux191,aux190], 1)
reify(diseq(V3, aux132), aux188)
reify(diseq(3, aux128), aux189)
watchsumgeq([aux189,aux188], 1)
reify(diseq(V3, aux120), aux186)
reify(diseq(3, aux116), aux187)
watchsumgeq([aux187,aux186], 1)
reify(diseq(V3, aux108), aux184)
reify(diseq(3, aux104), aux185)
watchsumgeq([aux185,aux184], 1)
reify(diseq(V3, aux96), aux182)
reify(diseq(3, aux91), aux183)
watchsumgeq([aux183,aux182], 1)
reify(diseq(V3, aux95), aux180)
reify(diseq(3, aux90), aux181)
watchsumgeq([aux181,aux180], 1)
reify(diseq(V2, aux132), aux178)
reify(diseq(2, aux128), aux179)
watchsumgeq([aux179,aux178], 1)
reify(diseq(V2, aux120), aux176)
reify(diseq(2, aux116), aux177)
watchsumgeq([aux177,aux176], 1)
reify(diseq(V2, aux108), aux174)
reify(diseq(2, aux104), aux175)
watchsumgeq([aux175,aux174], 1)
reify(diseq(V2, aux96), aux172)
reify(diseq(2, aux91), aux173)
watchsumgeq([aux173,aux172], 1)
reify(diseq(V2, aux95), aux170)
reify(diseq(2, aux90), aux171)
watchsumgeq([aux171,aux170], 1)
reify(diseq(V1, aux132), aux168)
reify(diseq(1, aux128), aux169)
watchsumgeq([aux169,aux168], 1)
reify(diseq(V1, aux120), aux166)
reify(diseq(1, aux116), aux167)
watchsumgeq([aux167,aux166], 1)
reify(diseq(V1, aux108), aux164)
reify(diseq(1, aux104), aux165)
watchsumgeq([aux165,aux164], 1)
reify(diseq(V1, aux96), aux162)
reify(diseq(1, aux91), aux163)
watchsumgeq([aux163,aux162], 1)
reify(diseq(V1, aux95), aux160)
reify(diseq(1, aux90), aux161)
watchsumgeq([aux161,aux160], 1)
reify(diseq(V0, aux132), aux158)
reify(diseq(0, aux128), aux159)
watchsumgeq([aux159,aux158], 1)
reify(diseq(V0, aux120), aux156)
reify(diseq(0, aux116), aux157)
watchsumgeq([aux157,aux156], 1)
reify(diseq(V0, aux108), aux154)
reify(diseq(0, aux104), aux155)
watchsumgeq([aux155,aux154], 1)
reify(diseq(V0, aux96), aux152)
reify(diseq(0, aux91), aux153)
watchsumgeq([aux153,aux152], 1)
reify(diseq(V0, aux95), aux150)
reify(diseq(0, aux90), aux151)
watchsumgeq([aux151,aux150], 1)
weightedsumgeq([1,-1], [aux128,aux90], aux140)
weightedsumleq([1,-1], [aux128,aux90], aux140)
abs(aux141,aux140)
reify(eq(2, aux141), aux142)
weightedsumgeq([1,-1], [aux132,aux95], aux143)
weightedsumleq([1,-1], [aux132,aux95], aux143)
abs(aux144,aux143)
reify(eq(1, aux144), aux145)
reify(sumgeq([aux145,aux142], 2), aux146)
reify(eq(2, aux144), aux147)
reify(eq(1, aux141), aux148)
reify(sumgeq([aux148,aux147], 2), aux149)
watchsumgeq([aux149,aux146], 1)
div(V14, 10, aux128)
weightedsumgeq([1,-1], [aux116,aux128], aux129)
weightedsumleq([1,-1], [aux116,aux128], aux129)
abs(aux130,aux129)
reify(eq(2, aux130), aux131)
modulo(V14, 10, aux132)
weightedsumgeq([1,-1], [aux120,aux132], aux133)
weightedsumleq([1,-1], [aux120,aux132], aux133)
abs(aux134,aux133)
reify(eq(1, aux134), aux135)
reify(sumgeq([aux135,aux131], 2), aux136)
reify(eq(2, aux134), aux137)
reify(eq(1, aux130), aux138)
reify(sumgeq([aux138,aux137], 2), aux139)
watchsumgeq([aux139,aux136], 1)
diseq(V12, V14)
div(V13, 10, aux116)
weightedsumgeq([1,-1], [aux104,aux116], aux117)
weightedsumleq([1,-1], [aux104,aux116], aux117)
abs(aux118,aux117)
reify(eq(2, aux118), aux119)
modulo(V13, 10, aux120)
weightedsumgeq([1,-1], [aux108,aux120], aux121)
weightedsumleq([1,-1], [aux108,aux120], aux121)
abs(aux122,aux121)
reify(eq(1, aux122), aux123)
reify(sumgeq([aux123,aux119], 2), aux124)
reify(eq(2, aux122), aux125)
reify(eq(1, aux118), aux126)
reify(sumgeq([aux126,aux125], 2), aux127)
watchsumgeq([aux127,aux124], 1)
diseq(V11, V14)
diseq(V11, V13)
div(V12, 10, aux104)
weightedsumgeq([1,-1], [aux91,aux104], aux105)
weightedsumleq([1,-1], [aux91,aux104], aux105)
abs(aux106,aux105)
reify(eq(2, aux106), aux107)
modulo(V12, 10, aux108)
weightedsumgeq([1,-1], [aux96,aux108], aux109)
weightedsumleq([1,-1], [aux96,aux108], aux109)
abs(aux110,aux109)
reify(eq(1, aux110), aux111)
reify(sumgeq([aux111,aux107], 2), aux112)
reify(eq(2, aux110), aux113)
reify(eq(1, aux106), aux114)
reify(sumgeq([aux114,aux113], 2), aux115)
watchsumgeq([aux115,aux112], 1)
diseq(V10, V13)
diseq(V10, V12)
div(V10, 10, aux90)
div(V11, 10, aux91)
weightedsumgeq([1,-1], [aux90,aux91], aux92)
weightedsumleq([1,-1], [aux90,aux91], aux92)
abs(aux93,aux92)
reify(eq(2, aux93), aux94)
modulo(V10, 10, aux95)
modulo(V11, 10, aux96)
weightedsumgeq([1,-1], [aux95,aux96], aux97)
weightedsumleq([1,-1], [aux95,aux96], aux97)
abs(aux98,aux97)
reify(eq(1, aux98), aux99)
reify(sumgeq([aux99,aux94], 2), aux100)
reify(eq(2, aux98), aux101)
reify(eq(1, aux93), aux102)
reify(sumgeq([aux102,aux101], 2), aux103)
watchsumgeq([aux103,aux100], 1)
weightedsumgeq([1,-1], [V8,V9], aux88)
weightedsumleq([1,-1], [V8,V9], aux88)
abs(aux89,aux88)
diseq(V8, V9)
diseq(1, aux89)
weightedsumgeq([1,-1], [V7,V9], aux86)
weightedsumleq([1,-1], [V7,V9], aux86)
abs(aux87,aux86)
diseq(V7, V9)
diseq(2, aux87)
weightedsumgeq([1,-1], [V7,V8], aux84)
weightedsumleq([1,-1], [V7,V8], aux84)
abs(aux85,aux84)
diseq(V7, V8)
diseq(1, aux85)
weightedsumgeq([1,-1], [V6,V9], aux82)
weightedsumleq([1,-1], [V6,V9], aux82)
abs(aux83,aux82)
diseq(V6, V9)
diseq(3, aux83)
weightedsumgeq([1,-1], [V6,V8], aux80)
weightedsumleq([1,-1], [V6,V8], aux80)
abs(aux81,aux80)
diseq(V6, V8)
diseq(2, aux81)
weightedsumgeq([1,-1], [V6,V7], aux78)
weightedsumleq([1,-1], [V6,V7], aux78)
abs(aux79,aux78)
diseq(V6, V7)
diseq(1, aux79)
weightedsumgeq([1,-1], [V5,V9], aux76)
weightedsumleq([1,-1], [V5,V9], aux76)
abs(aux77,aux76)
diseq(V5, V9)
diseq(4, aux77)
weightedsumgeq([1,-1], [V5,V8], aux74)
weightedsumleq([1,-1], [V5,V8], aux74)
abs(aux75,aux74)
diseq(V5, V8)
diseq(3, aux75)
weightedsumgeq([1,-1], [V5,V7], aux72)
weightedsumleq([1,-1], [V5,V7], aux72)
abs(aux73,aux72)
diseq(V5, V7)
diseq(2, aux73)
weightedsumgeq([1,-1], [V5,V6], aux70)
weightedsumleq([1,-1], [V5,V6], aux70)
abs(aux71,aux70)
diseq(V5, V6)
diseq(1, aux71)
weightedsumgeq([1,-1], [V4,V9], aux68)
weightedsumleq([1,-1], [V4,V9], aux68)
abs(aux69,aux68)
diseq(V4, V9)
diseq(5, aux69)
weightedsumgeq([1,-1], [V4,V8], aux66)
weightedsumleq([1,-1], [V4,V8], aux66)
abs(aux67,aux66)
diseq(V4, V8)
diseq(4, aux67)
weightedsumgeq([1,-1], [V4,V7], aux64)
weightedsumleq([1,-1], [V4,V7], aux64)
abs(aux65,aux64)
diseq(V4, V7)
diseq(3, aux65)
weightedsumgeq([1,-1], [V4,V6], aux62)
weightedsumleq([1,-1], [V4,V6], aux62)
abs(aux63,aux62)
diseq(V4, V6)
diseq(2, aux63)
weightedsumgeq([1,-1], [V4,V5], aux60)
weightedsumleq([1,-1], [V4,V5], aux60)
abs(aux61,aux60)
diseq(V4, V5)
diseq(1, aux61)
weightedsumgeq([1,-1], [V3,V9], aux58)
weightedsumleq([1,-1], [V3,V9], aux58)
abs(aux59,aux58)
diseq(V3, V9)
diseq(6, aux59)
weightedsumgeq([1,-1], [V3,V8], aux56)
weightedsumleq([1,-1], [V3,V8], aux56)
abs(aux57,aux56)
diseq(V3, V8)
diseq(5, aux57)
weightedsumgeq([1,-1], [V3,V7], aux54)
weightedsumleq([1,-1], [V3,V7], aux54)
abs(aux55,aux54)
diseq(V3, V7)
diseq(4, aux55)
weightedsumgeq([1,-1], [V3,V6], aux52)
weightedsumleq([1,-1], [V3,V6], aux52)
abs(aux53,aux52)
diseq(V3, V6)
diseq(3, aux53)
weightedsumgeq([1,-1], [V3,V5], aux50)
weightedsumleq([1,-1], [V3,V5], aux50)
abs(aux51,aux50)
diseq(V3, V5)
diseq(2, aux51)
weightedsumgeq([1,-1], [V3,V4], aux48)
weightedsumleq([1,-1], [V3,V4], aux48)
abs(aux49,aux48)
diseq(V3, V4)
diseq(1, aux49)
weightedsumgeq([1,-1], [V2,V9], aux46)
weightedsumleq([1,-1], [V2,V9], aux46)
abs(aux47,aux46)
diseq(V2, V9)
diseq(7, aux47)
weightedsumgeq([1,-1], [V2,V8], aux44)
weightedsumleq([1,-1], [V2,V8], aux44)
abs(aux45,aux44)
diseq(V2, V8)
diseq(6, aux45)
weightedsumgeq([1,-1], [V2,V7], aux42)
weightedsumleq([1,-1], [V2,V7], aux42)
abs(aux43,aux42)
diseq(V2, V7)
diseq(5, aux43)
weightedsumgeq([1,-1], [V2,V6], aux40)
weightedsumleq([1,-1], [V2,V6], aux40)
abs(aux41,aux40)
diseq(V2, V6)
diseq(4, aux41)
weightedsumgeq([1,-1], [V2,V5], aux38)
weightedsumleq([1,-1], [V2,V5], aux38)
abs(aux39,aux38)
diseq(V2, V5)
diseq(3, aux39)
weightedsumgeq([1,-1], [V2,V4], aux36)
weightedsumleq([1,-1], [V2,V4], aux36)
abs(aux37,aux36)
diseq(V2, V4)
diseq(2, aux37)
weightedsumgeq([1,-1], [V2,V3], aux34)
weightedsumleq([1,-1], [V2,V3], aux34)
abs(aux35,aux34)
diseq(V2, V3)
diseq(1, aux35)
weightedsumgeq([1,-1], [V1,V9], aux32)
weightedsumleq([1,-1], [V1,V9], aux32)
abs(aux33,aux32)
diseq(V1, V9)
diseq(8, aux33)
weightedsumgeq([1,-1], [V1,V8], aux30)
weightedsumleq([1,-1], [V1,V8], aux30)
abs(aux31,aux30)
diseq(V1, V8)
diseq(7, aux31)
weightedsumgeq([1,-1], [V1,V7], aux28)
weightedsumleq([1,-1], [V1,V7], aux28)
abs(aux29,aux28)
diseq(V1, V7)
diseq(6, aux29)
weightedsumgeq([1,-1], [V1,V6], aux26)
weightedsumleq([1,-1], [V1,V6], aux26)
abs(aux27,aux26)
diseq(V1, V6)
diseq(5, aux27)
weightedsumgeq([1,-1], [V1,V5], aux24)
weightedsumleq([1,-1], [V1,V5], aux24)
abs(aux25,aux24)
diseq(V1, V5)
diseq(4, aux25)
weightedsumgeq([1,-1], [V1,V4], aux22)
weightedsumleq([1,-1], [V1,V4], aux22)
abs(aux23,aux22)
diseq(V1, V4)
diseq(3, aux23)
weightedsumgeq([1,-1], [V1,V3], aux20)
weightedsumleq([1,-1], [V1,V3], aux20)
abs(aux21,aux20)
diseq(V1, V3)
diseq(2, aux21)
weightedsumgeq([1,-1], [V1,V2], aux18)
weightedsumleq([1,-1], [V1,V2], aux18)
abs(aux19,aux18)
diseq(V1, V2)
diseq(1, aux19)
weightedsumgeq([1,-1], [V0,V9], aux16)
weightedsumleq([1,-1], [V0,V9], aux16)
abs(aux17,aux16)
diseq(V0, V9)
diseq(9, aux17)
weightedsumgeq([1,-1], [V0,V8], aux14)
weightedsumleq([1,-1], [V0,V8], aux14)
abs(aux15,aux14)
diseq(V0, V8)
diseq(8, aux15)
weightedsumgeq([1,-1], [V0,V7], aux12)
weightedsumleq([1,-1], [V0,V7], aux12)
abs(aux13,aux12)
diseq(V0, V7)
diseq(7, aux13)
weightedsumgeq([1,-1], [V0,V6], aux10)
weightedsumleq([1,-1], [V0,V6], aux10)
abs(aux11,aux10)
diseq(V0, V6)
diseq(6, aux11)
weightedsumgeq([1,-1], [V0,V5], aux8)
weightedsumleq([1,-1], [V0,V5], aux8)
abs(aux9,aux8)
diseq(V0, V5)
diseq(5, aux9)
weightedsumgeq([1,-1], [V0,V4], aux6)
weightedsumleq([1,-1], [V0,V4], aux6)
abs(aux7,aux6)
diseq(V0, V4)
diseq(4, aux7)
weightedsumgeq([1,-1], [V0,V3], aux4)
weightedsumleq([1,-1], [V0,V3], aux4)
abs(aux5,aux4)
diseq(V0, V3)
diseq(3, aux5)
weightedsumgeq([1,-1], [V0,V2], aux2)
weightedsumleq([1,-1], [V0,V2], aux2)
abs(aux3,aux2)
diseq(V0, V2)
diseq(2, aux3)
weightedsumgeq([1,-1], [V0,V1], aux0)
weightedsumleq([1,-1], [V0,V1], aux0)
abs(aux1,aux0)
diseq(V0, V1)
diseq(1, aux1)

**EOF**
