MINION 3

#This file has been automatically generated by TAILOR v0.2
#bug-reports: andrea@cs.st-and.ac.uk

# amount of common subexpressions used:0
# amount of inferred common subexpressions used:0
# amount of original variables saved (over direct equality):0
# amount of constraints:330
# amount of auxiliary variables: 132

**VARIABLES**
DISCRETE V0 {1..12}
DISCRETE V1 {1..12}
DISCRETE V2 {1..12}
DISCRETE V3 {1..12}
DISCRETE V4 {1..12}
DISCRETE V5 {1..12}
DISCRETE V6 {1..12}
DISCRETE V7 {1..12}
DISCRETE V8 {1..12}
DISCRETE V9 {1..12}
DISCRETE V10 {1..12}
DISCRETE V11 {1..12}

# auxiliary variables
DISCRETE aux0 {-11..11}
DISCRETE aux1 {0..11}
DISCRETE aux2 {-11..11}
DISCRETE aux3 {0..11}
DISCRETE aux4 {-11..11}
DISCRETE aux5 {0..11}
DISCRETE aux6 {-11..11}
DISCRETE aux7 {0..11}
DISCRETE aux8 {-11..11}
DISCRETE aux9 {0..11}
DISCRETE aux10 {-11..11}
DISCRETE aux11 {0..11}
DISCRETE aux12 {-11..11}
DISCRETE aux13 {0..11}
DISCRETE aux14 {-11..11}
DISCRETE aux15 {0..11}
DISCRETE aux16 {-11..11}
DISCRETE aux17 {0..11}
DISCRETE aux18 {-11..11}
DISCRETE aux19 {0..11}
DISCRETE aux20 {-11..11}
DISCRETE aux21 {0..11}
DISCRETE aux22 {-11..11}
DISCRETE aux23 {0..11}
DISCRETE aux24 {-11..11}
DISCRETE aux25 {0..11}
DISCRETE aux26 {-11..11}
DISCRETE aux27 {0..11}
DISCRETE aux28 {-11..11}
DISCRETE aux29 {0..11}
DISCRETE aux30 {-11..11}
DISCRETE aux31 {0..11}
DISCRETE aux32 {-11..11}
DISCRETE aux33 {0..11}
DISCRETE aux34 {-11..11}
DISCRETE aux35 {0..11}
DISCRETE aux36 {-11..11}
DISCRETE aux37 {0..11}
DISCRETE aux38 {-11..11}
DISCRETE aux39 {0..11}
DISCRETE aux40 {-11..11}
DISCRETE aux41 {0..11}
DISCRETE aux42 {-11..11}
DISCRETE aux43 {0..11}
DISCRETE aux44 {-11..11}
DISCRETE aux45 {0..11}
DISCRETE aux46 {-11..11}
DISCRETE aux47 {0..11}
DISCRETE aux48 {-11..11}
DISCRETE aux49 {0..11}
DISCRETE aux50 {-11..11}
DISCRETE aux51 {0..11}
DISCRETE aux52 {-11..11}
DISCRETE aux53 {0..11}
DISCRETE aux54 {-11..11}
DISCRETE aux55 {0..11}
DISCRETE aux56 {-11..11}
DISCRETE aux57 {0..11}
DISCRETE aux58 {-11..11}
DISCRETE aux59 {0..11}
DISCRETE aux60 {-11..11}
DISCRETE aux61 {0..11}
DISCRETE aux62 {-11..11}
DISCRETE aux63 {0..11}
DISCRETE aux64 {-11..11}
DISCRETE aux65 {0..11}
DISCRETE aux66 {-11..11}
DISCRETE aux67 {0..11}
DISCRETE aux68 {-11..11}
DISCRETE aux69 {0..11}
DISCRETE aux70 {-11..11}
DISCRETE aux71 {0..11}
DISCRETE aux72 {-11..11}
DISCRETE aux73 {0..11}
DISCRETE aux74 {-11..11}
DISCRETE aux75 {0..11}
DISCRETE aux76 {-11..11}
DISCRETE aux77 {0..11}
DISCRETE aux78 {-11..11}
DISCRETE aux79 {0..11}
DISCRETE aux80 {-11..11}
DISCRETE aux81 {0..11}
DISCRETE aux82 {-11..11}
DISCRETE aux83 {0..11}
DISCRETE aux84 {-11..11}
DISCRETE aux85 {0..11}
DISCRETE aux86 {-11..11}
DISCRETE aux87 {0..11}
DISCRETE aux88 {-11..11}
DISCRETE aux89 {0..11}
DISCRETE aux90 {-11..11}
DISCRETE aux91 {0..11}
DISCRETE aux92 {-11..11}
DISCRETE aux93 {0..11}
DISCRETE aux94 {-11..11}
DISCRETE aux95 {0..11}
DISCRETE aux96 {-11..11}
DISCRETE aux97 {0..11}
DISCRETE aux98 {-11..11}
DISCRETE aux99 {0..11}
DISCRETE aux100 {-11..11}
DISCRETE aux101 {0..11}
DISCRETE aux102 {-11..11}
DISCRETE aux103 {0..11}
DISCRETE aux104 {-11..11}
DISCRETE aux105 {0..11}
DISCRETE aux106 {-11..11}
DISCRETE aux107 {0..11}
DISCRETE aux108 {-11..11}
DISCRETE aux109 {0..11}
DISCRETE aux110 {-11..11}
DISCRETE aux111 {0..11}
DISCRETE aux112 {-11..11}
DISCRETE aux113 {0..11}
DISCRETE aux114 {-11..11}
DISCRETE aux115 {0..11}
DISCRETE aux116 {-11..11}
DISCRETE aux117 {0..11}
DISCRETE aux118 {-11..11}
DISCRETE aux119 {0..11}
DISCRETE aux120 {-11..11}
DISCRETE aux121 {0..11}
DISCRETE aux122 {-11..11}
DISCRETE aux123 {0..11}
DISCRETE aux124 {-11..11}
DISCRETE aux125 {0..11}
DISCRETE aux126 {-11..11}
DISCRETE aux127 {0..11}
DISCRETE aux128 {-11..11}
DISCRETE aux129 {0..11}
DISCRETE aux130 {-11..11}
DISCRETE aux131 {0..11}

# aliases

**SEARCH**

PRINT [
[V0],[V1],[V2],[V3],[V4],[V5],[V6],[V7],
[V8],[V9],[V10],[V11]]

VARORDER [
V0,V1,V2,V3,V4,V5,V6,V7,
V8,V9,V10,V11,
aux0,aux1,aux2,aux3,aux4,aux5,aux6,aux7,
aux8,aux9,aux10,aux11,aux12,aux13,aux14,aux15,
aux16,aux17,aux18,aux19,aux20,aux21,aux22,aux23,
aux24,aux25,aux26,aux27,aux28,aux29,aux30,aux31,
aux32,aux33,aux34,aux35,aux36,aux37,aux38,aux39,
aux40,aux41,aux42,aux43,aux44,aux45,aux46,aux47,
aux48,aux49,aux50,aux51,aux52,aux53,aux54,aux55,
aux56,aux57,aux58,aux59,aux60,aux61,aux62,aux63,
aux64,aux65,aux66,aux67,aux68,aux69,aux70,aux71,
aux72,aux73,aux74,aux75,aux76,aux77,aux78,aux79,
aux80,aux81,aux82,aux83,aux84,aux85,aux86,aux87,
aux88,aux89,aux90,aux91,aux92,aux93,aux94,aux95,
aux96,aux97,aux98,aux99,aux100,aux101,aux102,aux103,
aux104,aux105,aux106,aux107,aux108,aux109,aux110,aux111,
aux112,aux113,aux114,aux115,aux116,aux117,aux118,aux119,
aux120,aux121,aux122,aux123,aux124,aux125,aux126,aux127,
aux128,aux129,aux130,aux131]


**CONSTRAINTS**

weightedsumgeq([1,-1], [V10,V11], aux130)
weightedsumleq([1,-1], [V10,V11], aux130)
abs(aux131,aux130)
diseq(V10, V11)
diseq(1, aux131)
weightedsumgeq([1,-1], [V9,V11], aux128)
weightedsumleq([1,-1], [V9,V11], aux128)
abs(aux129,aux128)
diseq(V11, V9)
diseq(2, aux129)
weightedsumgeq([1,-1], [V9,V10], aux126)
weightedsumleq([1,-1], [V9,V10], aux126)
abs(aux127,aux126)
diseq(V10, V9)
diseq(1, aux127)
weightedsumgeq([1,-1], [V8,V11], aux124)
weightedsumleq([1,-1], [V8,V11], aux124)
abs(aux125,aux124)
diseq(V11, V8)
diseq(3, aux125)
weightedsumgeq([1,-1], [V8,V10], aux122)
weightedsumleq([1,-1], [V8,V10], aux122)
abs(aux123,aux122)
diseq(V10, V8)
diseq(2, aux123)
weightedsumgeq([1,-1], [V8,V9], aux120)
weightedsumleq([1,-1], [V8,V9], aux120)
abs(aux121,aux120)
diseq(V8, V9)
diseq(1, aux121)
weightedsumgeq([1,-1], [V7,V11], aux118)
weightedsumleq([1,-1], [V7,V11], aux118)
abs(aux119,aux118)
diseq(V11, V7)
diseq(4, aux119)
weightedsumgeq([1,-1], [V7,V10], aux116)
weightedsumleq([1,-1], [V7,V10], aux116)
abs(aux117,aux116)
diseq(V10, V7)
diseq(3, aux117)
weightedsumgeq([1,-1], [V7,V9], aux114)
weightedsumleq([1,-1], [V7,V9], aux114)
abs(aux115,aux114)
diseq(V7, V9)
diseq(2, aux115)
weightedsumgeq([1,-1], [V7,V8], aux112)
weightedsumleq([1,-1], [V7,V8], aux112)
abs(aux113,aux112)
diseq(V7, V8)
diseq(1, aux113)
weightedsumgeq([1,-1], [V6,V11], aux110)
weightedsumleq([1,-1], [V6,V11], aux110)
abs(aux111,aux110)
diseq(V11, V6)
diseq(5, aux111)
weightedsumgeq([1,-1], [V6,V10], aux108)
weightedsumleq([1,-1], [V6,V10], aux108)
abs(aux109,aux108)
diseq(V10, V6)
diseq(4, aux109)
weightedsumgeq([1,-1], [V6,V9], aux106)
weightedsumleq([1,-1], [V6,V9], aux106)
abs(aux107,aux106)
diseq(V6, V9)
diseq(3, aux107)
weightedsumgeq([1,-1], [V6,V8], aux104)
weightedsumleq([1,-1], [V6,V8], aux104)
abs(aux105,aux104)
diseq(V6, V8)
diseq(2, aux105)
weightedsumgeq([1,-1], [V6,V7], aux102)
weightedsumleq([1,-1], [V6,V7], aux102)
abs(aux103,aux102)
diseq(V6, V7)
diseq(1, aux103)
weightedsumgeq([1,-1], [V5,V11], aux100)
weightedsumleq([1,-1], [V5,V11], aux100)
abs(aux101,aux100)
diseq(V11, V5)
diseq(6, aux101)
weightedsumgeq([1,-1], [V5,V10], aux98)
weightedsumleq([1,-1], [V5,V10], aux98)
abs(aux99,aux98)
diseq(V10, V5)
diseq(5, aux99)
weightedsumgeq([1,-1], [V5,V9], aux96)
weightedsumleq([1,-1], [V5,V9], aux96)
abs(aux97,aux96)
diseq(V5, V9)
diseq(4, aux97)
weightedsumgeq([1,-1], [V5,V8], aux94)
weightedsumleq([1,-1], [V5,V8], aux94)
abs(aux95,aux94)
diseq(V5, V8)
diseq(3, aux95)
weightedsumgeq([1,-1], [V5,V7], aux92)
weightedsumleq([1,-1], [V5,V7], aux92)
abs(aux93,aux92)
diseq(V5, V7)
diseq(2, aux93)
weightedsumgeq([1,-1], [V5,V6], aux90)
weightedsumleq([1,-1], [V5,V6], aux90)
abs(aux91,aux90)
diseq(V5, V6)
diseq(1, aux91)
weightedsumgeq([1,-1], [V4,V11], aux88)
weightedsumleq([1,-1], [V4,V11], aux88)
abs(aux89,aux88)
diseq(V11, V4)
diseq(7, aux89)
weightedsumgeq([1,-1], [V4,V10], aux86)
weightedsumleq([1,-1], [V4,V10], aux86)
abs(aux87,aux86)
diseq(V10, V4)
diseq(6, aux87)
weightedsumgeq([1,-1], [V4,V9], aux84)
weightedsumleq([1,-1], [V4,V9], aux84)
abs(aux85,aux84)
diseq(V4, V9)
diseq(5, aux85)
weightedsumgeq([1,-1], [V4,V8], aux82)
weightedsumleq([1,-1], [V4,V8], aux82)
abs(aux83,aux82)
diseq(V4, V8)
diseq(4, aux83)
weightedsumgeq([1,-1], [V4,V7], aux80)
weightedsumleq([1,-1], [V4,V7], aux80)
abs(aux81,aux80)
diseq(V4, V7)
diseq(3, aux81)
weightedsumgeq([1,-1], [V4,V6], aux78)
weightedsumleq([1,-1], [V4,V6], aux78)
abs(aux79,aux78)
diseq(V4, V6)
diseq(2, aux79)
weightedsumgeq([1,-1], [V4,V5], aux76)
weightedsumleq([1,-1], [V4,V5], aux76)
abs(aux77,aux76)
diseq(V4, V5)
diseq(1, aux77)
weightedsumgeq([1,-1], [V3,V11], aux74)
weightedsumleq([1,-1], [V3,V11], aux74)
abs(aux75,aux74)
diseq(V11, V3)
diseq(8, aux75)
weightedsumgeq([1,-1], [V3,V10], aux72)
weightedsumleq([1,-1], [V3,V10], aux72)
abs(aux73,aux72)
diseq(V10, V3)
diseq(7, aux73)
weightedsumgeq([1,-1], [V3,V9], aux70)
weightedsumleq([1,-1], [V3,V9], aux70)
abs(aux71,aux70)
diseq(V3, V9)
diseq(6, aux71)
weightedsumgeq([1,-1], [V3,V8], aux68)
weightedsumleq([1,-1], [V3,V8], aux68)
abs(aux69,aux68)
diseq(V3, V8)
diseq(5, aux69)
weightedsumgeq([1,-1], [V3,V7], aux66)
weightedsumleq([1,-1], [V3,V7], aux66)
abs(aux67,aux66)
diseq(V3, V7)
diseq(4, aux67)
weightedsumgeq([1,-1], [V3,V6], aux64)
weightedsumleq([1,-1], [V3,V6], aux64)
abs(aux65,aux64)
diseq(V3, V6)
diseq(3, aux65)
weightedsumgeq([1,-1], [V3,V5], aux62)
weightedsumleq([1,-1], [V3,V5], aux62)
abs(aux63,aux62)
diseq(V3, V5)
diseq(2, aux63)
weightedsumgeq([1,-1], [V3,V4], aux60)
weightedsumleq([1,-1], [V3,V4], aux60)
abs(aux61,aux60)
diseq(V3, V4)
diseq(1, aux61)
weightedsumgeq([1,-1], [V2,V11], aux58)
weightedsumleq([1,-1], [V2,V11], aux58)
abs(aux59,aux58)
diseq(V11, V2)
diseq(9, aux59)
weightedsumgeq([1,-1], [V2,V10], aux56)
weightedsumleq([1,-1], [V2,V10], aux56)
abs(aux57,aux56)
diseq(V10, V2)
diseq(8, aux57)
weightedsumgeq([1,-1], [V2,V9], aux54)
weightedsumleq([1,-1], [V2,V9], aux54)
abs(aux55,aux54)
diseq(V2, V9)
diseq(7, aux55)
weightedsumgeq([1,-1], [V2,V8], aux52)
weightedsumleq([1,-1], [V2,V8], aux52)
abs(aux53,aux52)
diseq(V2, V8)
diseq(6, aux53)
weightedsumgeq([1,-1], [V2,V7], aux50)
weightedsumleq([1,-1], [V2,V7], aux50)
abs(aux51,aux50)
diseq(V2, V7)
diseq(5, aux51)
weightedsumgeq([1,-1], [V2,V6], aux48)
weightedsumleq([1,-1], [V2,V6], aux48)
abs(aux49,aux48)
diseq(V2, V6)
diseq(4, aux49)
weightedsumgeq([1,-1], [V2,V5], aux46)
weightedsumleq([1,-1], [V2,V5], aux46)
abs(aux47,aux46)
diseq(V2, V5)
diseq(3, aux47)
weightedsumgeq([1,-1], [V2,V4], aux44)
weightedsumleq([1,-1], [V2,V4], aux44)
abs(aux45,aux44)
diseq(V2, V4)
diseq(2, aux45)
weightedsumgeq([1,-1], [V2,V3], aux42)
weightedsumleq([1,-1], [V2,V3], aux42)
abs(aux43,aux42)
diseq(V2, V3)
diseq(1, aux43)
weightedsumgeq([1,-1], [V1,V11], aux40)
weightedsumleq([1,-1], [V1,V11], aux40)
abs(aux41,aux40)
diseq(V1, V11)
diseq(10, aux41)
weightedsumgeq([1,-1], [V1,V10], aux38)
weightedsumleq([1,-1], [V1,V10], aux38)
abs(aux39,aux38)
diseq(V1, V10)
diseq(9, aux39)
weightedsumgeq([1,-1], [V1,V9], aux36)
weightedsumleq([1,-1], [V1,V9], aux36)
abs(aux37,aux36)
diseq(V1, V9)
diseq(8, aux37)
weightedsumgeq([1,-1], [V1,V8], aux34)
weightedsumleq([1,-1], [V1,V8], aux34)
abs(aux35,aux34)
diseq(V1, V8)
diseq(7, aux35)
weightedsumgeq([1,-1], [V1,V7], aux32)
weightedsumleq([1,-1], [V1,V7], aux32)
abs(aux33,aux32)
diseq(V1, V7)
diseq(6, aux33)
weightedsumgeq([1,-1], [V1,V6], aux30)
weightedsumleq([1,-1], [V1,V6], aux30)
abs(aux31,aux30)
diseq(V1, V6)
diseq(5, aux31)
weightedsumgeq([1,-1], [V1,V5], aux28)
weightedsumleq([1,-1], [V1,V5], aux28)
abs(aux29,aux28)
diseq(V1, V5)
diseq(4, aux29)
weightedsumgeq([1,-1], [V1,V4], aux26)
weightedsumleq([1,-1], [V1,V4], aux26)
abs(aux27,aux26)
diseq(V1, V4)
diseq(3, aux27)
weightedsumgeq([1,-1], [V1,V3], aux24)
weightedsumleq([1,-1], [V1,V3], aux24)
abs(aux25,aux24)
diseq(V1, V3)
diseq(2, aux25)
weightedsumgeq([1,-1], [V1,V2], aux22)
weightedsumleq([1,-1], [V1,V2], aux22)
abs(aux23,aux22)
diseq(V1, V2)
diseq(1, aux23)
weightedsumgeq([1,-1], [V0,V11], aux20)
weightedsumleq([1,-1], [V0,V11], aux20)
abs(aux21,aux20)
diseq(V0, V11)
diseq(11, aux21)
weightedsumgeq([1,-1], [V0,V10], aux18)
weightedsumleq([1,-1], [V0,V10], aux18)
abs(aux19,aux18)
diseq(V0, V10)
diseq(10, aux19)
weightedsumgeq([1,-1], [V0,V9], aux16)
weightedsumleq([1,-1], [V0,V9], aux16)
abs(aux17,aux16)
diseq(V0, V9)
diseq(9, aux17)
weightedsumgeq([1,-1], [V0,V8], aux14)
weightedsumleq([1,-1], [V0,V8], aux14)
abs(aux15,aux14)
diseq(V0, V8)
diseq(8, aux15)
weightedsumgeq([1,-1], [V0,V7], aux12)
weightedsumleq([1,-1], [V0,V7], aux12)
abs(aux13,aux12)
diseq(V0, V7)
diseq(7, aux13)
weightedsumgeq([1,-1], [V0,V6], aux10)
weightedsumleq([1,-1], [V0,V6], aux10)
abs(aux11,aux10)
diseq(V0, V6)
diseq(6, aux11)
weightedsumgeq([1,-1], [V0,V5], aux8)
weightedsumleq([1,-1], [V0,V5], aux8)
abs(aux9,aux8)
diseq(V0, V5)
diseq(5, aux9)
weightedsumgeq([1,-1], [V0,V4], aux6)
weightedsumleq([1,-1], [V0,V4], aux6)
abs(aux7,aux6)
diseq(V0, V4)
diseq(4, aux7)
weightedsumgeq([1,-1], [V0,V3], aux4)
weightedsumleq([1,-1], [V0,V3], aux4)
abs(aux5,aux4)
diseq(V0, V3)
diseq(3, aux5)
weightedsumgeq([1,-1], [V0,V2], aux2)
weightedsumleq([1,-1], [V0,V2], aux2)
abs(aux3,aux2)
diseq(V0, V2)
diseq(2, aux3)
weightedsumgeq([1,-1], [V0,V1], aux0)
weightedsumleq([1,-1], [V0,V1], aux0)
abs(aux1,aux0)
diseq(V0, V1)
diseq(1, aux1)

**EOF**
