MINION 3

#This file has been automatically generated by TAILOR v0.2
#bug-reports: andrea@cs.st-and.ac.uk

# amount of common subexpressions used:0
# amount of inferred common subexpressions used:0
# amount of original variables saved (over direct equality):10
# amount of constraints:2000
# amount of auxiliary variables: 777

**VARIABLES**
DISCRETE V0 {0..10}
DISCRETE V1 {0..10}
DISCRETE V2 {0..10}
DISCRETE V3 {0..10}
DISCRETE V5 {0..10}
DISCRETE V6 {0..10}
DISCRETE V7 {0..10}
DISCRETE V8 {0..10}
DISCRETE V9 {0..10}
DISCRETE V10 {0..10}
DISCRETE V11 {0..10}
DISCRETE V12 {0..10}
DISCRETE V14 {0..10}
DISCRETE V15 {0..10}
DISCRETE V16 {0..10}
DISCRETE V17 {0..10}
DISCRETE V18 {0..10}
DISCRETE V19 {0..10}
DISCRETE V20 {0..10}
DISCRETE V21 {0..10}
DISCRETE V22 {0..10}
DISCRETE V23 {0..10}
DISCRETE V24 {0..10}
DISCRETE V25 {0..10}
DISCRETE V26 {0..10}
DISCRETE V27 {0..10}
DISCRETE V28 {0..10}
DISCRETE V29 {0..10}
DISCRETE V31 {0..10}
DISCRETE V32 {0..10}
DISCRETE V33 {0..10}
DISCRETE V34 {0..10}
DISCRETE V35 {0..10}
DISCRETE V36 {0..10}
DISCRETE V37 {0..10}
DISCRETE V38 {0..10}
DISCRETE V39 {0..10}
DISCRETE V40 {0..10}
DISCRETE V41 {0..10}
DISCRETE V42 {0..10}
DISCRETE V43 {0..10}
DISCRETE V44 {0..10}
DISCRETE V45 {0..10}
DISCRETE V46 {0..10}
DISCRETE V47 {0..10}
DISCRETE V48 {0..10}
DISCRETE V49 {0..10}
DISCRETE V50 {0..10}
DISCRETE V52 {0..10}
DISCRETE V53 {0..10}
DISCRETE V54 {0..10}
DISCRETE V55 {0..10}
DISCRETE V56 {0..10}
DISCRETE V58 {0..10}
DISCRETE V59 {0..10}
DISCRETE V60 {0..10}
DISCRETE V61 {0..10}
DISCRETE V62 {0..10}
DISCRETE V63 {0..10}
DISCRETE V64 {0..10}
DISCRETE V65 {0..10}
DISCRETE V66 {0..10}
DISCRETE V67 {0..10}
DISCRETE V68 {0..10}
DISCRETE V71 {0..10}
DISCRETE V73 {0..10}
DISCRETE V74 {0..10}
DISCRETE V75 {0..10}
DISCRETE V76 {0..10}
DISCRETE V77 {0..10}
DISCRETE V78 {0..10}
DISCRETE V79 {0..10}
DISCRETE V80 {0..10}
DISCRETE V81 {0..10}
DISCRETE V82 {0..10}
DISCRETE V83 {0..10}
DISCRETE V84 {0..10}
DISCRETE V85 {0..10}
DISCRETE V86 {0..10}
DISCRETE V87 {0..10}
DISCRETE V88 {0..10}
DISCRETE V89 {0..10}
DISCRETE V91 {0..10}
DISCRETE V92 {0..10}
DISCRETE V93 {0..10}
DISCRETE V94 {0..10}
DISCRETE V95 {0..10}
DISCRETE V96 {0..10}
DISCRETE V97 {0..10}
DISCRETE V99 {0..10}
DISCRETE V100 {0..10}
DISCRETE V101 {0..10}
DISCRETE V102 {0..10}
DISCRETE V103 {0..10}
DISCRETE V104 {0..10}
DISCRETE V105 {0..10}
DISCRETE V106 {0..10}
DISCRETE V107 {0..10}
DISCRETE V108 {0..10}
DISCRETE V109 {0..10}
DISCRETE V110 {0..10}
DISCRETE V111 {0..10}
DISCRETE V112 {0..10}
DISCRETE V113 {0..10}
DISCRETE V114 {0..10}
DISCRETE V115 {0..10}
DISCRETE V116 {0..10}
DISCRETE V117 {0..10}
DISCRETE V118 {0..10}
DISCRETE V119 {0..10}
DISCRETE V120 {0..10}

# auxiliary variables
DISCRETE aux0 {-10..10}
DISCRETE aux1 {-10..10}
DISCRETE aux2 {-100..100}
DISCRETE aux3 {-10..10}
DISCRETE aux4 {-10..10}
DISCRETE aux5 {-100..100}
DISCRETE aux6 {-10..10}
DISCRETE aux7 {-10..10}
DISCRETE aux8 {-100..100}
DISCRETE aux9 {-10..10}
DISCRETE aux10 {-10..10}
DISCRETE aux11 {-100..100}
DISCRETE aux12 {-10..10}
DISCRETE aux13 {-10..10}
DISCRETE aux14 {-100..100}
DISCRETE aux15 {-10..10}
DISCRETE aux16 {-10..10}
DISCRETE aux17 {-100..100}
DISCRETE aux18 {-10..10}
DISCRETE aux19 {-10..10}
DISCRETE aux20 {-100..100}
DISCRETE aux21 {-10..10}
DISCRETE aux22 {-10..10}
DISCRETE aux23 {-100..100}
DISCRETE aux24 {-10..10}
DISCRETE aux25 {-10..10}
DISCRETE aux26 {-100..100}
DISCRETE aux27 {-10..10}
DISCRETE aux28 {-10..10}
DISCRETE aux29 {-100..100}
DISCRETE aux30 {-10..10}
DISCRETE aux31 {-10..10}
DISCRETE aux32 {-100..100}
DISCRETE aux33 {-10..10}
DISCRETE aux34 {-10..10}
DISCRETE aux35 {-100..100}
DISCRETE aux36 {-10..10}
DISCRETE aux37 {-10..10}
DISCRETE aux38 {-100..100}
DISCRETE aux39 {-10..10}
DISCRETE aux40 {-10..10}
DISCRETE aux41 {-100..100}
DISCRETE aux42 {-10..10}
DISCRETE aux43 {-10..10}
DISCRETE aux44 {-100..100}
DISCRETE aux45 {-10..10}
DISCRETE aux46 {-10..10}
DISCRETE aux47 {-100..100}
DISCRETE aux48 {-10..10}
DISCRETE aux49 {-10..10}
DISCRETE aux50 {-100..100}
DISCRETE aux51 {-10..10}
DISCRETE aux52 {-10..10}
DISCRETE aux53 {-100..100}
DISCRETE aux54 {-10..10}
DISCRETE aux55 {-10..10}
DISCRETE aux56 {-100..100}
DISCRETE aux57 {-10..10}
DISCRETE aux58 {-10..10}
DISCRETE aux59 {-100..100}
DISCRETE aux60 {-10..10}
DISCRETE aux61 {-10..10}
DISCRETE aux62 {-100..100}
DISCRETE aux63 {-10..10}
DISCRETE aux64 {-10..10}
DISCRETE aux65 {-100..100}
DISCRETE aux66 {-10..10}
DISCRETE aux67 {-10..10}
DISCRETE aux68 {-100..100}
DISCRETE aux69 {-10..10}
DISCRETE aux70 {-10..10}
DISCRETE aux71 {-100..100}
DISCRETE aux72 {-10..10}
DISCRETE aux73 {-10..10}
DISCRETE aux74 {-100..100}
DISCRETE aux75 {-10..10}
DISCRETE aux76 {-10..10}
DISCRETE aux77 {-100..100}
DISCRETE aux78 {-10..10}
DISCRETE aux79 {-10..10}
DISCRETE aux80 {-100..100}
DISCRETE aux81 {-10..10}
DISCRETE aux82 {-10..10}
DISCRETE aux83 {-100..100}
DISCRETE aux84 {-10..10}
DISCRETE aux85 {-10..10}
DISCRETE aux86 {-100..100}
DISCRETE aux87 {-10..10}
DISCRETE aux88 {-10..10}
DISCRETE aux89 {-100..100}
DISCRETE aux90 {-10..10}
DISCRETE aux91 {-10..10}
DISCRETE aux92 {-100..100}
DISCRETE aux93 {-10..10}
DISCRETE aux94 {-10..10}
DISCRETE aux95 {-100..100}
DISCRETE aux96 {-10..10}
DISCRETE aux97 {-10..10}
DISCRETE aux98 {-100..100}
DISCRETE aux99 {-10..10}
DISCRETE aux100 {-10..10}
DISCRETE aux101 {-100..100}
DISCRETE aux102 {-10..10}
DISCRETE aux103 {-10..10}
DISCRETE aux104 {-100..100}
DISCRETE aux105 {-10..10}
DISCRETE aux106 {-10..10}
DISCRETE aux107 {-100..100}
DISCRETE aux108 {-10..10}
DISCRETE aux109 {-10..10}
DISCRETE aux110 {-100..100}
DISCRETE aux111 {-10..10}
DISCRETE aux112 {-10..10}
DISCRETE aux113 {-100..100}
DISCRETE aux114 {-10..10}
DISCRETE aux115 {-10..10}
DISCRETE aux116 {-100..100}
DISCRETE aux117 {-10..10}
DISCRETE aux118 {-10..10}
DISCRETE aux119 {-100..100}
DISCRETE aux120 {-10..10}
DISCRETE aux121 {-10..10}
DISCRETE aux122 {-100..100}
DISCRETE aux123 {-10..10}
DISCRETE aux124 {-10..10}
DISCRETE aux125 {-100..100}
DISCRETE aux126 {-10..10}
DISCRETE aux127 {-10..10}
DISCRETE aux128 {-100..100}
DISCRETE aux129 {-10..10}
DISCRETE aux130 {-10..10}
DISCRETE aux131 {-100..100}
DISCRETE aux132 {-10..10}
DISCRETE aux133 {-10..10}
DISCRETE aux134 {-100..100}
DISCRETE aux135 {-10..10}
DISCRETE aux136 {-10..10}
DISCRETE aux137 {-100..100}
DISCRETE aux138 {-10..10}
DISCRETE aux139 {-10..10}
DISCRETE aux140 {-100..100}
DISCRETE aux141 {-10..10}
DISCRETE aux142 {-10..10}
DISCRETE aux143 {-100..100}
DISCRETE aux144 {-10..10}
DISCRETE aux145 {-10..10}
DISCRETE aux146 {-100..100}
DISCRETE aux147 {-10..10}
DISCRETE aux148 {-10..10}
DISCRETE aux149 {-100..100}
DISCRETE aux150 {-10..10}
DISCRETE aux151 {-10..10}
DISCRETE aux152 {-100..100}
DISCRETE aux153 {-10..10}
DISCRETE aux154 {-10..10}
DISCRETE aux155 {-100..100}
DISCRETE aux156 {-10..10}
DISCRETE aux157 {-10..10}
DISCRETE aux158 {-100..100}
DISCRETE aux159 {-10..10}
DISCRETE aux160 {-10..10}
DISCRETE aux161 {-100..100}
DISCRETE aux162 {-10..10}
DISCRETE aux163 {-10..10}
DISCRETE aux164 {-100..100}
DISCRETE aux165 {-10..10}
DISCRETE aux166 {-10..10}
DISCRETE aux167 {-100..100}
DISCRETE aux168 {-10..10}
DISCRETE aux169 {-10..10}
DISCRETE aux170 {-100..100}
DISCRETE aux171 {-10..10}
DISCRETE aux172 {-10..10}
DISCRETE aux173 {-100..100}
DISCRETE aux174 {-10..10}
DISCRETE aux175 {-10..10}
DISCRETE aux176 {-100..100}
DISCRETE aux177 {-10..10}
DISCRETE aux178 {-10..10}
DISCRETE aux179 {-100..100}
DISCRETE aux180 {-10..10}
DISCRETE aux181 {-10..10}
DISCRETE aux182 {-100..100}
DISCRETE aux183 {-10..10}
DISCRETE aux184 {-10..10}
DISCRETE aux185 {-100..100}
DISCRETE aux186 {-10..10}
DISCRETE aux187 {-10..10}
DISCRETE aux188 {-100..100}
DISCRETE aux189 {-10..10}
DISCRETE aux190 {-10..10}
DISCRETE aux191 {-100..100}
DISCRETE aux192 {-10..10}
DISCRETE aux193 {-10..10}
DISCRETE aux194 {-100..100}
DISCRETE aux195 {-10..10}
DISCRETE aux196 {-10..10}
DISCRETE aux197 {-100..100}
DISCRETE aux198 {-10..10}
DISCRETE aux199 {-10..10}
DISCRETE aux200 {-100..100}
DISCRETE aux201 {-10..10}
DISCRETE aux202 {-10..10}
DISCRETE aux203 {-100..100}
DISCRETE aux204 {-10..10}
DISCRETE aux205 {-10..10}
DISCRETE aux206 {-100..100}
DISCRETE aux207 {-10..10}
DISCRETE aux208 {-10..10}
DISCRETE aux209 {-100..100}
DISCRETE aux210 {-10..10}
DISCRETE aux211 {-10..10}
DISCRETE aux212 {-100..100}
DISCRETE aux213 {-10..10}
DISCRETE aux214 {-10..10}
DISCRETE aux215 {-100..100}
DISCRETE aux216 {-10..10}
DISCRETE aux217 {-10..10}
DISCRETE aux218 {-100..100}
DISCRETE aux219 {-10..10}
DISCRETE aux220 {-10..10}
DISCRETE aux221 {-100..100}
DISCRETE aux222 {-10..10}
DISCRETE aux223 {-10..10}
DISCRETE aux224 {-100..100}
DISCRETE aux225 {-10..10}
DISCRETE aux226 {-10..10}
DISCRETE aux227 {-100..100}
DISCRETE aux228 {-10..10}
DISCRETE aux229 {-10..10}
DISCRETE aux230 {-100..100}
DISCRETE aux231 {-10..10}
DISCRETE aux232 {-10..10}
DISCRETE aux233 {-100..100}
DISCRETE aux234 {-10..10}
DISCRETE aux235 {-10..10}
DISCRETE aux236 {-100..100}
DISCRETE aux237 {-10..10}
DISCRETE aux238 {-10..10}
DISCRETE aux239 {-100..100}
DISCRETE aux240 {-10..10}
DISCRETE aux241 {-10..10}
DISCRETE aux242 {-100..100}
DISCRETE aux243 {-10..10}
DISCRETE aux244 {-10..10}
DISCRETE aux245 {-100..100}
DISCRETE aux246 {-10..10}
DISCRETE aux247 {-10..10}
DISCRETE aux248 {-100..100}
DISCRETE aux249 {-10..10}
DISCRETE aux250 {-10..10}
DISCRETE aux251 {-100..100}
DISCRETE aux252 {-10..10}
DISCRETE aux253 {-10..10}
DISCRETE aux254 {-100..100}
DISCRETE aux255 {-10..10}
DISCRETE aux256 {-10..10}
DISCRETE aux257 {-100..100}
DISCRETE aux258 {-10..10}
DISCRETE aux259 {-10..10}
DISCRETE aux260 {-100..100}
DISCRETE aux261 {-10..10}
DISCRETE aux262 {-10..10}
DISCRETE aux263 {-100..100}
DISCRETE aux264 {-10..10}
DISCRETE aux265 {-10..10}
DISCRETE aux266 {-100..100}
DISCRETE aux267 {-10..10}
DISCRETE aux268 {-10..10}
DISCRETE aux269 {-100..100}
DISCRETE aux270 {-10..10}
DISCRETE aux271 {-10..10}
DISCRETE aux272 {-100..100}
DISCRETE aux273 {-10..10}
DISCRETE aux274 {-10..10}
DISCRETE aux275 {-100..100}
DISCRETE aux276 {-10..10}
DISCRETE aux277 {-10..10}
DISCRETE aux278 {-100..100}
DISCRETE aux279 {-10..10}
DISCRETE aux280 {-10..10}
DISCRETE aux281 {-100..100}
DISCRETE aux282 {-10..10}
DISCRETE aux283 {-10..10}
DISCRETE aux284 {-100..100}
DISCRETE aux285 {-10..10}
DISCRETE aux286 {-10..10}
DISCRETE aux287 {-100..100}
DISCRETE aux288 {-10..10}
DISCRETE aux289 {-10..10}
DISCRETE aux290 {-100..100}
DISCRETE aux291 {-10..10}
DISCRETE aux292 {-10..10}
DISCRETE aux293 {-100..100}
DISCRETE aux294 {-10..10}
DISCRETE aux295 {-10..10}
DISCRETE aux296 {-100..100}
DISCRETE aux297 {-10..10}
DISCRETE aux298 {-10..10}
DISCRETE aux299 {-100..100}
DISCRETE aux300 {-10..10}
DISCRETE aux301 {-10..10}
DISCRETE aux302 {-100..100}
DISCRETE aux303 {-10..10}
DISCRETE aux304 {-10..10}
DISCRETE aux305 {-100..100}
DISCRETE aux306 {-10..10}
DISCRETE aux307 {-10..10}
DISCRETE aux308 {-100..100}
DISCRETE aux309 {-10..10}
DISCRETE aux310 {-10..10}
DISCRETE aux311 {-100..100}
DISCRETE aux312 {-10..10}
DISCRETE aux313 {-10..10}
DISCRETE aux314 {-100..100}
DISCRETE aux315 {-10..10}
DISCRETE aux316 {-10..10}
DISCRETE aux317 {-100..100}
DISCRETE aux318 {-10..10}
DISCRETE aux319 {-10..10}
DISCRETE aux320 {-100..100}
DISCRETE aux321 {-10..10}
DISCRETE aux322 {-10..10}
DISCRETE aux323 {-100..100}
DISCRETE aux324 {-10..10}
DISCRETE aux325 {-10..10}
DISCRETE aux326 {-100..100}
DISCRETE aux327 {-10..10}
DISCRETE aux328 {-10..10}
DISCRETE aux329 {-100..100}
DISCRETE aux330 {-10..10}
DISCRETE aux331 {-10..10}
DISCRETE aux332 {-100..100}
DISCRETE aux333 {-10..10}
DISCRETE aux334 {-10..10}
DISCRETE aux335 {-100..100}
DISCRETE aux336 {-10..10}
DISCRETE aux337 {-10..10}
DISCRETE aux338 {-100..100}
DISCRETE aux339 {-10..10}
DISCRETE aux340 {-10..10}
DISCRETE aux341 {-100..100}
DISCRETE aux342 {-10..10}
DISCRETE aux343 {-10..10}
DISCRETE aux344 {-100..100}
DISCRETE aux345 {-10..10}
DISCRETE aux346 {-10..10}
DISCRETE aux347 {-100..100}
DISCRETE aux348 {-10..10}
DISCRETE aux349 {-10..10}
DISCRETE aux350 {-100..100}
DISCRETE aux351 {-10..10}
DISCRETE aux352 {-10..10}
DISCRETE aux353 {-100..100}
DISCRETE aux354 {-10..10}
DISCRETE aux355 {-10..10}
DISCRETE aux356 {-100..100}
DISCRETE aux357 {-10..10}
DISCRETE aux358 {-10..10}
DISCRETE aux359 {-100..100}
DISCRETE aux360 {-10..10}
DISCRETE aux361 {-10..10}
DISCRETE aux362 {-100..100}
DISCRETE aux363 {-10..10}
DISCRETE aux364 {-10..10}
DISCRETE aux365 {-100..100}
DISCRETE aux366 {-10..10}
DISCRETE aux367 {-10..10}
DISCRETE aux368 {-100..100}
DISCRETE aux369 {-10..10}
DISCRETE aux370 {-10..10}
DISCRETE aux371 {-100..100}
DISCRETE aux372 {-10..10}
DISCRETE aux373 {-10..10}
DISCRETE aux374 {-100..100}
DISCRETE aux375 {-10..10}
DISCRETE aux376 {-10..10}
DISCRETE aux377 {-100..100}
DISCRETE aux378 {-10..10}
DISCRETE aux379 {-10..10}
DISCRETE aux380 {-100..100}
DISCRETE aux381 {-10..10}
DISCRETE aux382 {-10..10}
DISCRETE aux383 {-100..100}
DISCRETE aux384 {-10..10}
DISCRETE aux385 {-10..10}
DISCRETE aux386 {-100..100}
DISCRETE aux387 {-10..10}
DISCRETE aux388 {-10..10}
DISCRETE aux389 {-100..100}
DISCRETE aux390 {-10..10}
DISCRETE aux391 {-10..10}
DISCRETE aux392 {-100..100}
DISCRETE aux393 {-10..10}
DISCRETE aux394 {-10..10}
DISCRETE aux395 {-100..100}
DISCRETE aux396 {-10..10}
DISCRETE aux397 {-10..10}
DISCRETE aux398 {-100..100}
DISCRETE aux399 {-10..10}
DISCRETE aux400 {-10..10}
DISCRETE aux401 {-100..100}
DISCRETE aux402 {-10..10}
DISCRETE aux403 {-10..10}
DISCRETE aux404 {-100..100}
DISCRETE aux405 {-10..10}
DISCRETE aux406 {-10..10}
DISCRETE aux407 {-100..100}
DISCRETE aux408 {-10..10}
DISCRETE aux409 {-10..10}
DISCRETE aux410 {-100..100}
DISCRETE aux411 {-10..10}
DISCRETE aux412 {-10..10}
DISCRETE aux413 {-100..100}
DISCRETE aux414 {-10..10}
DISCRETE aux415 {-10..10}
DISCRETE aux416 {-100..100}
DISCRETE aux417 {-10..10}
DISCRETE aux418 {-10..10}
DISCRETE aux419 {-100..100}
DISCRETE aux420 {-10..10}
DISCRETE aux421 {-10..10}
DISCRETE aux422 {-100..100}
DISCRETE aux423 {-10..10}
DISCRETE aux424 {-10..10}
DISCRETE aux425 {-100..100}
DISCRETE aux426 {-10..10}
DISCRETE aux427 {-10..10}
DISCRETE aux428 {-100..100}
DISCRETE aux429 {-10..10}
DISCRETE aux430 {-10..10}
DISCRETE aux431 {-100..100}
DISCRETE aux432 {-10..10}
DISCRETE aux433 {-10..10}
DISCRETE aux434 {-100..100}
DISCRETE aux435 {-10..10}
DISCRETE aux436 {-10..10}
DISCRETE aux437 {-100..100}
DISCRETE aux438 {-10..10}
DISCRETE aux439 {-10..10}
DISCRETE aux440 {-100..100}
DISCRETE aux441 {-10..10}
DISCRETE aux442 {-10..10}
DISCRETE aux443 {-100..100}
DISCRETE aux444 {-10..10}
DISCRETE aux445 {-10..10}
DISCRETE aux446 {-100..100}
DISCRETE aux447 {-10..10}
DISCRETE aux448 {-10..10}
DISCRETE aux449 {-100..100}
DISCRETE aux450 {-10..10}
DISCRETE aux451 {-10..10}
DISCRETE aux452 {-100..100}
DISCRETE aux453 {-10..10}
DISCRETE aux454 {-10..10}
DISCRETE aux455 {-100..100}
DISCRETE aux456 {-10..10}
DISCRETE aux457 {-10..10}
DISCRETE aux458 {-100..100}
DISCRETE aux459 {-10..10}
DISCRETE aux460 {-10..10}
DISCRETE aux461 {-100..100}
DISCRETE aux462 {-10..10}
DISCRETE aux463 {-10..10}
DISCRETE aux464 {-100..100}
DISCRETE aux465 {-10..10}
DISCRETE aux466 {-10..10}
DISCRETE aux467 {-100..100}
DISCRETE aux468 {-10..10}
DISCRETE aux469 {-10..10}
DISCRETE aux470 {-100..100}
DISCRETE aux471 {-10..10}
DISCRETE aux472 {-10..10}
DISCRETE aux473 {-100..100}
DISCRETE aux474 {-10..10}
DISCRETE aux475 {-10..10}
DISCRETE aux476 {-100..100}
DISCRETE aux477 {-10..10}
DISCRETE aux478 {-10..10}
DISCRETE aux479 {-100..100}
DISCRETE aux480 {-10..10}
DISCRETE aux481 {-10..10}
DISCRETE aux482 {-100..100}
DISCRETE aux483 {-10..10}
DISCRETE aux484 {-10..10}
DISCRETE aux485 {-100..100}
DISCRETE aux486 {-10..10}
DISCRETE aux487 {-10..10}
DISCRETE aux488 {-100..100}
DISCRETE aux489 {-10..10}
DISCRETE aux490 {-10..10}
DISCRETE aux491 {-100..100}
DISCRETE aux492 {-10..10}
DISCRETE aux493 {-10..10}
DISCRETE aux494 {-100..100}
DISCRETE aux495 {-10..10}
DISCRETE aux496 {-10..10}
DISCRETE aux497 {-100..100}
DISCRETE aux498 {-10..10}
DISCRETE aux499 {-10..10}
DISCRETE aux500 {-100..100}
DISCRETE aux501 {-10..10}
DISCRETE aux502 {-10..10}
DISCRETE aux503 {-100..100}
DISCRETE aux504 {-10..10}
DISCRETE aux505 {-10..10}
DISCRETE aux506 {-100..100}
DISCRETE aux507 {-10..10}
DISCRETE aux508 {-10..10}
DISCRETE aux509 {-100..100}
DISCRETE aux510 {-10..10}
DISCRETE aux511 {-10..10}
DISCRETE aux512 {-100..100}
DISCRETE aux513 {-10..10}
DISCRETE aux514 {-10..10}
DISCRETE aux515 {-100..100}
DISCRETE aux516 {-10..10}
DISCRETE aux517 {-10..10}
DISCRETE aux518 {-100..100}
DISCRETE aux519 {-10..10}
DISCRETE aux520 {-10..10}
DISCRETE aux521 {-100..100}
DISCRETE aux522 {-10..10}
DISCRETE aux523 {-10..10}
DISCRETE aux524 {-100..100}
DISCRETE aux525 {-10..10}
DISCRETE aux526 {-10..10}
DISCRETE aux527 {-100..100}
DISCRETE aux528 {-10..10}
DISCRETE aux529 {-10..10}
DISCRETE aux530 {-100..100}
DISCRETE aux531 {-10..10}
DISCRETE aux532 {-10..10}
DISCRETE aux533 {-100..100}
DISCRETE aux534 {-10..10}
DISCRETE aux535 {-10..10}
DISCRETE aux536 {-100..100}
DISCRETE aux537 {-10..10}
DISCRETE aux538 {-10..10}
DISCRETE aux539 {-100..100}
DISCRETE aux540 {-10..10}
DISCRETE aux541 {-10..10}
DISCRETE aux542 {-100..100}
DISCRETE aux543 {-10..10}
DISCRETE aux544 {-10..10}
DISCRETE aux545 {-100..100}
DISCRETE aux546 {-10..10}
DISCRETE aux547 {-10..10}
DISCRETE aux548 {-100..100}
DISCRETE aux549 {-10..10}
DISCRETE aux550 {-10..10}
DISCRETE aux551 {-100..100}
DISCRETE aux552 {-10..10}
DISCRETE aux553 {-10..10}
DISCRETE aux554 {-100..100}
DISCRETE aux555 {-10..10}
DISCRETE aux556 {-10..10}
DISCRETE aux557 {-100..100}
DISCRETE aux558 {-10..10}
DISCRETE aux559 {-10..10}
DISCRETE aux560 {-100..100}
DISCRETE aux561 {-10..10}
DISCRETE aux562 {-10..10}
DISCRETE aux563 {-100..100}
DISCRETE aux564 {-10..10}
DISCRETE aux565 {-10..10}
DISCRETE aux566 {-100..100}
DISCRETE aux567 {-10..10}
DISCRETE aux568 {-10..10}
DISCRETE aux569 {-100..100}
DISCRETE aux570 {-10..10}
DISCRETE aux571 {-10..10}
DISCRETE aux572 {-100..100}
DISCRETE aux573 {-10..10}
DISCRETE aux574 {-10..10}
DISCRETE aux575 {-100..100}
DISCRETE aux576 {-10..10}
DISCRETE aux577 {-10..10}
DISCRETE aux578 {-100..100}
DISCRETE aux579 {-10..10}
DISCRETE aux580 {-10..10}
DISCRETE aux581 {-100..100}
DISCRETE aux582 {-10..10}
DISCRETE aux583 {-10..10}
DISCRETE aux584 {-100..100}
DISCRETE aux585 {-10..10}
DISCRETE aux586 {-10..10}
DISCRETE aux587 {-100..100}
DISCRETE aux588 {-10..10}
DISCRETE aux589 {-10..10}
DISCRETE aux590 {-100..100}
DISCRETE aux591 {-10..10}
DISCRETE aux592 {-10..10}
DISCRETE aux593 {-100..100}
DISCRETE aux594 {-10..10}
DISCRETE aux595 {-10..10}
DISCRETE aux596 {-100..100}
DISCRETE aux597 {-10..10}
DISCRETE aux598 {-10..10}
DISCRETE aux599 {-100..100}
DISCRETE aux600 {-10..10}
DISCRETE aux601 {-10..10}
DISCRETE aux602 {-100..100}
DISCRETE aux603 {-10..10}
DISCRETE aux604 {-10..10}
DISCRETE aux605 {-100..100}
DISCRETE aux606 {-10..10}
DISCRETE aux607 {-10..10}
DISCRETE aux608 {-100..100}
DISCRETE aux609 {-10..10}
DISCRETE aux610 {-10..10}
DISCRETE aux611 {-100..100}
DISCRETE aux612 {-10..10}
DISCRETE aux613 {-10..10}
DISCRETE aux614 {-100..100}
DISCRETE aux615 {-10..10}
DISCRETE aux616 {-10..10}
DISCRETE aux617 {-100..100}
DISCRETE aux618 {-10..10}
DISCRETE aux619 {-10..10}
DISCRETE aux620 {-100..100}
DISCRETE aux621 {-10..10}
DISCRETE aux622 {-10..10}
DISCRETE aux623 {-100..100}
DISCRETE aux624 {-10..10}
DISCRETE aux625 {-10..10}
DISCRETE aux626 {-100..100}
DISCRETE aux627 {-10..10}
DISCRETE aux628 {-10..10}
DISCRETE aux629 {-100..100}
DISCRETE aux630 {-10..10}
DISCRETE aux631 {-10..10}
DISCRETE aux632 {-100..100}
DISCRETE aux633 {-10..10}
DISCRETE aux634 {-10..10}
DISCRETE aux635 {-100..100}
DISCRETE aux636 {-10..10}
DISCRETE aux637 {-10..10}
DISCRETE aux638 {-100..100}
DISCRETE aux639 {-10..10}
DISCRETE aux640 {-10..10}
DISCRETE aux641 {-100..100}
DISCRETE aux642 {-10..10}
DISCRETE aux643 {-10..10}
DISCRETE aux644 {-100..100}
DISCRETE aux645 {-10..10}
DISCRETE aux646 {-10..10}
DISCRETE aux647 {-100..100}
DISCRETE aux648 {-10..10}
DISCRETE aux649 {-10..10}
DISCRETE aux650 {-100..100}
DISCRETE aux651 {-10..10}
DISCRETE aux652 {-10..10}
DISCRETE aux653 {-100..100}
DISCRETE aux654 {-10..10}
DISCRETE aux655 {-10..10}
DISCRETE aux656 {-100..100}
DISCRETE aux657 {-10..10}
DISCRETE aux658 {-10..10}
DISCRETE aux659 {-100..100}
DISCRETE aux660 {-10..10}
DISCRETE aux661 {-10..10}
DISCRETE aux662 {-100..100}
DISCRETE aux663 {-10..10}
DISCRETE aux664 {-10..10}
DISCRETE aux665 {-100..100}
DISCRETE aux666 {-10..10}
DISCRETE aux667 {-10..10}
DISCRETE aux668 {-100..100}
DISCRETE aux669 {-10..10}
DISCRETE aux670 {-10..10}
DISCRETE aux671 {-100..100}
DISCRETE aux672 {-10..10}
DISCRETE aux673 {-10..10}
DISCRETE aux674 {-100..100}
DISCRETE aux675 {-10..10}
DISCRETE aux676 {-10..10}
DISCRETE aux677 {-100..100}
DISCRETE aux678 {-10..10}
DISCRETE aux679 {-10..10}
DISCRETE aux680 {-100..100}
DISCRETE aux681 {-10..10}
DISCRETE aux682 {-10..10}
DISCRETE aux683 {-100..100}
DISCRETE aux684 {-10..10}
DISCRETE aux685 {-10..10}
DISCRETE aux686 {-100..100}
DISCRETE aux687 {-10..10}
DISCRETE aux688 {-10..10}
DISCRETE aux689 {-100..100}
DISCRETE aux690 {-10..10}
DISCRETE aux691 {-10..10}
DISCRETE aux692 {-100..100}
DISCRETE aux693 {-10..10}
DISCRETE aux694 {-10..10}
DISCRETE aux695 {-100..100}
DISCRETE aux696 {-10..10}
DISCRETE aux697 {-10..10}
DISCRETE aux698 {-100..100}
DISCRETE aux699 {-10..10}
DISCRETE aux700 {-10..10}
DISCRETE aux701 {-100..100}
DISCRETE aux702 {-10..10}
DISCRETE aux703 {-10..10}
DISCRETE aux704 {-100..100}
DISCRETE aux705 {-10..10}
DISCRETE aux706 {-10..10}
DISCRETE aux707 {-100..100}
DISCRETE aux708 {-10..10}
DISCRETE aux709 {-10..10}
DISCRETE aux710 {-100..100}
DISCRETE aux711 {-10..10}
DISCRETE aux712 {-10..10}
DISCRETE aux713 {-100..100}
DISCRETE aux714 {-10..10}
DISCRETE aux715 {-10..10}
DISCRETE aux716 {-100..100}
DISCRETE aux717 {-10..10}
DISCRETE aux718 {-10..10}
DISCRETE aux719 {-100..100}
DISCRETE aux720 {-10..10}
DISCRETE aux721 {-10..10}
DISCRETE aux722 {-100..100}
DISCRETE aux723 {-10..10}
DISCRETE aux724 {-10..10}
DISCRETE aux725 {-100..100}
DISCRETE aux726 {-10..10}
DISCRETE aux727 {-10..10}
DISCRETE aux728 {-100..100}
DISCRETE aux729 {-10..10}
DISCRETE aux730 {-10..10}
DISCRETE aux731 {-100..100}
DISCRETE aux732 {-10..10}
DISCRETE aux733 {-10..10}
DISCRETE aux734 {-100..100}
DISCRETE aux735 {-10..10}
DISCRETE aux736 {-10..10}
DISCRETE aux737 {-100..100}
DISCRETE aux738 {-10..10}
DISCRETE aux739 {-10..10}
DISCRETE aux740 {-100..100}
DISCRETE aux741 {-10..10}
DISCRETE aux742 {-10..10}
DISCRETE aux743 {-100..100}
DISCRETE aux744 {-10..10}
DISCRETE aux745 {-10..10}
DISCRETE aux746 {-100..100}
DISCRETE aux747 {-10..10}
DISCRETE aux748 {-10..10}
DISCRETE aux749 {-100..100}
DISCRETE aux750 {-10..10}
DISCRETE aux751 {-10..10}
DISCRETE aux752 {-100..100}
DISCRETE aux753 {-10..10}
DISCRETE aux754 {-10..10}
DISCRETE aux755 {-100..100}
DISCRETE aux756 {-10..10}
DISCRETE aux757 {-10..10}
DISCRETE aux758 {-100..100}
DISCRETE aux759 {-10..10}
DISCRETE aux760 {-10..10}
DISCRETE aux761 {-100..100}
DISCRETE aux762 {-10..10}
DISCRETE aux763 {-10..10}
DISCRETE aux764 {-100..100}
DISCRETE aux765 {-10..10}
DISCRETE aux766 {-10..10}
DISCRETE aux767 {-100..100}
DISCRETE aux768 {-10..10}
DISCRETE aux769 {-10..10}
DISCRETE aux770 {-100..100}
DISCRETE aux771 {-10..10}
DISCRETE aux772 {-10..10}
DISCRETE aux773 {-100..100}
DISCRETE aux774 {-10..10}
DISCRETE aux775 {-10..10}
DISCRETE aux776 {-100..100}

# aliases
ALIAS V4 = V28
ALIAS V13 = V115
ALIAS V30 = V25
ALIAS V51 = V113
ALIAS V57 = V34
ALIAS V69 = V52
ALIAS V70 = V44
ALIAS V72 = V48
ALIAS V90 = V88
ALIAS V98 = V23

**SEARCH**

PRINT [
[V0],[V1],[V2],[V3],[V5],[V6],[V7],[V8],
[V9],[V10],[V11],[V12],[V14],[V15],[V16],[V17],
[V18],[V19],[V20],[V21],[V22],[V23],[V24],[V25],
[V26],[V27],[V28],[V29],[V31],[V32],[V33],[V34],
[V35],[V36],[V37],[V38],[V39],[V40],[V41],[V42],
[V43],[V44],[V45],[V46],[V47],[V48],[V49],[V50],
[V52],[V53],[V54],[V55],[V56],[V58],[V59],[V60],
[V61],[V62],[V63],[V64],[V65],[V66],[V67],[V68],
[V71],[V73],[V74],[V75],[V76],[V77],[V78],[V79],
[V80],[V81],[V82],[V83],[V84],[V85],[V86],[V87],
[V88],[V89],[V91],[V92],[V93],[V94],[V95],[V96],
[V97],[V99],[V100],[V101],[V102],[V103],[V104],[V105],
[V106],[V107],[V108],[V109],[V110],[V111],[V112],[V113],
[V114],[V115],[V116],[V117],[V118],[V119],[V120]]

VARORDER [
V0,V1,V2,V3,V5,V6,V7,V8,
V9,V10,V11,V12,V14,V15,V16,V17,
V18,V19,V20,V21,V22,V23,V24,V25,
V26,V27,V28,V29,V31,V32,V33,V34,
V35,V36,V37,V38,V39,V40,V41,V42,
V43,V44,V45,V46,V47,V48,V49,V50,
V52,V53,V54,V55,V56,V58,V59,V60,
V61,V62,V63,V64,V65,V66,V67,V68,
V71,V73,V74,V75,V76,V77,V78,V79,
V80,V81,V82,V83,V84,V85,V86,V87,
V88,V89,V91,V92,V93,V94,V95,V96,
V97,V99,V100,V101,V102,V103,V104,V105,
V106,V107,V108,V109,V110,V111,V112,V113,
V114,V115,V116,V117,V118,V119,V120,
aux0,aux1,aux2,aux3,aux4,aux5,aux6,aux7,
aux8,aux9,aux10,aux11,aux12,aux13,aux14,aux15,
aux16,aux17,aux18,aux19,aux20,aux21,aux22,aux23,
aux24,aux25,aux26,aux27,aux28,aux29,aux30,aux31,
aux32,aux33,aux34,aux35,aux36,aux37,aux38,aux39,
aux40,aux41,aux42,aux43,aux44,aux45,aux46,aux47,
aux48,aux49,aux50,aux51,aux52,aux53,aux54,aux55,
aux56,aux57,aux58,aux59,aux60,aux61,aux62,aux63,
aux64,aux65,aux66,aux67,aux68,aux69,aux70,aux71,
aux72,aux73,aux74,aux75,aux76,aux77,aux78,aux79,
aux80,aux81,aux82,aux83,aux84,aux85,aux86,aux87,
aux88,aux89,aux90,aux91,aux92,aux93,aux94,aux95,
aux96,aux97,aux98,aux99,aux100,aux101,aux102,aux103,
aux104,aux105,aux106,aux107,aux108,aux109,aux110,aux111,
aux112,aux113,aux114,aux115,aux116,aux117,aux118,aux119,
aux120,aux121,aux122,aux123,aux124,aux125,aux126,aux127,
aux128,aux129,aux130,aux131,aux132,aux133,aux134,aux135,
aux136,aux137,aux138,aux139,aux140,aux141,aux142,aux143,
aux144,aux145,aux146,aux147,aux148,aux149,aux150,aux151,
aux152,aux153,aux154,aux155,aux156,aux157,aux158,aux159,
aux160,aux161,aux162,aux163,aux164,aux165,aux166,aux167,
aux168,aux169,aux170,aux171,aux172,aux173,aux174,aux175,
aux176,aux177,aux178,aux179,aux180,aux181,aux182,aux183,
aux184,aux185,aux186,aux187,aux188,aux189,aux190,aux191,
aux192,aux193,aux194,aux195,aux196,aux197,aux198,aux199,
aux200,aux201,aux202,aux203,aux204,aux205,aux206,aux207,
aux208,aux209,aux210,aux211,aux212,aux213,aux214,aux215,
aux216,aux217,aux218,aux219,aux220,aux221,aux222,aux223,
aux224,aux225,aux226,aux227,aux228,aux229,aux230,aux231,
aux232,aux233,aux234,aux235,aux236,aux237,aux238,aux239,
aux240,aux241,aux242,aux243,aux244,aux245,aux246,aux247,
aux248,aux249,aux250,aux251,aux252,aux253,aux254,aux255,
aux256,aux257,aux258,aux259,aux260,aux261,aux262,aux263,
aux264,aux265,aux266,aux267,aux268,aux269,aux270,aux271,
aux272,aux273,aux274,aux275,aux276,aux277,aux278,aux279,
aux280,aux281,aux282,aux283,aux284,aux285,aux286,aux287,
aux288,aux289,aux290,aux291,aux292,aux293,aux294,aux295,
aux296,aux297,aux298,aux299,aux300,aux301,aux302,aux303,
aux304,aux305,aux306,aux307,aux308,aux309,aux310,aux311,
aux312,aux313,aux314,aux315,aux316,aux317,aux318,aux319,
aux320,aux321,aux322,aux323,aux324,aux325,aux326,aux327,
aux328,aux329,aux330,aux331,aux332,aux333,aux334,aux335,
aux336,aux337,aux338,aux339,aux340,aux341,aux342,aux343,
aux344,aux345,aux346,aux347,aux348,aux349,aux350,aux351,
aux352,aux353,aux354,aux355,aux356,aux357,aux358,aux359,
aux360,aux361,aux362,aux363,aux364,aux365,aux366,aux367,
aux368,aux369,aux370,aux371,aux372,aux373,aux374,aux375,
aux376,aux377,aux378,aux379,aux380,aux381,aux382,aux383,
aux384,aux385,aux386,aux387,aux388,aux389,aux390,aux391,
aux392,aux393,aux394,aux395,aux396,aux397,aux398,aux399,
aux400,aux401,aux402,aux403,aux404,aux405,aux406,aux407,
aux408,aux409,aux410,aux411,aux412,aux413,aux414,aux415,
aux416,aux417,aux418,aux419,aux420,aux421,aux422,aux423,
aux424,aux425,aux426,aux427,aux428,aux429,aux430,aux431,
aux432,aux433,aux434,aux435,aux436,aux437,aux438,aux439,
aux440,aux441,aux442,aux443,aux444,aux445,aux446,aux447,
aux448,aux449,aux450,aux451,aux452,aux453,aux454,aux455,
aux456,aux457,aux458,aux459,aux460,aux461,aux462,aux463,
aux464,aux465,aux466,aux467,aux468,aux469,aux470,aux471,
aux472,aux473,aux474,aux475,aux476,aux477,aux478,aux479,
aux480,aux481,aux482,aux483,aux484,aux485,aux486,aux487,
aux488,aux489,aux490,aux491,aux492,aux493,aux494,aux495,
aux496,aux497,aux498,aux499,aux500,aux501,aux502,aux503,
aux504,aux505,aux506,aux507,aux508,aux509,aux510,aux511,
aux512,aux513,aux514,aux515,aux516,aux517,aux518,aux519,
aux520,aux521,aux522,aux523,aux524,aux525,aux526,aux527,
aux528,aux529,aux530,aux531,aux532,aux533,aux534,aux535,
aux536,aux537,aux538,aux539,aux540,aux541,aux542,aux543,
aux544,aux545,aux546,aux547,aux548,aux549,aux550,aux551,
aux552,aux553,aux554,aux555,aux556,aux557,aux558,aux559,
aux560,aux561,aux562,aux563,aux564,aux565,aux566,aux567,
aux568,aux569,aux570,aux571,aux572,aux573,aux574,aux575,
aux576,aux577,aux578,aux579,aux580,aux581,aux582,aux583,
aux584,aux585,aux586,aux587,aux588,aux589,aux590,aux591,
aux592,aux593,aux594,aux595,aux596,aux597,aux598,aux599,
aux600,aux601,aux602,aux603,aux604,aux605,aux606,aux607,
aux608,aux609,aux610,aux611,aux612,aux613,aux614,aux615,
aux616,aux617,aux618,aux619,aux620,aux621,aux622,aux623,
aux624,aux625,aux626,aux627,aux628,aux629,aux630,aux631,
aux632,aux633,aux634,aux635,aux636,aux637,aux638,aux639,
aux640,aux641,aux642,aux643,aux644,aux645,aux646,aux647,
aux648,aux649,aux650,aux651,aux652,aux653,aux654,aux655,
aux656,aux657,aux658,aux659,aux660,aux661,aux662,aux663,
aux664,aux665,aux666,aux667,aux668,aux669,aux670,aux671,
aux672,aux673,aux674,aux675,aux676,aux677,aux678,aux679,
aux680,aux681,aux682,aux683,aux684,aux685,aux686,aux687,
aux688,aux689,aux690,aux691,aux692,aux693,aux694,aux695,
aux696,aux697,aux698,aux699,aux700,aux701,aux702,aux703,
aux704,aux705,aux706,aux707,aux708,aux709,aux710,aux711,
aux712,aux713,aux714,aux715,aux716,aux717,aux718,aux719,
aux720,aux721,aux722,aux723,aux724,aux725,aux726,aux727,
aux728,aux729,aux730,aux731,aux732,aux733,aux734,aux735,
aux736,aux737,aux738,aux739,aux740,aux741,aux742,aux743,
aux744,aux745,aux746,aux747,aux748,aux749,aux750,aux751,
aux752,aux753,aux754,aux755,aux756,aux757,aux758,aux759,
aux760,aux761,aux762,aux763,aux764,aux765,aux766,aux767,
aux768,aux769,aux770,aux771,aux772,aux773,aux774,aux775,
aux776]


**CONSTRAINTS**

weightedsumgeq([1,-1], [V54,V99], aux774)
weightedsumleq([1,-1], [V54,V99], aux774)
weightedsumgeq([1,-1], [V99,V54], aux775)
weightedsumleq([1,-1], [V99,V54], aux775)
product(aux774,aux775, aux776)
ineq(aux776,0,-1)
weightedsumgeq([1,-1], [V90,V98], aux771)
weightedsumleq([1,-1], [V90,V98], aux771)
weightedsumgeq([1,-1], [V98,V90], aux772)
weightedsumleq([1,-1], [V98,V90], aux772)
product(aux771,aux772, aux773)
ineq(aux773,0,-1)
diseq(V75, V98)
diseq(V52, V98)
diseq(V51, V98)
diseq(V48, V98)
weightedsumgeq([1,-1], [V4,V98], aux768)
weightedsumleq([1,-1], [V4,V98], aux768)
weightedsumgeq([1,-1], [V98,V4], aux769)
weightedsumleq([1,-1], [V98,V4], aux769)
product(aux768,aux769, aux770)
ineq(aux770,0,-1)
diseq(V34, V98)
diseq(V25, V98)
weightedsumgeq([1,-1], [V13,V98], aux765)
weightedsumleq([1,-1], [V13,V98], aux765)
weightedsumgeq([1,-1], [V98,V13], aux766)
weightedsumleq([1,-1], [V98,V13], aux766)
product(aux765,aux766, aux767)
ineq(aux767,0,-1)
weightedsumgeq([1,-1], [V79,V97], aux762)
weightedsumleq([1,-1], [V79,V97], aux762)
weightedsumgeq([1,-1], [V97,V79], aux763)
weightedsumleq([1,-1], [V97,V79], aux763)
product(aux762,aux763, aux764)
ineq(aux764,0,-1)
weightedsumgeq([1,-1], [V65,V97], aux759)
weightedsumleq([1,-1], [V65,V97], aux759)
weightedsumgeq([1,-1], [V97,V65], aux760)
weightedsumleq([1,-1], [V97,V65], aux760)
product(aux759,aux760, aux761)
ineq(aux761,0,-1)
weightedsumgeq([1,-1], [V56,V97], aux756)
weightedsumleq([1,-1], [V56,V97], aux756)
weightedsumgeq([1,-1], [V97,V56], aux757)
weightedsumleq([1,-1], [V97,V56], aux757)
product(aux756,aux757, aux758)
ineq(aux758,0,-1)
weightedsumgeq([1,-1], [V55,V97], aux753)
weightedsumleq([1,-1], [V55,V97], aux753)
weightedsumgeq([1,-1], [V97,V55], aux754)
weightedsumleq([1,-1], [V97,V55], aux754)
product(aux753,aux754, aux755)
ineq(aux755,0,-1)
weightedsumgeq([1,-1], [V39,V97], aux750)
weightedsumleq([1,-1], [V39,V97], aux750)
weightedsumgeq([1,-1], [V97,V39], aux751)
weightedsumleq([1,-1], [V97,V39], aux751)
product(aux750,aux751, aux752)
ineq(aux752,0,-1)
weightedsumgeq([1,-1], [V49,V96], aux747)
weightedsumleq([1,-1], [V49,V96], aux747)
weightedsumgeq([1,-1], [V96,V49], aux748)
weightedsumleq([1,-1], [V96,V49], aux748)
product(aux747,aux748, aux749)
ineq(aux749,0,-1)
diseq(V24, V95)
diseq(V21, V95)
weightedsumgeq([1,-1], [V117,V95], aux744)
weightedsumleq([1,-1], [V117,V95], aux744)
weightedsumgeq([1,-1], [V95,V117], aux745)
weightedsumleq([1,-1], [V95,V117], aux745)
product(aux744,aux745, aux746)
ineq(aux746,0,-1)
diseq(V101, V95)
diseq(V45, V94)
weightedsumgeq([1,-1], [V93,V96], aux741)
weightedsumleq([1,-1], [V93,V96], aux741)
weightedsumgeq([1,-1], [V96,V93], aux742)
weightedsumleq([1,-1], [V96,V93], aux742)
product(aux741,aux742, aux743)
ineq(aux743,0,-1)
diseq(V49, V93)
diseq(V92, V94)
diseq(V45, V92)
diseq(V17, V92)
weightedsumgeq([1,-1], [V85,V91], aux738)
weightedsumleq([1,-1], [V85,V91], aux738)
weightedsumgeq([1,-1], [V91,V85], aux739)
weightedsumleq([1,-1], [V91,V85], aux739)
product(aux738,aux739, aux740)
ineq(aux740,0,-1)
weightedsumgeq([1,-1], [V6,V91], aux735)
weightedsumleq([1,-1], [V6,V91], aux735)
weightedsumgeq([1,-1], [V91,V6], aux736)
weightedsumleq([1,-1], [V91,V6], aux736)
product(aux735,aux736, aux737)
ineq(aux737,0,-1)
weightedsumgeq([1,-1], [V75,V90], aux732)
weightedsumleq([1,-1], [V75,V90], aux732)
weightedsumgeq([1,-1], [V90,V75], aux733)
weightedsumleq([1,-1], [V90,V75], aux733)
product(aux732,aux733, aux734)
ineq(aux734,0,-1)
weightedsumgeq([1,-1], [V51,V90], aux729)
weightedsumleq([1,-1], [V51,V90], aux729)
weightedsumgeq([1,-1], [V90,V51], aux730)
weightedsumleq([1,-1], [V90,V51], aux730)
product(aux729,aux730, aux731)
ineq(aux731,0,-1)
diseq(V4, V90)
weightedsumgeq([1,-1], [V34,V90], aux726)
weightedsumleq([1,-1], [V34,V90], aux726)
weightedsumgeq([1,-1], [V90,V34], aux727)
weightedsumleq([1,-1], [V90,V34], aux727)
product(aux726,aux727, aux728)
ineq(aux728,0,-1)
weightedsumgeq([1,-1], [V74,V9], aux723)
weightedsumleq([1,-1], [V74,V9], aux723)
weightedsumgeq([1,-1], [V9,V74], aux724)
weightedsumleq([1,-1], [V9,V74], aux724)
product(aux723,aux724, aux725)
ineq(aux725,0,-1)
weightedsumgeq([1,-1], [V38,V9], aux720)
weightedsumleq([1,-1], [V38,V9], aux720)
weightedsumgeq([1,-1], [V9,V38], aux721)
weightedsumleq([1,-1], [V9,V38], aux721)
product(aux720,aux721, aux722)
ineq(aux722,0,-1)
weightedsumgeq([1,-1], [V31,V9], aux717)
weightedsumleq([1,-1], [V31,V9], aux717)
weightedsumgeq([1,-1], [V9,V31], aux718)
weightedsumleq([1,-1], [V9,V31], aux718)
product(aux717,aux718, aux719)
ineq(aux719,0,-1)
diseq(V22, V9)
weightedsumgeq([1,-1], [V118,V9], aux714)
weightedsumleq([1,-1], [V118,V9], aux714)
weightedsumgeq([1,-1], [V9,V118], aux715)
weightedsumleq([1,-1], [V9,V118], aux715)
product(aux714,aux715, aux716)
ineq(aux716,0,-1)
diseq(V105, V9)
weightedsumgeq([1,-1], [V53,V89], aux711)
weightedsumleq([1,-1], [V53,V89], aux711)
weightedsumgeq([1,-1], [V89,V53], aux712)
weightedsumleq([1,-1], [V89,V53], aux712)
product(aux711,aux712, aux713)
ineq(aux713,0,-1)
diseq(V18, V89)
diseq(V112, V89)
sumgeq([V88,V94], 2)
diseq(V88, V94)
sumgeq([V88,V92], 2)
diseq(V88, V92)
sumgeq([V86,V88], 2)
diseq(V86, V88)
sumgeq([V71,V88], 2)
diseq(V71, V88)
sumgeq([V45,V88], 2)
diseq(V45, V88)
sumgeq([V41,V88], 2)
diseq(V41, V88)
sumgeq([V36,V88], 2)
diseq(V36, V88)
sumgeq([V32,V88], 2)
diseq(V32, V88)
sumgeq([V27,V88], 2)
diseq(V27, V88)
sumgeq([V17,V88], 2)
diseq(V17, V88)
diseq(V87, V95)
weightedsumgeq([1,-1], [V24,V87], aux708)
weightedsumleq([1,-1], [V24,V87], aux708)
weightedsumgeq([1,-1], [V87,V24], aux709)
weightedsumleq([1,-1], [V87,V24], aux709)
product(aux708,aux709, aux710)
ineq(aux710,0,-1)
diseq(V21, V87)
diseq(V117, V87)
weightedsumgeq([1,-1], [V101,V87], aux705)
weightedsumleq([1,-1], [V101,V87], aux705)
weightedsumgeq([1,-1], [V87,V101], aux706)
weightedsumleq([1,-1], [V87,V101], aux706)
product(aux705,aux706, aux707)
ineq(aux707,0,-1)
weightedsumgeq([1,-1], [V86,V94], aux702)
weightedsumleq([1,-1], [V86,V94], aux702)
weightedsumgeq([1,-1], [V94,V86], aux703)
weightedsumleq([1,-1], [V94,V86], aux703)
product(aux702,aux703, aux704)
ineq(aux704,0,-1)
weightedsumgeq([1,-1], [V86,V92], aux699)
weightedsumleq([1,-1], [V86,V92], aux699)
weightedsumgeq([1,-1], [V92,V86], aux700)
weightedsumleq([1,-1], [V92,V86], aux700)
product(aux699,aux700, aux701)
ineq(aux701,0,-1)
diseq(V71, V86)
diseq(V45, V86)
diseq(V41, V86)
weightedsumgeq([1,-1], [V32,V86], aux696)
weightedsumleq([1,-1], [V32,V86], aux696)
weightedsumgeq([1,-1], [V86,V32], aux697)
weightedsumleq([1,-1], [V86,V32], aux697)
product(aux696,aux697, aux698)
ineq(aux698,0,-1)
diseq(V27, V86)
diseq(V17, V86)
diseq(V6, V85)
diseq(V84, V97)
diseq(V81, V84)
weightedsumgeq([1,-1], [V79,V84], aux693)
weightedsumleq([1,-1], [V79,V84], aux693)
weightedsumgeq([1,-1], [V84,V79], aux694)
weightedsumleq([1,-1], [V84,V79], aux694)
product(aux693,aux694, aux695)
ineq(aux695,0,-1)
weightedsumgeq([1,-1], [V65,V84], aux690)
weightedsumleq([1,-1], [V65,V84], aux690)
weightedsumgeq([1,-1], [V84,V65], aux691)
weightedsumleq([1,-1], [V84,V65], aux691)
product(aux690,aux691, aux692)
ineq(aux692,0,-1)
diseq(V56, V84)
diseq(V55, V84)
weightedsumgeq([1,-1], [V39,V84], aux687)
weightedsumleq([1,-1], [V39,V84], aux687)
weightedsumgeq([1,-1], [V84,V39], aux688)
weightedsumleq([1,-1], [V84,V39], aux688)
product(aux687,aux688, aux689)
ineq(aux689,0,-1)
weightedsumgeq([1,-1], [V83,V89], aux684)
weightedsumleq([1,-1], [V83,V89], aux684)
weightedsumgeq([1,-1], [V89,V83], aux685)
weightedsumleq([1,-1], [V89,V83], aux685)
product(aux684,aux685, aux686)
ineq(aux686,0,-1)
weightedsumgeq([1,-1], [V73,V83], aux681)
weightedsumleq([1,-1], [V73,V83], aux681)
weightedsumgeq([1,-1], [V83,V73], aux682)
weightedsumleq([1,-1], [V83,V73], aux682)
product(aux681,aux682, aux683)
ineq(aux683,0,-1)
diseq(V66, V83)
diseq(V53, V83)
diseq(V19, V83)
diseq(V18, V83)
diseq(V120, V83)
weightedsumgeq([1,-1], [V112,V83], aux678)
weightedsumleq([1,-1], [V112,V83], aux678)
weightedsumgeq([1,-1], [V83,V112], aux679)
weightedsumleq([1,-1], [V83,V112], aux679)
product(aux678,aux679, aux680)
ineq(aux680,0,-1)
diseq(V11, V83)
diseq(V82, V96)
diseq(V82, V93)
diseq(V49, V82)
diseq(V42, V82)
diseq(V29, V82)
weightedsumgeq([1,-1], [V119,V82], aux675)
weightedsumleq([1,-1], [V119,V82], aux675)
weightedsumgeq([1,-1], [V82,V119], aux676)
weightedsumleq([1,-1], [V82,V119], aux676)
product(aux675,aux676, aux677)
ineq(aux677,0,-1)
diseq(V81, V97)
weightedsumgeq([1,-1], [V79,V81], aux672)
weightedsumleq([1,-1], [V79,V81], aux672)
weightedsumgeq([1,-1], [V81,V79], aux673)
weightedsumleq([1,-1], [V81,V79], aux673)
product(aux672,aux673, aux674)
ineq(aux674,0,-1)
weightedsumgeq([1,-1], [V65,V81], aux669)
weightedsumleq([1,-1], [V65,V81], aux669)
weightedsumgeq([1,-1], [V81,V65], aux670)
weightedsumleq([1,-1], [V81,V65], aux670)
product(aux669,aux670, aux671)
ineq(aux671,0,-1)
diseq(V56, V81)
diseq(V55, V81)
diseq(V39, V81)
diseq(V80, V95)
diseq(V80, V87)
weightedsumgeq([1,-1], [V26,V80], aux666)
weightedsumleq([1,-1], [V26,V80], aux666)
weightedsumgeq([1,-1], [V80,V26], aux667)
weightedsumleq([1,-1], [V80,V26], aux667)
product(aux666,aux667, aux668)
ineq(aux668,0,-1)
diseq(V24, V80)
weightedsumgeq([1,-1], [V21,V80], aux663)
weightedsumleq([1,-1], [V21,V80], aux663)
weightedsumgeq([1,-1], [V80,V21], aux664)
weightedsumleq([1,-1], [V80,V21], aux664)
product(aux663,aux664, aux665)
ineq(aux665,0,-1)
weightedsumgeq([1,-1], [V20,V80], aux660)
weightedsumleq([1,-1], [V20,V80], aux660)
weightedsumgeq([1,-1], [V80,V20], aux661)
weightedsumleq([1,-1], [V80,V20], aux661)
product(aux660,aux661, aux662)
ineq(aux662,0,-1)
weightedsumgeq([1,-1], [V117,V80], aux657)
weightedsumleq([1,-1], [V117,V80], aux657)
weightedsumgeq([1,-1], [V80,V117], aux658)
weightedsumleq([1,-1], [V80,V117], aux658)
product(aux657,aux658, aux659)
ineq(aux659,0,-1)
diseq(V107, V80)
diseq(V101, V80)
weightedsumgeq([1,-1], [V62,V8], aux654)
weightedsumleq([1,-1], [V62,V8], aux654)
weightedsumgeq([1,-1], [V8,V62], aux655)
weightedsumleq([1,-1], [V8,V62], aux655)
product(aux654,aux655, aux656)
ineq(aux656,0,-1)
weightedsumgeq([1,-1], [V61,V8], aux651)
weightedsumleq([1,-1], [V61,V8], aux651)
weightedsumgeq([1,-1], [V8,V61], aux652)
weightedsumleq([1,-1], [V8,V61], aux652)
product(aux651,aux652, aux653)
ineq(aux653,0,-1)
weightedsumgeq([1,-1], [V47,V8], aux648)
weightedsumleq([1,-1], [V47,V8], aux648)
weightedsumgeq([1,-1], [V8,V47], aux649)
weightedsumleq([1,-1], [V8,V47], aux649)
product(aux648,aux649, aux650)
ineq(aux650,0,-1)
weightedsumgeq([1,-1], [V56,V79], aux645)
weightedsumleq([1,-1], [V56,V79], aux645)
weightedsumgeq([1,-1], [V79,V56], aux646)
weightedsumleq([1,-1], [V79,V56], aux646)
product(aux645,aux646, aux647)
ineq(aux647,0,-1)
diseq(V55, V79)
weightedsumgeq([1,-1], [V39,V79], aux642)
weightedsumleq([1,-1], [V39,V79], aux642)
weightedsumgeq([1,-1], [V79,V39], aux643)
weightedsumleq([1,-1], [V79,V39], aux643)
product(aux642,aux643, aux644)
ineq(aux644,0,-1)
weightedsumgeq([1,-1], [V78,V99], aux639)
weightedsumleq([1,-1], [V78,V99], aux639)
weightedsumgeq([1,-1], [V99,V78], aux640)
weightedsumleq([1,-1], [V99,V78], aux640)
product(aux639,aux640, aux641)
ineq(aux641,0,-1)
diseq(V59, V78)
weightedsumgeq([1,-1], [V54,V78], aux636)
weightedsumleq([1,-1], [V54,V78], aux636)
weightedsumgeq([1,-1], [V78,V54], aux637)
weightedsumleq([1,-1], [V78,V54], aux637)
product(aux636,aux637, aux638)
ineq(aux638,0,-1)
weightedsumgeq([1,-1], [V109,V78], aux633)
weightedsumleq([1,-1], [V109,V78], aux633)
weightedsumgeq([1,-1], [V78,V109], aux634)
weightedsumleq([1,-1], [V78,V109], aux634)
product(aux633,aux634, aux635)
ineq(aux635,0,-1)
weightedsumgeq([1,-1], [V77,V9], aux630)
weightedsumleq([1,-1], [V77,V9], aux630)
weightedsumgeq([1,-1], [V9,V77], aux631)
weightedsumleq([1,-1], [V9,V77], aux631)
product(aux630,aux631, aux632)
ineq(aux632,0,-1)
diseq(V74, V77)
diseq(V38, V77)
diseq(V31, V77)
weightedsumgeq([1,-1], [V22,V77], aux627)
weightedsumleq([1,-1], [V22,V77], aux627)
weightedsumgeq([1,-1], [V77,V22], aux628)
weightedsumleq([1,-1], [V77,V22], aux628)
product(aux627,aux628, aux629)
ineq(aux629,0,-1)
diseq(V118, V77)
diseq(V108, V77)
diseq(V105, V77)
weightedsumgeq([1,-1], [V76,V96], aux624)
weightedsumleq([1,-1], [V76,V96], aux624)
weightedsumgeq([1,-1], [V96,V76], aux625)
weightedsumleq([1,-1], [V96,V76], aux625)
product(aux624,aux625, aux626)
ineq(aux626,0,-1)
weightedsumgeq([1,-1], [V76,V93], aux621)
weightedsumleq([1,-1], [V76,V93], aux621)
weightedsumgeq([1,-1], [V93,V76], aux622)
weightedsumleq([1,-1], [V93,V76], aux622)
product(aux621,aux622, aux623)
ineq(aux623,0,-1)
diseq(V76, V82)
diseq(V49, V76)
weightedsumgeq([1,-1], [V42,V76], aux618)
weightedsumleq([1,-1], [V42,V76], aux618)
weightedsumgeq([1,-1], [V76,V42], aux619)
weightedsumleq([1,-1], [V76,V42], aux619)
product(aux618,aux619, aux620)
ineq(aux620,0,-1)
diseq(V29, V76)
diseq(V119, V76)
weightedsumgeq([1,-1], [V111,V76], aux615)
weightedsumleq([1,-1], [V111,V76], aux615)
weightedsumgeq([1,-1], [V76,V111], aux616)
weightedsumleq([1,-1], [V76,V111], aux616)
product(aux615,aux616, aux617)
ineq(aux617,0,-1)
weightedsumgeq([1,-1], [V38,V74], aux612)
weightedsumleq([1,-1], [V38,V74], aux612)
weightedsumgeq([1,-1], [V74,V38], aux613)
weightedsumleq([1,-1], [V74,V38], aux613)
product(aux612,aux613, aux614)
ineq(aux614,0,-1)
weightedsumgeq([1,-1], [V31,V74], aux609)
weightedsumleq([1,-1], [V31,V74], aux609)
weightedsumgeq([1,-1], [V74,V31], aux610)
weightedsumleq([1,-1], [V74,V31], aux610)
product(aux609,aux610, aux611)
ineq(aux611,0,-1)
diseq(V22, V74)
weightedsumgeq([1,-1], [V118,V74], aux606)
weightedsumleq([1,-1], [V118,V74], aux606)
weightedsumgeq([1,-1], [V74,V118], aux607)
weightedsumleq([1,-1], [V74,V118], aux607)
product(aux606,aux607, aux608)
ineq(aux608,0,-1)
weightedsumgeq([1,-1], [V73,V89], aux603)
weightedsumleq([1,-1], [V73,V89], aux603)
weightedsumgeq([1,-1], [V89,V73], aux604)
weightedsumleq([1,-1], [V89,V73], aux604)
product(aux603,aux604, aux605)
ineq(aux605,0,-1)
weightedsumgeq([1,-1], [V53,V73], aux600)
weightedsumleq([1,-1], [V53,V73], aux600)
weightedsumgeq([1,-1], [V73,V53], aux601)
weightedsumleq([1,-1], [V73,V53], aux601)
product(aux600,aux601, aux602)
ineq(aux602,0,-1)
diseq(V19, V73)
weightedsumgeq([1,-1], [V18,V73], aux597)
weightedsumleq([1,-1], [V18,V73], aux597)
weightedsumgeq([1,-1], [V73,V18], aux598)
weightedsumleq([1,-1], [V73,V18], aux598)
product(aux597,aux598, aux599)
ineq(aux599,0,-1)
weightedsumgeq([1,-1], [V112,V73], aux594)
weightedsumleq([1,-1], [V112,V73], aux594)
weightedsumgeq([1,-1], [V73,V112], aux595)
weightedsumleq([1,-1], [V73,V112], aux595)
product(aux594,aux595, aux596)
ineq(aux596,0,-1)
sumgeq([V72,V8], 2)
diseq(V72, V8)
sumgeq([V67,V72], 2)
diseq(V67, V72)
sumgeq([V62,V72], 2)
diseq(V62, V72)
sumgeq([V61,V72], 2)
diseq(V61, V72)
sumgeq([V47,V72], 2)
diseq(V47, V72)
sumgeq([V46,V72], 2)
diseq(V46, V72)
sumgeq([V33,V72], 2)
diseq(V33, V72)
sumgeq([V3,V72], 2)
diseq(V3, V72)
sumgeq([V15,V72], 2)
diseq(V15, V72)
sumgeq([V114,V72], 2)
diseq(V114, V72)
diseq(V71, V94)
diseq(V71, V92)
diseq(V45, V71)
diseq(V32, V71)
weightedsumgeq([1,-1], [V27,V71], aux591)
weightedsumleq([1,-1], [V27,V71], aux591)
weightedsumgeq([1,-1], [V71,V27], aux592)
weightedsumleq([1,-1], [V71,V27], aux592)
product(aux591,aux592, aux593)
ineq(aux593,0,-1)
weightedsumgeq([1,-1], [V17,V71], aux588)
weightedsumleq([1,-1], [V17,V71], aux588)
weightedsumgeq([1,-1], [V71,V17], aux589)
weightedsumleq([1,-1], [V71,V17], aux589)
product(aux588,aux589, aux590)
ineq(aux590,0,-1)
weightedsumgeq([1,-1], [V70,V98], aux585)
weightedsumleq([1,-1], [V70,V98], aux585)
weightedsumgeq([1,-1], [V98,V70], aux586)
weightedsumleq([1,-1], [V98,V70], aux586)
product(aux585,aux586, aux587)
ineq(aux587,0,-1)
diseq(V70, V90)
diseq(V70, V75)
diseq(V52, V70)
diseq(V51, V70)
diseq(V48, V70)
diseq(V4, V70)
diseq(V34, V70)
diseq(V25, V70)
diseq(V13, V70)
diseq(V63, V7)
weightedsumgeq([1,-1], [V58,V7], aux582)
weightedsumleq([1,-1], [V58,V7], aux582)
weightedsumgeq([1,-1], [V7,V58], aux583)
weightedsumleq([1,-1], [V7,V58], aux583)
product(aux582,aux583, aux584)
ineq(aux584,0,-1)
weightedsumgeq([1,-1], [V40,V7], aux579)
weightedsumleq([1,-1], [V40,V7], aux579)
weightedsumgeq([1,-1], [V7,V40], aux580)
weightedsumleq([1,-1], [V7,V40], aux580)
product(aux579,aux580, aux581)
ineq(aux581,0,-1)
diseq(V102, V7)
weightedsumgeq([1,-1], [V100,V7], aux576)
weightedsumleq([1,-1], [V100,V7], aux576)
weightedsumgeq([1,-1], [V7,V100], aux577)
weightedsumleq([1,-1], [V7,V100], aux577)
product(aux576,aux577, aux578)
ineq(aux578,0,-1)
diseq(V1, V7)
sumgeq([V69,V7], 2)
diseq(V69, V7)
sumgeq([V64,V69], 2)
diseq(V64, V69)
sumgeq([V63,V69], 2)
diseq(V63, V69)
sumgeq([V58,V69], 2)
diseq(V58, V69)
sumgeq([V43,V69], 2)
diseq(V43, V69)
sumgeq([V40,V69], 2)
diseq(V40, V69)
sumgeq([V14,V69], 2)
diseq(V14, V69)
sumgeq([V102,V69], 2)
diseq(V102, V69)
sumgeq([V100,V69], 2)
diseq(V100, V69)
sumgeq([V1,V69], 2)
diseq(V1, V69)
weightedsumgeq([1,-1], [V68,V96], aux573)
weightedsumleq([1,-1], [V68,V96], aux573)
weightedsumgeq([1,-1], [V96,V68], aux574)
weightedsumleq([1,-1], [V96,V68], aux574)
product(aux573,aux574, aux575)
ineq(aux575,0,-1)
weightedsumgeq([1,-1], [V68,V93], aux570)
weightedsumleq([1,-1], [V68,V93], aux570)
weightedsumgeq([1,-1], [V93,V68], aux571)
weightedsumleq([1,-1], [V93,V68], aux571)
product(aux570,aux571, aux572)
ineq(aux572,0,-1)
weightedsumgeq([1,-1], [V68,V82], aux567)
weightedsumleq([1,-1], [V68,V82], aux567)
weightedsumgeq([1,-1], [V82,V68], aux568)
weightedsumleq([1,-1], [V82,V68], aux568)
product(aux567,aux568, aux569)
ineq(aux569,0,-1)
weightedsumgeq([1,-1], [V68,V76], aux564)
weightedsumleq([1,-1], [V68,V76], aux564)
weightedsumgeq([1,-1], [V76,V68], aux565)
weightedsumleq([1,-1], [V76,V68], aux565)
product(aux564,aux565, aux566)
ineq(aux566,0,-1)
diseq(V49, V68)
weightedsumgeq([1,-1], [V42,V68], aux561)
weightedsumleq([1,-1], [V42,V68], aux561)
weightedsumgeq([1,-1], [V68,V42], aux562)
weightedsumleq([1,-1], [V68,V42], aux562)
product(aux561,aux562, aux563)
ineq(aux563,0,-1)
weightedsumgeq([1,-1], [V29,V68], aux558)
weightedsumleq([1,-1], [V29,V68], aux558)
weightedsumgeq([1,-1], [V68,V29], aux559)
weightedsumleq([1,-1], [V68,V29], aux559)
product(aux558,aux559, aux560)
ineq(aux560,0,-1)
weightedsumgeq([1,-1], [V119,V68], aux555)
weightedsumleq([1,-1], [V119,V68], aux555)
weightedsumgeq([1,-1], [V68,V119], aux556)
weightedsumleq([1,-1], [V68,V119], aux556)
product(aux555,aux556, aux557)
ineq(aux557,0,-1)
diseq(V111, V68)
weightedsumgeq([1,-1], [V67,V8], aux552)
weightedsumleq([1,-1], [V67,V8], aux552)
weightedsumgeq([1,-1], [V8,V67], aux553)
weightedsumleq([1,-1], [V8,V67], aux553)
product(aux552,aux553, aux554)
ineq(aux554,0,-1)
diseq(V62, V67)
diseq(V61, V67)
diseq(V47, V67)
diseq(V46, V67)
weightedsumgeq([1,-1], [V15,V67], aux549)
weightedsumleq([1,-1], [V15,V67], aux549)
weightedsumgeq([1,-1], [V67,V15], aux550)
weightedsumleq([1,-1], [V67,V15], aux550)
product(aux549,aux550, aux551)
ineq(aux551,0,-1)
weightedsumgeq([1,-1], [V66,V89], aux546)
weightedsumleq([1,-1], [V66,V89], aux546)
weightedsumgeq([1,-1], [V89,V66], aux547)
weightedsumleq([1,-1], [V89,V66], aux547)
product(aux546,aux547, aux548)
ineq(aux548,0,-1)
diseq(V66, V73)
diseq(V53, V66)
diseq(V19, V66)
weightedsumgeq([1,-1], [V18,V66], aux543)
weightedsumleq([1,-1], [V18,V66], aux543)
weightedsumgeq([1,-1], [V66,V18], aux544)
weightedsumleq([1,-1], [V66,V18], aux544)
product(aux543,aux544, aux545)
ineq(aux545,0,-1)
diseq(V112, V66)
weightedsumgeq([1,-1], [V65,V79], aux540)
weightedsumleq([1,-1], [V65,V79], aux540)
weightedsumgeq([1,-1], [V79,V65], aux541)
weightedsumleq([1,-1], [V79,V65], aux541)
product(aux540,aux541, aux542)
ineq(aux542,0,-1)
diseq(V56, V65)
weightedsumgeq([1,-1], [V55,V65], aux537)
weightedsumleq([1,-1], [V55,V65], aux537)
weightedsumgeq([1,-1], [V65,V55], aux538)
weightedsumleq([1,-1], [V65,V55], aux538)
product(aux537,aux538, aux539)
ineq(aux539,0,-1)
diseq(V39, V65)
weightedsumgeq([1,-1], [V64,V7], aux534)
weightedsumleq([1,-1], [V64,V7], aux534)
weightedsumgeq([1,-1], [V7,V64], aux535)
weightedsumleq([1,-1], [V7,V64], aux535)
product(aux534,aux535, aux536)
ineq(aux536,0,-1)
diseq(V63, V64)
weightedsumgeq([1,-1], [V58,V64], aux531)
weightedsumleq([1,-1], [V58,V64], aux531)
weightedsumgeq([1,-1], [V64,V58], aux532)
weightedsumleq([1,-1], [V64,V58], aux532)
product(aux531,aux532, aux533)
ineq(aux533,0,-1)
weightedsumgeq([1,-1], [V40,V64], aux528)
weightedsumleq([1,-1], [V40,V64], aux528)
weightedsumgeq([1,-1], [V64,V40], aux529)
weightedsumleq([1,-1], [V64,V40], aux529)
product(aux528,aux529, aux530)
ineq(aux530,0,-1)
diseq(V14, V64)
diseq(V102, V64)
diseq(V100, V64)
diseq(V1, V64)
weightedsumgeq([1,-1], [V40,V63], aux525)
weightedsumleq([1,-1], [V40,V63], aux525)
weightedsumgeq([1,-1], [V63,V40], aux526)
weightedsumleq([1,-1], [V63,V40], aux526)
product(aux525,aux526, aux527)
ineq(aux527,0,-1)
weightedsumgeq([1,-1], [V102,V63], aux522)
weightedsumleq([1,-1], [V102,V63], aux522)
weightedsumgeq([1,-1], [V63,V102], aux523)
weightedsumleq([1,-1], [V63,V102], aux523)
product(aux522,aux523, aux524)
ineq(aux524,0,-1)
weightedsumgeq([1,-1], [V100,V63], aux519)
weightedsumleq([1,-1], [V100,V63], aux519)
weightedsumgeq([1,-1], [V63,V100], aux520)
weightedsumleq([1,-1], [V63,V100], aux520)
product(aux519,aux520, aux521)
ineq(aux521,0,-1)
weightedsumgeq([1,-1], [V1,V63], aux516)
weightedsumleq([1,-1], [V1,V63], aux516)
weightedsumgeq([1,-1], [V63,V1], aux517)
weightedsumleq([1,-1], [V63,V1], aux517)
product(aux516,aux517, aux518)
ineq(aux518,0,-1)
diseq(V61, V62)
weightedsumgeq([1,-1], [V47,V62], aux513)
weightedsumleq([1,-1], [V47,V62], aux513)
weightedsumgeq([1,-1], [V62,V47], aux514)
weightedsumleq([1,-1], [V62,V47], aux514)
product(aux513,aux514, aux515)
ineq(aux515,0,-1)
weightedsumgeq([1,-1], [V47,V61], aux510)
weightedsumleq([1,-1], [V47,V61], aux510)
weightedsumgeq([1,-1], [V61,V47], aux511)
weightedsumleq([1,-1], [V61,V47], aux511)
product(aux510,aux511, aux512)
ineq(aux512,0,-1)
diseq(V60, V97)
diseq(V60, V84)
diseq(V60, V81)
weightedsumgeq([1,-1], [V60,V79], aux507)
weightedsumleq([1,-1], [V60,V79], aux507)
weightedsumgeq([1,-1], [V79,V60], aux508)
weightedsumleq([1,-1], [V79,V60], aux508)
product(aux507,aux508, aux509)
ineq(aux509,0,-1)
weightedsumgeq([1,-1], [V60,V65], aux504)
weightedsumleq([1,-1], [V60,V65], aux504)
weightedsumgeq([1,-1], [V65,V60], aux505)
weightedsumleq([1,-1], [V65,V60], aux505)
product(aux504,aux505, aux506)
ineq(aux506,0,-1)
diseq(V56, V60)
diseq(V55, V60)
diseq(V50, V60)
weightedsumgeq([1,-1], [V39,V60], aux501)
weightedsumleq([1,-1], [V39,V60], aux501)
weightedsumgeq([1,-1], [V60,V39], aux502)
weightedsumleq([1,-1], [V60,V39], aux502)
product(aux501,aux502, aux503)
ineq(aux503,0,-1)
weightedsumgeq([1,-1], [V59,V99], aux498)
weightedsumleq([1,-1], [V59,V99], aux498)
weightedsumgeq([1,-1], [V99,V59], aux499)
weightedsumleq([1,-1], [V99,V59], aux499)
product(aux498,aux499, aux500)
ineq(aux500,0,-1)
diseq(V54, V59)
weightedsumgeq([1,-1], [V109,V59], aux495)
weightedsumleq([1,-1], [V109,V59], aux495)
weightedsumgeq([1,-1], [V59,V109], aux496)
weightedsumleq([1,-1], [V59,V109], aux496)
product(aux495,aux496, aux497)
ineq(aux497,0,-1)
diseq(V58, V63)
weightedsumgeq([1,-1], [V40,V58], aux492)
weightedsumleq([1,-1], [V40,V58], aux492)
weightedsumgeq([1,-1], [V58,V40], aux493)
weightedsumleq([1,-1], [V58,V40], aux493)
product(aux492,aux493, aux494)
ineq(aux494,0,-1)
weightedsumgeq([1,-1], [V102,V58], aux489)
weightedsumleq([1,-1], [V102,V58], aux489)
weightedsumgeq([1,-1], [V58,V102], aux490)
weightedsumleq([1,-1], [V58,V102], aux490)
product(aux489,aux490, aux491)
ineq(aux491,0,-1)
weightedsumgeq([1,-1], [V100,V58], aux486)
weightedsumleq([1,-1], [V100,V58], aux486)
weightedsumgeq([1,-1], [V58,V100], aux487)
weightedsumleq([1,-1], [V58,V100], aux487)
product(aux486,aux487, aux488)
ineq(aux488,0,-1)
weightedsumgeq([1,-1], [V1,V58], aux483)
weightedsumleq([1,-1], [V1,V58], aux483)
weightedsumgeq([1,-1], [V58,V1], aux484)
weightedsumleq([1,-1], [V58,V1], aux484)
product(aux483,aux484, aux485)
ineq(aux485,0,-1)
sumgeq([V57,V89], 2)
diseq(V57, V89)
sumgeq([V57,V83], 2)
diseq(V57, V83)
sumgeq([V57,V73], 2)
diseq(V57, V73)
sumgeq([V57,V66], 2)
diseq(V57, V66)
sumgeq([V53,V57], 2)
diseq(V53, V57)
sumgeq([V19,V57], 2)
diseq(V19, V57)
sumgeq([V18,V57], 2)
diseq(V18, V57)
sumgeq([V120,V57], 2)
diseq(V120, V57)
sumgeq([V112,V57], 2)
diseq(V112, V57)
sumgeq([V11,V57], 2)
diseq(V11, V57)
diseq(V39, V56)
diseq(V55, V56)
weightedsumgeq([1,-1], [V39,V55], aux480)
weightedsumleq([1,-1], [V39,V55], aux480)
weightedsumgeq([1,-1], [V55,V39], aux481)
weightedsumleq([1,-1], [V55,V39], aux481)
product(aux480,aux481, aux482)
ineq(aux482,0,-1)
diseq(V112, V53)
weightedsumgeq([1,-1], [V52,V90], aux477)
weightedsumleq([1,-1], [V52,V90], aux477)
weightedsumgeq([1,-1], [V90,V52], aux478)
weightedsumleq([1,-1], [V90,V52], aux478)
product(aux477,aux478, aux479)
ineq(aux479,0,-1)
weightedsumgeq([1,-1], [V52,V75], aux474)
weightedsumleq([1,-1], [V52,V75], aux474)
weightedsumgeq([1,-1], [V75,V52], aux475)
weightedsumleq([1,-1], [V75,V52], aux475)
product(aux474,aux475, aux476)
ineq(aux476,0,-1)
diseq(V51, V52)
weightedsumgeq([1,-1], [V48,V52], aux471)
weightedsumleq([1,-1], [V48,V52], aux471)
weightedsumgeq([1,-1], [V52,V48], aux472)
weightedsumleq([1,-1], [V52,V48], aux472)
product(aux471,aux472, aux473)
ineq(aux473,0,-1)
diseq(V4, V52)
diseq(V34, V52)
diseq(V25, V52)
weightedsumgeq([1,-1], [V13,V52], aux468)
weightedsumleq([1,-1], [V13,V52], aux468)
weightedsumgeq([1,-1], [V52,V13], aux469)
weightedsumleq([1,-1], [V52,V13], aux469)
product(aux468,aux469, aux470)
ineq(aux470,0,-1)
weightedsumgeq([1,-1], [V51,V75], aux465)
weightedsumleq([1,-1], [V51,V75], aux465)
weightedsumgeq([1,-1], [V75,V51], aux466)
weightedsumleq([1,-1], [V75,V51], aux466)
product(aux465,aux466, aux467)
ineq(aux467,0,-1)
weightedsumgeq([1,-1], [V4,V51], aux462)
weightedsumleq([1,-1], [V4,V51], aux462)
weightedsumgeq([1,-1], [V51,V4], aux463)
weightedsumleq([1,-1], [V51,V4], aux463)
product(aux462,aux463, aux464)
ineq(aux464,0,-1)
weightedsumgeq([1,-1], [V34,V51], aux459)
weightedsumleq([1,-1], [V34,V51], aux459)
weightedsumgeq([1,-1], [V51,V34], aux460)
weightedsumleq([1,-1], [V51,V34], aux460)
product(aux459,aux460, aux461)
ineq(aux461,0,-1)
weightedsumgeq([1,-1], [V50,V97], aux456)
weightedsumleq([1,-1], [V50,V97], aux456)
weightedsumgeq([1,-1], [V97,V50], aux457)
weightedsumleq([1,-1], [V97,V50], aux457)
product(aux456,aux457, aux458)
ineq(aux458,0,-1)
diseq(V50, V84)
diseq(V50, V81)
weightedsumgeq([1,-1], [V50,V79], aux453)
weightedsumleq([1,-1], [V50,V79], aux453)
weightedsumgeq([1,-1], [V79,V50], aux454)
weightedsumleq([1,-1], [V79,V50], aux454)
product(aux453,aux454, aux455)
ineq(aux455,0,-1)
diseq(V50, V65)
diseq(V50, V56)
diseq(V50, V55)
diseq(V39, V50)
diseq(V5, V99)
weightedsumgeq([1,-1], [V5,V78], aux450)
weightedsumleq([1,-1], [V5,V78], aux450)
weightedsumgeq([1,-1], [V78,V5], aux451)
weightedsumleq([1,-1], [V78,V5], aux451)
product(aux450,aux451, aux452)
ineq(aux452,0,-1)
weightedsumgeq([1,-1], [V5,V59], aux447)
weightedsumleq([1,-1], [V5,V59], aux447)
weightedsumgeq([1,-1], [V59,V5], aux448)
weightedsumleq([1,-1], [V59,V5], aux448)
product(aux447,aux448, aux449)
ineq(aux449,0,-1)
diseq(V5, V54)
weightedsumgeq([1,-1], [V2,V5], aux444)
weightedsumleq([1,-1], [V2,V5], aux444)
weightedsumgeq([1,-1], [V5,V2], aux445)
weightedsumleq([1,-1], [V5,V2], aux445)
product(aux444,aux445, aux446)
ineq(aux446,0,-1)
diseq(V109, V5)
weightedsumgeq([1,-1], [V104,V5], aux441)
weightedsumleq([1,-1], [V104,V5], aux441)
weightedsumgeq([1,-1], [V5,V104], aux442)
weightedsumleq([1,-1], [V5,V104], aux442)
product(aux441,aux442, aux443)
ineq(aux443,0,-1)
diseq(V0, V5)
diseq(V48, V90)
diseq(V48, V75)
weightedsumgeq([1,-1], [V48,V51], aux438)
weightedsumleq([1,-1], [V48,V51], aux438)
weightedsumgeq([1,-1], [V51,V48], aux439)
weightedsumleq([1,-1], [V51,V48], aux439)
product(aux438,aux439, aux440)
ineq(aux440,0,-1)
diseq(V4, V48)
diseq(V34, V48)
weightedsumgeq([1,-1], [V25,V48], aux435)
weightedsumleq([1,-1], [V25,V48], aux435)
weightedsumgeq([1,-1], [V48,V25], aux436)
weightedsumleq([1,-1], [V48,V25], aux436)
product(aux435,aux436, aux437)
ineq(aux437,0,-1)
weightedsumgeq([1,-1], [V46,V8], aux432)
weightedsumleq([1,-1], [V46,V8], aux432)
weightedsumgeq([1,-1], [V8,V46], aux433)
weightedsumleq([1,-1], [V8,V46], aux433)
product(aux432,aux433, aux434)
ineq(aux434,0,-1)
diseq(V46, V62)
weightedsumgeq([1,-1], [V46,V61], aux429)
weightedsumleq([1,-1], [V46,V61], aux429)
weightedsumgeq([1,-1], [V61,V46], aux430)
weightedsumleq([1,-1], [V61,V46], aux430)
product(aux429,aux430, aux431)
ineq(aux431,0,-1)
weightedsumgeq([1,-1], [V46,V47], aux426)
weightedsumleq([1,-1], [V46,V47], aux426)
weightedsumgeq([1,-1], [V47,V46], aux427)
weightedsumleq([1,-1], [V47,V46], aux427)
product(aux426,aux427, aux428)
ineq(aux428,0,-1)
sumgeq([V44,V97], 2)
diseq(V44, V97)
sumgeq([V44,V84], 2)
diseq(V44, V84)
sumgeq([V44,V81], 2)
diseq(V44, V81)
sumgeq([V44,V79], 2)
diseq(V44, V79)
sumgeq([V44,V65], 2)
diseq(V44, V65)
sumgeq([V44,V60], 2)
diseq(V44, V60)
sumgeq([V44,V56], 2)
diseq(V44, V56)
sumgeq([V44,V55], 2)
diseq(V44, V55)
sumgeq([V44,V50], 2)
diseq(V44, V50)
sumgeq([V39,V44], 2)
diseq(V39, V44)
diseq(V43, V7)
weightedsumgeq([1,-1], [V43,V64], aux423)
weightedsumleq([1,-1], [V43,V64], aux423)
weightedsumgeq([1,-1], [V64,V43], aux424)
weightedsumleq([1,-1], [V64,V43], aux424)
product(aux423,aux424, aux425)
ineq(aux425,0,-1)
weightedsumgeq([1,-1], [V43,V63], aux420)
weightedsumleq([1,-1], [V43,V63], aux420)
weightedsumgeq([1,-1], [V63,V43], aux421)
weightedsumleq([1,-1], [V63,V43], aux421)
product(aux420,aux421, aux422)
ineq(aux422,0,-1)
weightedsumgeq([1,-1], [V43,V58], aux417)
weightedsumleq([1,-1], [V43,V58], aux417)
weightedsumgeq([1,-1], [V58,V43], aux418)
weightedsumleq([1,-1], [V58,V43], aux418)
product(aux417,aux418, aux419)
ineq(aux419,0,-1)
diseq(V40, V43)
weightedsumgeq([1,-1], [V14,V43], aux414)
weightedsumleq([1,-1], [V14,V43], aux414)
weightedsumgeq([1,-1], [V43,V14], aux415)
weightedsumleq([1,-1], [V43,V14], aux415)
product(aux414,aux415, aux416)
ineq(aux416,0,-1)
weightedsumgeq([1,-1], [V102,V43], aux411)
weightedsumleq([1,-1], [V102,V43], aux411)
weightedsumgeq([1,-1], [V43,V102], aux412)
weightedsumleq([1,-1], [V43,V102], aux412)
product(aux411,aux412, aux413)
ineq(aux413,0,-1)
weightedsumgeq([1,-1], [V100,V43], aux408)
weightedsumleq([1,-1], [V100,V43], aux408)
weightedsumgeq([1,-1], [V43,V100], aux409)
weightedsumleq([1,-1], [V43,V100], aux409)
product(aux408,aux409, aux410)
ineq(aux410,0,-1)
weightedsumgeq([1,-1], [V1,V43], aux405)
weightedsumleq([1,-1], [V1,V43], aux405)
weightedsumgeq([1,-1], [V43,V1], aux406)
weightedsumleq([1,-1], [V43,V1], aux406)
product(aux405,aux406, aux407)
ineq(aux407,0,-1)
weightedsumgeq([1,-1], [V42,V96], aux402)
weightedsumleq([1,-1], [V42,V96], aux402)
weightedsumgeq([1,-1], [V96,V42], aux403)
weightedsumleq([1,-1], [V96,V42], aux403)
product(aux402,aux403, aux404)
ineq(aux404,0,-1)
diseq(V42, V93)
weightedsumgeq([1,-1], [V42,V49], aux399)
weightedsumleq([1,-1], [V42,V49], aux399)
weightedsumgeq([1,-1], [V49,V42], aux400)
weightedsumleq([1,-1], [V49,V42], aux400)
product(aux399,aux400, aux401)
ineq(aux401,0,-1)
weightedsumgeq([1,-1], [V41,V94], aux396)
weightedsumleq([1,-1], [V41,V94], aux396)
weightedsumgeq([1,-1], [V94,V41], aux397)
weightedsumleq([1,-1], [V94,V41], aux397)
product(aux396,aux397, aux398)
ineq(aux398,0,-1)
diseq(V41, V92)
diseq(V41, V71)
diseq(V41, V45)
diseq(V32, V41)
weightedsumgeq([1,-1], [V27,V41], aux393)
weightedsumleq([1,-1], [V27,V41], aux393)
weightedsumgeq([1,-1], [V41,V27], aux394)
weightedsumleq([1,-1], [V41,V27], aux394)
product(aux393,aux394, aux395)
ineq(aux395,0,-1)
diseq(V17, V41)
weightedsumgeq([1,-1], [V4,V75], aux390)
weightedsumleq([1,-1], [V4,V75], aux390)
weightedsumgeq([1,-1], [V75,V4], aux391)
weightedsumleq([1,-1], [V75,V4], aux391)
product(aux390,aux391, aux392)
ineq(aux392,0,-1)
diseq(V34, V4)
weightedsumgeq([1,-1], [V31,V38], aux387)
weightedsumleq([1,-1], [V31,V38], aux387)
weightedsumgeq([1,-1], [V38,V31], aux388)
weightedsumleq([1,-1], [V38,V31], aux388)
product(aux387,aux388, aux389)
ineq(aux389,0,-1)
weightedsumgeq([1,-1], [V37,V9], aux384)
weightedsumleq([1,-1], [V37,V9], aux384)
weightedsumgeq([1,-1], [V9,V37], aux385)
weightedsumleq([1,-1], [V9,V37], aux385)
product(aux384,aux385, aux386)
ineq(aux386,0,-1)
diseq(V37, V77)
diseq(V37, V74)
weightedsumgeq([1,-1], [V37,V38], aux381)
weightedsumleq([1,-1], [V37,V38], aux381)
weightedsumgeq([1,-1], [V38,V37], aux382)
weightedsumleq([1,-1], [V38,V37], aux382)
product(aux381,aux382, aux383)
ineq(aux383,0,-1)
weightedsumgeq([1,-1], [V31,V37], aux378)
weightedsumleq([1,-1], [V31,V37], aux378)
weightedsumgeq([1,-1], [V37,V31], aux379)
weightedsumleq([1,-1], [V37,V31], aux379)
product(aux378,aux379, aux380)
ineq(aux380,0,-1)
diseq(V22, V37)
weightedsumgeq([1,-1], [V118,V37], aux375)
weightedsumleq([1,-1], [V118,V37], aux375)
weightedsumgeq([1,-1], [V37,V118], aux376)
weightedsumleq([1,-1], [V37,V118], aux376)
product(aux375,aux376, aux377)
ineq(aux377,0,-1)
weightedsumgeq([1,-1], [V108,V37], aux372)
weightedsumleq([1,-1], [V108,V37], aux372)
weightedsumgeq([1,-1], [V37,V108], aux373)
weightedsumleq([1,-1], [V37,V108], aux373)
product(aux372,aux373, aux374)
ineq(aux374,0,-1)
weightedsumgeq([1,-1], [V105,V37], aux369)
weightedsumleq([1,-1], [V105,V37], aux369)
weightedsumgeq([1,-1], [V37,V105], aux370)
weightedsumleq([1,-1], [V37,V105], aux370)
product(aux369,aux370, aux371)
ineq(aux371,0,-1)
weightedsumgeq([1,-1], [V36,V94], aux366)
weightedsumleq([1,-1], [V36,V94], aux366)
weightedsumgeq([1,-1], [V94,V36], aux367)
weightedsumleq([1,-1], [V94,V36], aux367)
product(aux366,aux367, aux368)
ineq(aux368,0,-1)
weightedsumgeq([1,-1], [V36,V92], aux363)
weightedsumleq([1,-1], [V36,V92], aux363)
weightedsumgeq([1,-1], [V92,V36], aux364)
weightedsumleq([1,-1], [V92,V36], aux364)
product(aux363,aux364, aux365)
ineq(aux365,0,-1)
weightedsumgeq([1,-1], [V36,V86], aux360)
weightedsumleq([1,-1], [V36,V86], aux360)
weightedsumgeq([1,-1], [V86,V36], aux361)
weightedsumleq([1,-1], [V86,V36], aux361)
product(aux360,aux361, aux362)
ineq(aux362,0,-1)
diseq(V36, V71)
diseq(V36, V45)
weightedsumgeq([1,-1], [V36,V41], aux357)
weightedsumleq([1,-1], [V36,V41], aux357)
weightedsumgeq([1,-1], [V41,V36], aux358)
weightedsumleq([1,-1], [V41,V36], aux358)
product(aux357,aux358, aux359)
ineq(aux359,0,-1)
weightedsumgeq([1,-1], [V32,V36], aux354)
weightedsumleq([1,-1], [V32,V36], aux354)
weightedsumgeq([1,-1], [V36,V32], aux355)
weightedsumleq([1,-1], [V36,V32], aux355)
product(aux354,aux355, aux356)
ineq(aux356,0,-1)
weightedsumgeq([1,-1], [V27,V36], aux351)
weightedsumleq([1,-1], [V27,V36], aux351)
weightedsumgeq([1,-1], [V36,V27], aux352)
weightedsumleq([1,-1], [V36,V27], aux352)
product(aux351,aux352, aux353)
ineq(aux353,0,-1)
weightedsumgeq([1,-1], [V17,V36], aux348)
weightedsumleq([1,-1], [V17,V36], aux348)
weightedsumgeq([1,-1], [V36,V17], aux349)
weightedsumleq([1,-1], [V36,V17], aux349)
product(aux348,aux349, aux350)
ineq(aux350,0,-1)
diseq(V35, V91)
diseq(V35, V85)
diseq(V35, V6)
diseq(V16, V35)
weightedsumgeq([1,-1], [V116,V35], aux345)
weightedsumleq([1,-1], [V116,V35], aux345)
weightedsumgeq([1,-1], [V35,V116], aux346)
weightedsumleq([1,-1], [V35,V116], aux346)
product(aux345,aux346, aux347)
ineq(aux347,0,-1)
weightedsumgeq([1,-1], [V110,V35], aux342)
weightedsumleq([1,-1], [V110,V35], aux342)
weightedsumgeq([1,-1], [V35,V110], aux343)
weightedsumleq([1,-1], [V35,V110], aux343)
product(aux342,aux343, aux344)
ineq(aux344,0,-1)
diseq(V103, V35)
weightedsumgeq([1,-1], [V10,V35], aux339)
weightedsumleq([1,-1], [V10,V35], aux339)
weightedsumgeq([1,-1], [V35,V10], aux340)
weightedsumleq([1,-1], [V35,V10], aux340)
product(aux339,aux340, aux341)
ineq(aux341,0,-1)
diseq(V34, V75)
weightedsumgeq([1,-1], [V33,V8], aux336)
weightedsumleq([1,-1], [V33,V8], aux336)
weightedsumgeq([1,-1], [V8,V33], aux337)
weightedsumleq([1,-1], [V8,V33], aux337)
product(aux336,aux337, aux338)
ineq(aux338,0,-1)
weightedsumgeq([1,-1], [V33,V67], aux333)
weightedsumleq([1,-1], [V33,V67], aux333)
weightedsumgeq([1,-1], [V67,V33], aux334)
weightedsumleq([1,-1], [V67,V33], aux334)
product(aux333,aux334, aux335)
ineq(aux335,0,-1)
weightedsumgeq([1,-1], [V33,V62], aux330)
weightedsumleq([1,-1], [V33,V62], aux330)
weightedsumgeq([1,-1], [V62,V33], aux331)
weightedsumleq([1,-1], [V62,V33], aux331)
product(aux330,aux331, aux332)
ineq(aux332,0,-1)
weightedsumgeq([1,-1], [V33,V61], aux327)
weightedsumleq([1,-1], [V33,V61], aux327)
weightedsumgeq([1,-1], [V61,V33], aux328)
weightedsumleq([1,-1], [V61,V33], aux328)
product(aux327,aux328, aux329)
ineq(aux329,0,-1)
weightedsumgeq([1,-1], [V33,V47], aux324)
weightedsumleq([1,-1], [V33,V47], aux324)
weightedsumgeq([1,-1], [V47,V33], aux325)
weightedsumleq([1,-1], [V47,V33], aux325)
product(aux324,aux325, aux326)
ineq(aux326,0,-1)
diseq(V33, V46)
weightedsumgeq([1,-1], [V3,V33], aux321)
weightedsumleq([1,-1], [V3,V33], aux321)
weightedsumgeq([1,-1], [V33,V3], aux322)
weightedsumleq([1,-1], [V33,V3], aux322)
product(aux321,aux322, aux323)
ineq(aux323,0,-1)
weightedsumgeq([1,-1], [V15,V33], aux318)
weightedsumleq([1,-1], [V15,V33], aux318)
weightedsumgeq([1,-1], [V33,V15], aux319)
weightedsumleq([1,-1], [V33,V15], aux319)
product(aux318,aux319, aux320)
ineq(aux320,0,-1)
diseq(V114, V33)
weightedsumgeq([1,-1], [V32,V94], aux315)
weightedsumleq([1,-1], [V32,V94], aux315)
weightedsumgeq([1,-1], [V94,V32], aux316)
weightedsumleq([1,-1], [V94,V32], aux316)
product(aux315,aux316, aux317)
ineq(aux317,0,-1)
diseq(V32, V92)
diseq(V32, V45)
weightedsumgeq([1,-1], [V17,V32], aux312)
weightedsumleq([1,-1], [V17,V32], aux312)
weightedsumgeq([1,-1], [V32,V17], aux313)
weightedsumleq([1,-1], [V32,V17], aux313)
product(aux312,aux313, aux314)
ineq(aux314,0,-1)
sumgeq([V30,V96], 2)
diseq(V30, V96)
sumgeq([V30,V93], 2)
diseq(V30, V93)
sumgeq([V30,V82], 2)
diseq(V30, V82)
sumgeq([V30,V76], 2)
diseq(V30, V76)
sumgeq([V30,V68], 2)
diseq(V30, V68)
sumgeq([V30,V49], 2)
diseq(V30, V49)
sumgeq([V30,V42], 2)
diseq(V30, V42)
sumgeq([V29,V30], 2)
diseq(V29, V30)
sumgeq([V119,V30], 2)
diseq(V119, V30)
sumgeq([V111,V30], 2)
diseq(V111, V30)
weightedsumgeq([1,-1], [V3,V8], aux309)
weightedsumleq([1,-1], [V3,V8], aux309)
weightedsumgeq([1,-1], [V8,V3], aux310)
weightedsumleq([1,-1], [V8,V3], aux310)
product(aux309,aux310, aux311)
ineq(aux311,0,-1)
diseq(V3, V67)
weightedsumgeq([1,-1], [V3,V62], aux306)
weightedsumleq([1,-1], [V3,V62], aux306)
weightedsumgeq([1,-1], [V62,V3], aux307)
weightedsumleq([1,-1], [V62,V3], aux307)
product(aux306,aux307, aux308)
ineq(aux308,0,-1)
diseq(V3, V61)
weightedsumgeq([1,-1], [V3,V47], aux303)
weightedsumleq([1,-1], [V3,V47], aux303)
weightedsumgeq([1,-1], [V47,V3], aux304)
weightedsumleq([1,-1], [V47,V3], aux304)
product(aux303,aux304, aux305)
ineq(aux305,0,-1)
diseq(V3, V46)
diseq(V15, V3)
diseq(V29, V96)
weightedsumgeq([1,-1], [V29,V93], aux300)
weightedsumleq([1,-1], [V29,V93], aux300)
weightedsumgeq([1,-1], [V93,V29], aux301)
weightedsumleq([1,-1], [V93,V29], aux301)
product(aux300,aux301, aux302)
ineq(aux302,0,-1)
weightedsumgeq([1,-1], [V29,V49], aux297)
weightedsumleq([1,-1], [V29,V49], aux297)
weightedsumgeq([1,-1], [V49,V29], aux298)
weightedsumleq([1,-1], [V49,V29], aux298)
product(aux297,aux298, aux299)
ineq(aux299,0,-1)
weightedsumgeq([1,-1], [V29,V42], aux294)
weightedsumleq([1,-1], [V29,V42], aux294)
weightedsumgeq([1,-1], [V42,V29], aux295)
weightedsumleq([1,-1], [V42,V29], aux295)
product(aux294,aux295, aux296)
ineq(aux296,0,-1)
diseq(V119, V29)
sumgeq([V28,V95], 2)
diseq(V28, V95)
sumgeq([V28,V87], 2)
diseq(V28, V87)
sumgeq([V28,V80], 2)
diseq(V28, V80)
sumgeq([V26,V28], 2)
diseq(V26, V28)
sumgeq([V24,V28], 2)
diseq(V24, V28)
sumgeq([V21,V28], 2)
diseq(V21, V28)
sumgeq([V20,V28], 2)
diseq(V20, V28)
sumgeq([V117,V28], 2)
diseq(V117, V28)
sumgeq([V107,V28], 2)
diseq(V107, V28)
sumgeq([V101,V28], 2)
diseq(V101, V28)
diseq(V27, V94)
diseq(V27, V92)
diseq(V27, V45)
weightedsumgeq([1,-1], [V27,V32], aux291)
weightedsumleq([1,-1], [V27,V32], aux291)
weightedsumgeq([1,-1], [V32,V27], aux292)
weightedsumleq([1,-1], [V32,V27], aux292)
product(aux291,aux292, aux293)
ineq(aux293,0,-1)
diseq(V17, V27)
weightedsumgeq([1,-1], [V26,V95], aux288)
weightedsumleq([1,-1], [V26,V95], aux288)
weightedsumgeq([1,-1], [V95,V26], aux289)
weightedsumleq([1,-1], [V95,V26], aux289)
product(aux288,aux289, aux290)
ineq(aux290,0,-1)
weightedsumgeq([1,-1], [V26,V87], aux285)
weightedsumleq([1,-1], [V26,V87], aux285)
weightedsumgeq([1,-1], [V87,V26], aux286)
weightedsumleq([1,-1], [V87,V26], aux286)
product(aux285,aux286, aux287)
ineq(aux287,0,-1)
diseq(V24, V26)
weightedsumgeq([1,-1], [V21,V26], aux282)
weightedsumleq([1,-1], [V21,V26], aux282)
weightedsumgeq([1,-1], [V26,V21], aux283)
weightedsumleq([1,-1], [V26,V21], aux283)
product(aux282,aux283, aux284)
ineq(aux284,0,-1)
diseq(V20, V26)
diseq(V117, V26)
weightedsumgeq([1,-1], [V107,V26], aux279)
weightedsumleq([1,-1], [V107,V26], aux279)
weightedsumgeq([1,-1], [V26,V107], aux280)
weightedsumleq([1,-1], [V26,V107], aux280)
product(aux279,aux280, aux281)
ineq(aux281,0,-1)
weightedsumgeq([1,-1], [V101,V26], aux276)
weightedsumleq([1,-1], [V101,V26], aux276)
weightedsumgeq([1,-1], [V26,V101], aux277)
weightedsumleq([1,-1], [V26,V101], aux277)
product(aux276,aux277, aux278)
ineq(aux278,0,-1)
diseq(V25, V90)
diseq(V25, V75)
weightedsumgeq([1,-1], [V25,V51], aux273)
weightedsumleq([1,-1], [V25,V51], aux273)
weightedsumgeq([1,-1], [V51,V25], aux274)
weightedsumleq([1,-1], [V51,V25], aux274)
product(aux273,aux274, aux275)
ineq(aux275,0,-1)
weightedsumgeq([1,-1], [V25,V4], aux270)
weightedsumleq([1,-1], [V25,V4], aux270)
weightedsumgeq([1,-1], [V4,V25], aux271)
weightedsumleq([1,-1], [V4,V25], aux271)
product(aux270,aux271, aux272)
ineq(aux272,0,-1)
weightedsumgeq([1,-1], [V25,V34], aux267)
weightedsumleq([1,-1], [V25,V34], aux267)
weightedsumgeq([1,-1], [V34,V25], aux268)
weightedsumleq([1,-1], [V34,V25], aux268)
product(aux267,aux268, aux269)
ineq(aux269,0,-1)
weightedsumgeq([1,-1], [V21,V24], aux264)
weightedsumleq([1,-1], [V21,V24], aux264)
weightedsumgeq([1,-1], [V24,V21], aux265)
weightedsumleq([1,-1], [V24,V21], aux265)
product(aux264,aux265, aux266)
ineq(aux266,0,-1)
diseq(V117, V24)
sumgeq([V23,V99], 2)
diseq(V23, V99)
sumgeq([V23,V78], 2)
diseq(V23, V78)
sumgeq([V23,V59], 2)
diseq(V23, V59)
sumgeq([V23,V54], 2)
diseq(V23, V54)
sumgeq([V23,V5], 2)
diseq(V23, V5)
sumgeq([V2,V23], 2)
diseq(V2, V23)
sumgeq([V12,V23], 2)
diseq(V12, V23)
sumgeq([V109,V23], 2)
diseq(V109, V23)
sumgeq([V104,V23], 2)
diseq(V104, V23)
sumgeq([V0,V23], 2)
diseq(V0, V23)
weightedsumgeq([1,-1], [V22,V38], aux261)
weightedsumleq([1,-1], [V22,V38], aux261)
weightedsumgeq([1,-1], [V38,V22], aux262)
weightedsumleq([1,-1], [V38,V22], aux262)
product(aux261,aux262, aux263)
ineq(aux263,0,-1)
weightedsumgeq([1,-1], [V22,V31], aux258)
weightedsumleq([1,-1], [V22,V31], aux258)
weightedsumgeq([1,-1], [V31,V22], aux259)
weightedsumleq([1,-1], [V31,V22], aux259)
product(aux258,aux259, aux260)
ineq(aux260,0,-1)
weightedsumgeq([1,-1], [V118,V22], aux255)
weightedsumleq([1,-1], [V118,V22], aux255)
weightedsumgeq([1,-1], [V22,V118], aux256)
weightedsumleq([1,-1], [V22,V118], aux256)
product(aux255,aux256, aux257)
ineq(aux257,0,-1)
diseq(V117, V21)
weightedsumgeq([1,-1], [V20,V95], aux252)
weightedsumleq([1,-1], [V20,V95], aux252)
weightedsumgeq([1,-1], [V95,V20], aux253)
weightedsumleq([1,-1], [V95,V20], aux253)
product(aux252,aux253, aux254)
ineq(aux254,0,-1)
weightedsumgeq([1,-1], [V20,V87], aux249)
weightedsumleq([1,-1], [V20,V87], aux249)
weightedsumgeq([1,-1], [V87,V20], aux250)
weightedsumleq([1,-1], [V87,V20], aux250)
product(aux249,aux250, aux251)
ineq(aux251,0,-1)
weightedsumgeq([1,-1], [V20,V24], aux246)
weightedsumleq([1,-1], [V20,V24], aux246)
weightedsumgeq([1,-1], [V24,V20], aux247)
weightedsumleq([1,-1], [V24,V20], aux247)
product(aux246,aux247, aux248)
ineq(aux248,0,-1)
weightedsumgeq([1,-1], [V20,V21], aux243)
weightedsumleq([1,-1], [V20,V21], aux243)
weightedsumgeq([1,-1], [V21,V20], aux244)
weightedsumleq([1,-1], [V21,V20], aux244)
product(aux243,aux244, aux245)
ineq(aux245,0,-1)
weightedsumgeq([1,-1], [V117,V20], aux240)
weightedsumleq([1,-1], [V117,V20], aux240)
weightedsumgeq([1,-1], [V20,V117], aux241)
weightedsumleq([1,-1], [V20,V117], aux241)
product(aux240,aux241, aux242)
ineq(aux242,0,-1)
weightedsumgeq([1,-1], [V101,V20], aux237)
weightedsumleq([1,-1], [V101,V20], aux237)
weightedsumgeq([1,-1], [V20,V101], aux238)
weightedsumleq([1,-1], [V20,V101], aux238)
product(aux237,aux238, aux239)
ineq(aux239,0,-1)
diseq(V2, V99)
diseq(V2, V78)
weightedsumgeq([1,-1], [V2,V59], aux234)
weightedsumleq([1,-1], [V2,V59], aux234)
weightedsumgeq([1,-1], [V59,V2], aux235)
weightedsumleq([1,-1], [V59,V2], aux235)
product(aux234,aux235, aux236)
ineq(aux236,0,-1)
diseq(V2, V54)
weightedsumgeq([1,-1], [V109,V2], aux231)
weightedsumleq([1,-1], [V109,V2], aux231)
weightedsumgeq([1,-1], [V2,V109], aux232)
weightedsumleq([1,-1], [V2,V109], aux232)
product(aux231,aux232, aux233)
ineq(aux233,0,-1)
weightedsumgeq([1,-1], [V104,V2], aux228)
weightedsumleq([1,-1], [V104,V2], aux228)
weightedsumgeq([1,-1], [V2,V104], aux229)
weightedsumleq([1,-1], [V2,V104], aux229)
product(aux228,aux229, aux230)
ineq(aux230,0,-1)
weightedsumgeq([1,-1], [V0,V2], aux225)
weightedsumleq([1,-1], [V0,V2], aux225)
weightedsumgeq([1,-1], [V2,V0], aux226)
weightedsumleq([1,-1], [V2,V0], aux226)
product(aux225,aux226, aux227)
ineq(aux227,0,-1)
diseq(V19, V89)
diseq(V19, V53)
diseq(V18, V19)
diseq(V112, V19)
diseq(V18, V53)
diseq(V112, V18)
weightedsumgeq([1,-1], [V17,V94], aux222)
weightedsumleq([1,-1], [V17,V94], aux222)
weightedsumgeq([1,-1], [V94,V17], aux223)
weightedsumleq([1,-1], [V94,V17], aux223)
product(aux222,aux223, aux224)
ineq(aux224,0,-1)
weightedsumgeq([1,-1], [V17,V45], aux219)
weightedsumleq([1,-1], [V17,V45], aux219)
weightedsumgeq([1,-1], [V45,V17], aux220)
weightedsumleq([1,-1], [V45,V17], aux220)
product(aux219,aux220, aux221)
ineq(aux221,0,-1)
diseq(V16, V91)
weightedsumgeq([1,-1], [V16,V85], aux216)
weightedsumleq([1,-1], [V16,V85], aux216)
weightedsumgeq([1,-1], [V85,V16], aux217)
weightedsumleq([1,-1], [V85,V16], aux217)
product(aux216,aux217, aux218)
ineq(aux218,0,-1)
weightedsumgeq([1,-1], [V16,V6], aux213)
weightedsumleq([1,-1], [V16,V6], aux213)
weightedsumgeq([1,-1], [V6,V16], aux214)
weightedsumleq([1,-1], [V6,V16], aux214)
product(aux213,aux214, aux215)
ineq(aux215,0,-1)
weightedsumgeq([1,-1], [V116,V16], aux210)
weightedsumleq([1,-1], [V116,V16], aux210)
weightedsumgeq([1,-1], [V16,V116], aux211)
weightedsumleq([1,-1], [V16,V116], aux211)
product(aux210,aux211, aux212)
ineq(aux212,0,-1)
weightedsumgeq([1,-1], [V103,V16], aux207)
weightedsumleq([1,-1], [V103,V16], aux207)
weightedsumgeq([1,-1], [V16,V103], aux208)
weightedsumleq([1,-1], [V16,V103], aux208)
product(aux207,aux208, aux209)
ineq(aux209,0,-1)
weightedsumgeq([1,-1], [V10,V16], aux204)
weightedsumleq([1,-1], [V10,V16], aux204)
weightedsumgeq([1,-1], [V16,V10], aux205)
weightedsumleq([1,-1], [V16,V10], aux205)
product(aux204,aux205, aux206)
ineq(aux206,0,-1)
weightedsumgeq([1,-1], [V15,V8], aux201)
weightedsumleq([1,-1], [V15,V8], aux201)
weightedsumgeq([1,-1], [V8,V15], aux202)
weightedsumleq([1,-1], [V8,V15], aux202)
product(aux201,aux202, aux203)
ineq(aux203,0,-1)
diseq(V15, V62)
diseq(V15, V61)
weightedsumgeq([1,-1], [V15,V47], aux198)
weightedsumleq([1,-1], [V15,V47], aux198)
weightedsumgeq([1,-1], [V47,V15], aux199)
weightedsumleq([1,-1], [V47,V15], aux199)
product(aux198,aux199, aux200)
ineq(aux200,0,-1)
diseq(V15, V46)
diseq(V14, V7)
weightedsumgeq([1,-1], [V14,V63], aux195)
weightedsumleq([1,-1], [V14,V63], aux195)
weightedsumgeq([1,-1], [V63,V14], aux196)
weightedsumleq([1,-1], [V63,V14], aux196)
product(aux195,aux196, aux197)
ineq(aux197,0,-1)
weightedsumgeq([1,-1], [V14,V58], aux192)
weightedsumleq([1,-1], [V14,V58], aux192)
weightedsumgeq([1,-1], [V58,V14], aux193)
weightedsumleq([1,-1], [V58,V14], aux193)
product(aux192,aux193, aux194)
ineq(aux194,0,-1)
diseq(V14, V40)
diseq(V102, V14)
diseq(V100, V14)
diseq(V1, V14)
diseq(V13, V90)
diseq(V13, V75)
weightedsumgeq([1,-1], [V13,V51], aux189)
weightedsumleq([1,-1], [V13,V51], aux189)
weightedsumgeq([1,-1], [V51,V13], aux190)
weightedsumleq([1,-1], [V51,V13], aux190)
product(aux189,aux190, aux191)
ineq(aux191,0,-1)
weightedsumgeq([1,-1], [V13,V48], aux186)
weightedsumleq([1,-1], [V13,V48], aux186)
weightedsumgeq([1,-1], [V48,V13], aux187)
weightedsumleq([1,-1], [V48,V13], aux187)
product(aux186,aux187, aux188)
ineq(aux188,0,-1)
diseq(V13, V4)
weightedsumgeq([1,-1], [V13,V34], aux183)
weightedsumleq([1,-1], [V13,V34], aux183)
weightedsumgeq([1,-1], [V34,V13], aux184)
weightedsumleq([1,-1], [V34,V13], aux184)
product(aux183,aux184, aux185)
ineq(aux185,0,-1)
weightedsumgeq([1,-1], [V13,V25], aux180)
weightedsumleq([1,-1], [V13,V25], aux180)
weightedsumgeq([1,-1], [V25,V13], aux181)
weightedsumleq([1,-1], [V25,V13], aux181)
product(aux180,aux181, aux182)
ineq(aux182,0,-1)
weightedsumgeq([1,-1], [V120,V89], aux177)
weightedsumleq([1,-1], [V120,V89], aux177)
weightedsumgeq([1,-1], [V89,V120], aux178)
weightedsumleq([1,-1], [V89,V120], aux178)
product(aux177,aux178, aux179)
ineq(aux179,0,-1)
weightedsumgeq([1,-1], [V120,V73], aux174)
weightedsumleq([1,-1], [V120,V73], aux174)
weightedsumgeq([1,-1], [V73,V120], aux175)
weightedsumleq([1,-1], [V73,V120], aux175)
product(aux174,aux175, aux176)
ineq(aux176,0,-1)
weightedsumgeq([1,-1], [V120,V66], aux171)
weightedsumleq([1,-1], [V120,V66], aux171)
weightedsumgeq([1,-1], [V66,V120], aux172)
weightedsumleq([1,-1], [V66,V120], aux172)
product(aux171,aux172, aux173)
ineq(aux173,0,-1)
diseq(V120, V53)
diseq(V120, V19)
weightedsumgeq([1,-1], [V120,V18], aux168)
weightedsumleq([1,-1], [V120,V18], aux168)
weightedsumgeq([1,-1], [V18,V120], aux169)
weightedsumleq([1,-1], [V18,V120], aux169)
product(aux168,aux169, aux170)
ineq(aux170,0,-1)
diseq(V112, V120)
diseq(V11, V120)
diseq(V12, V99)
weightedsumgeq([1,-1], [V12,V78], aux165)
weightedsumleq([1,-1], [V12,V78], aux165)
weightedsumgeq([1,-1], [V78,V12], aux166)
weightedsumleq([1,-1], [V78,V12], aux166)
product(aux165,aux166, aux167)
ineq(aux167,0,-1)
weightedsumgeq([1,-1], [V12,V59], aux162)
weightedsumleq([1,-1], [V12,V59], aux162)
weightedsumgeq([1,-1], [V59,V12], aux163)
weightedsumleq([1,-1], [V59,V12], aux163)
product(aux162,aux163, aux164)
ineq(aux164,0,-1)
weightedsumgeq([1,-1], [V12,V54], aux159)
weightedsumleq([1,-1], [V12,V54], aux159)
weightedsumgeq([1,-1], [V54,V12], aux160)
weightedsumleq([1,-1], [V54,V12], aux160)
product(aux159,aux160, aux161)
ineq(aux161,0,-1)
weightedsumgeq([1,-1], [V12,V5], aux156)
weightedsumleq([1,-1], [V12,V5], aux156)
weightedsumgeq([1,-1], [V5,V12], aux157)
weightedsumleq([1,-1], [V5,V12], aux157)
product(aux156,aux157, aux158)
ineq(aux158,0,-1)
diseq(V12, V2)
diseq(V109, V12)
diseq(V104, V12)
weightedsumgeq([1,-1], [V0,V12], aux153)
weightedsumleq([1,-1], [V0,V12], aux153)
weightedsumgeq([1,-1], [V12,V0], aux154)
weightedsumleq([1,-1], [V12,V0], aux154)
product(aux153,aux154, aux155)
ineq(aux155,0,-1)
weightedsumgeq([1,-1], [V119,V96], aux150)
weightedsumleq([1,-1], [V119,V96], aux150)
weightedsumgeq([1,-1], [V96,V119], aux151)
weightedsumleq([1,-1], [V96,V119], aux151)
product(aux150,aux151, aux152)
ineq(aux152,0,-1)
diseq(V119, V93)
diseq(V119, V49)
weightedsumgeq([1,-1], [V119,V42], aux147)
weightedsumleq([1,-1], [V119,V42], aux147)
weightedsumgeq([1,-1], [V42,V119], aux148)
weightedsumleq([1,-1], [V42,V119], aux148)
product(aux147,aux148, aux149)
ineq(aux149,0,-1)
diseq(V118, V38)
diseq(V118, V31)
weightedsumgeq([1,-1], [V116,V91], aux144)
weightedsumleq([1,-1], [V116,V91], aux144)
weightedsumgeq([1,-1], [V91,V116], aux145)
weightedsumleq([1,-1], [V91,V116], aux145)
product(aux144,aux145, aux146)
ineq(aux146,0,-1)
weightedsumgeq([1,-1], [V116,V85], aux141)
weightedsumleq([1,-1], [V116,V85], aux141)
weightedsumgeq([1,-1], [V85,V116], aux142)
weightedsumleq([1,-1], [V85,V116], aux142)
product(aux141,aux142, aux143)
ineq(aux143,0,-1)
weightedsumgeq([1,-1], [V116,V6], aux138)
weightedsumleq([1,-1], [V116,V6], aux138)
weightedsumgeq([1,-1], [V6,V116], aux139)
weightedsumleq([1,-1], [V6,V116], aux139)
product(aux138,aux139, aux140)
ineq(aux140,0,-1)
weightedsumgeq([1,-1], [V103,V116], aux135)
weightedsumleq([1,-1], [V103,V116], aux135)
weightedsumgeq([1,-1], [V116,V103], aux136)
weightedsumleq([1,-1], [V116,V103], aux136)
product(aux135,aux136, aux137)
ineq(aux137,0,-1)
sumgeq([V115,V9], 2)
diseq(V115, V9)
sumgeq([V115,V77], 2)
diseq(V115, V77)
sumgeq([V115,V74], 2)
diseq(V115, V74)
sumgeq([V115,V38], 2)
diseq(V115, V38)
sumgeq([V115,V37], 2)
diseq(V115, V37)
sumgeq([V115,V31], 2)
diseq(V115, V31)
sumgeq([V115,V22], 2)
diseq(V115, V22)
sumgeq([V115,V118], 2)
diseq(V115, V118)
sumgeq([V108,V115], 2)
diseq(V108, V115)
sumgeq([V105,V115], 2)
diseq(V105, V115)
weightedsumgeq([1,-1], [V114,V8], aux132)
weightedsumleq([1,-1], [V114,V8], aux132)
weightedsumgeq([1,-1], [V8,V114], aux133)
weightedsumleq([1,-1], [V8,V114], aux133)
product(aux132,aux133, aux134)
ineq(aux134,0,-1)
diseq(V114, V67)
diseq(V114, V62)
weightedsumgeq([1,-1], [V114,V61], aux129)
weightedsumleq([1,-1], [V114,V61], aux129)
weightedsumgeq([1,-1], [V61,V114], aux130)
weightedsumleq([1,-1], [V61,V114], aux130)
product(aux129,aux130, aux131)
ineq(aux131,0,-1)
weightedsumgeq([1,-1], [V114,V47], aux126)
weightedsumleq([1,-1], [V114,V47], aux126)
weightedsumgeq([1,-1], [V47,V114], aux127)
weightedsumleq([1,-1], [V47,V114], aux127)
product(aux126,aux127, aux128)
ineq(aux128,0,-1)
weightedsumgeq([1,-1], [V114,V46], aux123)
weightedsumleq([1,-1], [V114,V46], aux123)
weightedsumgeq([1,-1], [V46,V114], aux124)
weightedsumleq([1,-1], [V46,V114], aux124)
product(aux123,aux124, aux125)
ineq(aux125,0,-1)
diseq(V114, V3)
diseq(V114, V15)
sumgeq([V113,V91], 2)
diseq(V113, V91)
sumgeq([V113,V85], 2)
diseq(V113, V85)
sumgeq([V113,V6], 2)
diseq(V113, V6)
sumgeq([V113,V35], 2)
diseq(V113, V35)
sumgeq([V113,V16], 2)
diseq(V113, V16)
sumgeq([V113,V116], 2)
diseq(V113, V116)
sumgeq([V110,V113], 2)
diseq(V110, V113)
sumgeq([V106,V113], 2)
diseq(V106, V113)
sumgeq([V103,V113], 2)
diseq(V103, V113)
sumgeq([V10,V113], 2)
diseq(V10, V113)
weightedsumgeq([1,-1], [V111,V96], aux120)
weightedsumleq([1,-1], [V111,V96], aux120)
weightedsumgeq([1,-1], [V96,V111], aux121)
weightedsumleq([1,-1], [V96,V111], aux121)
product(aux120,aux121, aux122)
ineq(aux122,0,-1)
weightedsumgeq([1,-1], [V111,V93], aux117)
weightedsumleq([1,-1], [V111,V93], aux117)
weightedsumgeq([1,-1], [V93,V111], aux118)
weightedsumleq([1,-1], [V93,V111], aux118)
product(aux117,aux118, aux119)
ineq(aux119,0,-1)
weightedsumgeq([1,-1], [V111,V82], aux114)
weightedsumleq([1,-1], [V111,V82], aux114)
weightedsumgeq([1,-1], [V82,V111], aux115)
weightedsumleq([1,-1], [V82,V111], aux115)
product(aux114,aux115, aux116)
ineq(aux116,0,-1)
diseq(V111, V49)
weightedsumgeq([1,-1], [V111,V42], aux111)
weightedsumleq([1,-1], [V111,V42], aux111)
weightedsumgeq([1,-1], [V42,V111], aux112)
weightedsumleq([1,-1], [V42,V111], aux112)
product(aux111,aux112, aux113)
ineq(aux113,0,-1)
weightedsumgeq([1,-1], [V111,V29], aux108)
weightedsumleq([1,-1], [V111,V29], aux108)
weightedsumgeq([1,-1], [V29,V111], aux109)
weightedsumleq([1,-1], [V29,V111], aux109)
product(aux108,aux109, aux110)
ineq(aux110,0,-1)
diseq(V111, V119)
diseq(V110, V91)
diseq(V110, V85)
weightedsumgeq([1,-1], [V110,V6], aux105)
weightedsumleq([1,-1], [V110,V6], aux105)
weightedsumgeq([1,-1], [V6,V110], aux106)
weightedsumleq([1,-1], [V6,V110], aux106)
product(aux105,aux106, aux107)
ineq(aux107,0,-1)
diseq(V110, V16)
diseq(V110, V116)
weightedsumgeq([1,-1], [V103,V110], aux102)
weightedsumleq([1,-1], [V103,V110], aux102)
weightedsumgeq([1,-1], [V110,V103], aux103)
weightedsumleq([1,-1], [V110,V103], aux103)
product(aux102,aux103, aux104)
ineq(aux104,0,-1)
weightedsumgeq([1,-1], [V10,V110], aux99)
weightedsumleq([1,-1], [V10,V110], aux99)
weightedsumgeq([1,-1], [V110,V10], aux100)
weightedsumleq([1,-1], [V110,V10], aux100)
product(aux99,aux100, aux101)
ineq(aux101,0,-1)
weightedsumgeq([1,-1], [V11,V89], aux96)
weightedsumleq([1,-1], [V11,V89], aux96)
weightedsumgeq([1,-1], [V89,V11], aux97)
weightedsumleq([1,-1], [V89,V11], aux97)
product(aux96,aux97, aux98)
ineq(aux98,0,-1)
diseq(V11, V73)
diseq(V11, V66)
diseq(V11, V53)
weightedsumgeq([1,-1], [V11,V19], aux93)
weightedsumleq([1,-1], [V11,V19], aux93)
weightedsumgeq([1,-1], [V19,V11], aux94)
weightedsumleq([1,-1], [V19,V11], aux94)
product(aux93,aux94, aux95)
ineq(aux95,0,-1)
diseq(V11, V18)
diseq(V11, V112)
weightedsumgeq([1,-1], [V109,V99], aux90)
weightedsumleq([1,-1], [V109,V99], aux90)
weightedsumgeq([1,-1], [V99,V109], aux91)
weightedsumleq([1,-1], [V99,V109], aux91)
product(aux90,aux91, aux92)
ineq(aux92,0,-1)
weightedsumgeq([1,-1], [V109,V54], aux87)
weightedsumleq([1,-1], [V109,V54], aux87)
weightedsumgeq([1,-1], [V54,V109], aux88)
weightedsumleq([1,-1], [V54,V109], aux88)
product(aux87,aux88, aux89)
ineq(aux89,0,-1)
diseq(V108, V9)
weightedsumgeq([1,-1], [V108,V74], aux84)
weightedsumleq([1,-1], [V108,V74], aux84)
weightedsumgeq([1,-1], [V74,V108], aux85)
weightedsumleq([1,-1], [V74,V108], aux85)
product(aux84,aux85, aux86)
ineq(aux86,0,-1)
weightedsumgeq([1,-1], [V108,V38], aux81)
weightedsumleq([1,-1], [V108,V38], aux81)
weightedsumgeq([1,-1], [V38,V108], aux82)
weightedsumleq([1,-1], [V38,V108], aux82)
product(aux81,aux82, aux83)
ineq(aux83,0,-1)
diseq(V108, V31)
diseq(V108, V22)
diseq(V108, V118)
diseq(V105, V108)
diseq(V107, V95)
weightedsumgeq([1,-1], [V107,V87], aux78)
weightedsumleq([1,-1], [V107,V87], aux78)
weightedsumgeq([1,-1], [V87,V107], aux79)
weightedsumleq([1,-1], [V87,V107], aux79)
product(aux78,aux79, aux80)
ineq(aux80,0,-1)
weightedsumgeq([1,-1], [V107,V24], aux75)
weightedsumleq([1,-1], [V107,V24], aux75)
weightedsumgeq([1,-1], [V24,V107], aux76)
weightedsumleq([1,-1], [V24,V107], aux76)
product(aux75,aux76, aux77)
ineq(aux77,0,-1)
diseq(V107, V21)
diseq(V107, V20)
diseq(V107, V117)
diseq(V101, V107)
diseq(V106, V91)
diseq(V106, V85)
weightedsumgeq([1,-1], [V106,V6], aux72)
weightedsumleq([1,-1], [V106,V6], aux72)
weightedsumgeq([1,-1], [V6,V106], aux73)
weightedsumleq([1,-1], [V6,V106], aux73)
product(aux72,aux73, aux74)
ineq(aux74,0,-1)
diseq(V106, V35)
diseq(V106, V16)
weightedsumgeq([1,-1], [V106,V116], aux69)
weightedsumleq([1,-1], [V106,V116], aux69)
weightedsumgeq([1,-1], [V116,V106], aux70)
weightedsumleq([1,-1], [V116,V106], aux70)
product(aux69,aux70, aux71)
ineq(aux71,0,-1)
weightedsumgeq([1,-1], [V106,V110], aux66)
weightedsumleq([1,-1], [V106,V110], aux66)
weightedsumgeq([1,-1], [V110,V106], aux67)
weightedsumleq([1,-1], [V110,V106], aux67)
product(aux66,aux67, aux68)
ineq(aux68,0,-1)
weightedsumgeq([1,-1], [V103,V106], aux63)
weightedsumleq([1,-1], [V103,V106], aux63)
weightedsumgeq([1,-1], [V106,V103], aux64)
weightedsumleq([1,-1], [V106,V103], aux64)
product(aux63,aux64, aux65)
ineq(aux65,0,-1)
weightedsumgeq([1,-1], [V10,V106], aux60)
weightedsumleq([1,-1], [V10,V106], aux60)
weightedsumgeq([1,-1], [V106,V10], aux61)
weightedsumleq([1,-1], [V106,V10], aux61)
product(aux60,aux61, aux62)
ineq(aux62,0,-1)
weightedsumgeq([1,-1], [V105,V74], aux57)
weightedsumleq([1,-1], [V105,V74], aux57)
weightedsumgeq([1,-1], [V74,V105], aux58)
weightedsumleq([1,-1], [V74,V105], aux58)
product(aux57,aux58, aux59)
ineq(aux59,0,-1)
diseq(V105, V38)
weightedsumgeq([1,-1], [V105,V31], aux54)
weightedsumleq([1,-1], [V105,V31], aux54)
weightedsumgeq([1,-1], [V31,V105], aux55)
weightedsumleq([1,-1], [V31,V105], aux55)
product(aux54,aux55, aux56)
ineq(aux56,0,-1)
weightedsumgeq([1,-1], [V105,V22], aux51)
weightedsumleq([1,-1], [V105,V22], aux51)
weightedsumgeq([1,-1], [V22,V105], aux52)
weightedsumleq([1,-1], [V22,V105], aux52)
product(aux51,aux52, aux53)
ineq(aux53,0,-1)
weightedsumgeq([1,-1], [V105,V118], aux48)
weightedsumleq([1,-1], [V105,V118], aux48)
weightedsumgeq([1,-1], [V118,V105], aux49)
weightedsumleq([1,-1], [V118,V105], aux49)
product(aux48,aux49, aux50)
ineq(aux50,0,-1)
weightedsumgeq([1,-1], [V104,V99], aux45)
weightedsumleq([1,-1], [V104,V99], aux45)
weightedsumgeq([1,-1], [V99,V104], aux46)
weightedsumleq([1,-1], [V99,V104], aux46)
product(aux45,aux46, aux47)
ineq(aux47,0,-1)
diseq(V104, V78)
diseq(V104, V59)
weightedsumgeq([1,-1], [V104,V54], aux42)
weightedsumleq([1,-1], [V104,V54], aux42)
weightedsumgeq([1,-1], [V54,V104], aux43)
weightedsumleq([1,-1], [V54,V104], aux43)
product(aux42,aux43, aux44)
ineq(aux44,0,-1)
diseq(V104, V109)
weightedsumgeq([1,-1], [V103,V91], aux39)
weightedsumleq([1,-1], [V103,V91], aux39)
weightedsumgeq([1,-1], [V91,V103], aux40)
weightedsumleq([1,-1], [V91,V103], aux40)
product(aux39,aux40, aux41)
ineq(aux41,0,-1)
weightedsumgeq([1,-1], [V103,V85], aux36)
weightedsumleq([1,-1], [V103,V85], aux36)
weightedsumgeq([1,-1], [V85,V103], aux37)
weightedsumleq([1,-1], [V85,V103], aux37)
product(aux36,aux37, aux38)
ineq(aux38,0,-1)
diseq(V103, V6)
diseq(V102, V40)
diseq(V100, V102)
weightedsumgeq([1,-1], [V1,V102], aux33)
weightedsumleq([1,-1], [V1,V102], aux33)
weightedsumgeq([1,-1], [V102,V1], aux34)
weightedsumleq([1,-1], [V102,V1], aux34)
product(aux33,aux34, aux35)
ineq(aux35,0,-1)
diseq(V101, V24)
diseq(V101, V21)
diseq(V101, V117)
weightedsumgeq([1,-1], [V100,V40], aux30)
weightedsumleq([1,-1], [V100,V40], aux30)
weightedsumgeq([1,-1], [V40,V100], aux31)
weightedsumleq([1,-1], [V40,V100], aux31)
product(aux30,aux31, aux32)
ineq(aux32,0,-1)
weightedsumgeq([1,-1], [V10,V91], aux27)
weightedsumleq([1,-1], [V10,V91], aux27)
weightedsumgeq([1,-1], [V91,V10], aux28)
weightedsumleq([1,-1], [V91,V10], aux28)
product(aux27,aux28, aux29)
ineq(aux29,0,-1)
weightedsumgeq([1,-1], [V10,V85], aux24)
weightedsumleq([1,-1], [V10,V85], aux24)
weightedsumgeq([1,-1], [V85,V10], aux25)
weightedsumleq([1,-1], [V85,V10], aux25)
product(aux24,aux25, aux26)
ineq(aux26,0,-1)
weightedsumgeq([1,-1], [V10,V6], aux21)
weightedsumleq([1,-1], [V10,V6], aux21)
weightedsumgeq([1,-1], [V6,V10], aux22)
weightedsumleq([1,-1], [V6,V10], aux22)
product(aux21,aux22, aux23)
ineq(aux23,0,-1)
diseq(V10, V116)
weightedsumgeq([1,-1], [V10,V103], aux18)
weightedsumleq([1,-1], [V10,V103], aux18)
weightedsumgeq([1,-1], [V103,V10], aux19)
weightedsumleq([1,-1], [V103,V10], aux19)
product(aux18,aux19, aux20)
ineq(aux20,0,-1)
diseq(V1, V40)
weightedsumgeq([1,-1], [V1,V100], aux15)
weightedsumleq([1,-1], [V1,V100], aux15)
weightedsumgeq([1,-1], [V100,V1], aux16)
weightedsumleq([1,-1], [V100,V1], aux16)
product(aux15,aux16, aux17)
ineq(aux17,0,-1)
diseq(V0, V99)
weightedsumgeq([1,-1], [V0,V78], aux12)
weightedsumleq([1,-1], [V0,V78], aux12)
weightedsumgeq([1,-1], [V78,V0], aux13)
weightedsumleq([1,-1], [V78,V0], aux13)
product(aux12,aux13, aux14)
ineq(aux14,0,-1)
weightedsumgeq([1,-1], [V0,V59], aux9)
weightedsumleq([1,-1], [V0,V59], aux9)
weightedsumgeq([1,-1], [V59,V0], aux10)
weightedsumleq([1,-1], [V59,V0], aux10)
product(aux9,aux10, aux11)
ineq(aux11,0,-1)
weightedsumgeq([1,-1], [V0,V54], aux6)
weightedsumleq([1,-1], [V0,V54], aux6)
weightedsumgeq([1,-1], [V54,V0], aux7)
weightedsumleq([1,-1], [V54,V0], aux7)
product(aux6,aux7, aux8)
ineq(aux8,0,-1)
weightedsumgeq([1,-1], [V0,V109], aux3)
weightedsumleq([1,-1], [V0,V109], aux3)
weightedsumgeq([1,-1], [V109,V0], aux4)
weightedsumleq([1,-1], [V109,V0], aux4)
product(aux3,aux4, aux5)
ineq(aux5,0,-1)
weightedsumgeq([1,-1], [V0,V104], aux0)
weightedsumleq([1,-1], [V0,V104], aux0)
weightedsumgeq([1,-1], [V104,V0], aux1)
weightedsumleq([1,-1], [V104,V0], aux1)
product(aux0,aux1, aux2)
ineq(aux2,0,-1)

**EOF**
