MINION 3

#This file has been automatically generated by TAILOR v0.2
#bug-reports: andrea@cs.st-and.ac.uk

# amount of common subexpressions used:54
# amount of inferred common subexpressions used:0
# amount of original variables saved (over direct equality):0
# amount of constraints:162
# amount of auxiliary variables: 108

**VARIABLES**
BOUND V0 {0..399}
BOUND V1 {0..399}
BOUND V2 {0..399}
BOUND V3 {0..399}
BOUND V4 {0..399}
BOUND V5 {0..399}
BOUND V6 {0..399}
BOUND V7 {0..399}
BOUND V8 {0..399}

# auxiliary variables
DISCRETE aux0 {1..19}
DISCRETE aux1 {1..19}
DISCRETE aux2 {-18..18}
DISCRETE aux3 {0..18}
BOOL aux4 
DISCRETE aux5 {0..19}
DISCRETE aux6 {0..19}
DISCRETE aux7 {-19..19}
DISCRETE aux8 {0..19}
BOOL aux9 
BOOL aux10 
BOOL aux11 
BOOL aux12 
BOOL aux13 
DISCRETE aux14 {1..19}
DISCRETE aux15 {-18..18}
DISCRETE aux16 {0..18}
BOOL aux17 
DISCRETE aux18 {0..19}
DISCRETE aux19 {-19..19}
DISCRETE aux20 {0..19}
BOOL aux21 
BOOL aux22 
BOOL aux23 
BOOL aux24 
BOOL aux25 
DISCRETE aux26 {1..19}
DISCRETE aux27 {-18..18}
DISCRETE aux28 {0..18}
BOOL aux29 
DISCRETE aux30 {0..19}
DISCRETE aux31 {-19..19}
DISCRETE aux32 {0..19}
BOOL aux33 
BOOL aux34 
BOOL aux35 
BOOL aux36 
BOOL aux37 
DISCRETE aux38 {1..19}
DISCRETE aux39 {-18..18}
DISCRETE aux40 {0..18}
BOOL aux41 
DISCRETE aux42 {0..19}
DISCRETE aux43 {-19..19}
DISCRETE aux44 {0..19}
BOOL aux45 
BOOL aux46 
BOOL aux47 
BOOL aux48 
BOOL aux49 
DISCRETE aux50 {1..19}
DISCRETE aux51 {-18..18}
DISCRETE aux52 {0..18}
BOOL aux53 
DISCRETE aux54 {0..19}
DISCRETE aux55 {-19..19}
DISCRETE aux56 {0..19}
BOOL aux57 
BOOL aux58 
BOOL aux59 
BOOL aux60 
BOOL aux61 
DISCRETE aux62 {1..19}
DISCRETE aux63 {-18..18}
DISCRETE aux64 {0..18}
BOOL aux65 
DISCRETE aux66 {0..19}
DISCRETE aux67 {-19..19}
DISCRETE aux68 {0..19}
BOOL aux69 
BOOL aux70 
BOOL aux71 
BOOL aux72 
BOOL aux73 
DISCRETE aux74 {1..19}
DISCRETE aux75 {-18..18}
DISCRETE aux76 {0..18}
BOOL aux77 
DISCRETE aux78 {0..19}
DISCRETE aux79 {-19..19}
DISCRETE aux80 {0..19}
BOOL aux81 
BOOL aux82 
BOOL aux83 
BOOL aux84 
BOOL aux85 
DISCRETE aux86 {1..19}
DISCRETE aux87 {-18..18}
DISCRETE aux88 {0..18}
BOOL aux89 
DISCRETE aux90 {0..19}
DISCRETE aux91 {-19..19}
DISCRETE aux92 {0..19}
BOOL aux93 
BOOL aux94 
BOOL aux95 
BOOL aux96 
BOOL aux97 
DISCRETE aux98 {-18..18}
DISCRETE aux99 {0..18}
BOOL aux100 
DISCRETE aux101 {-19..19}
DISCRETE aux102 {0..19}
BOOL aux103 
BOOL aux104 
BOOL aux105 
BOOL aux106 
BOOL aux107 

# aliases

**SEARCH**

PRINT [
[V0],[V1],[V2],[V3],[V4],[V5],[V6],[V7],
[V8]]

VARORDER [
V0,V1,V2,V3,V4,V5,V6,V7,
V8,
aux0,aux1,aux2,aux3,aux4,aux5,aux6,aux7,
aux8,aux9,aux10,aux11,aux12,aux13,aux14,aux15,
aux16,aux17,aux18,aux19,aux20,aux21,aux22,aux23,
aux24,aux25,aux26,aux27,aux28,aux29,aux30,aux31,
aux32,aux33,aux34,aux35,aux36,aux37,aux38,aux39,
aux40,aux41,aux42,aux43,aux44,aux45,aux46,aux47,
aux48,aux49,aux50,aux51,aux52,aux53,aux54,aux55,
aux56,aux57,aux58,aux59,aux60,aux61,aux62,aux63,
aux64,aux65,aux66,aux67,aux68,aux69,aux70,aux71,
aux72,aux73,aux74,aux75,aux76,aux77,aux78,aux79,
aux80,aux81,aux82,aux83,aux84,aux85,aux86,aux87,
aux88,aux89,aux90,aux91,aux92,aux93,aux94,aux95,
aux96,aux97,aux98,aux99,aux100,aux101,aux102,aux103,
aux104,aux105,aux106,aux107]


**CONSTRAINTS**

weightedsumgeq([1,-1], [aux86,aux0], aux98)
weightedsumleq([1,-1], [aux86,aux0], aux98)
abs(aux99,aux98)
reify(eq(2, aux99), aux100)
weightedsumgeq([1,-1], [aux90,aux5], aux101)
weightedsumleq([1,-1], [aux90,aux5], aux101)
abs(aux102,aux101)
reify(eq(1, aux102), aux103)
reify(sumgeq([aux103,aux100], 2), aux104)
reify(eq(2, aux102), aux105)
reify(eq(1, aux99), aux106)
reify(sumgeq([aux106,aux105], 2), aux107)
watchsumgeq([aux107,aux104], 1)
div(V8, 20, aux86)
weightedsumgeq([1,-1], [aux74,aux86], aux87)
weightedsumleq([1,-1], [aux74,aux86], aux87)
abs(aux88,aux87)
reify(eq(2, aux88), aux89)
modulo(V8, 20, aux90)
weightedsumgeq([1,-1], [aux78,aux90], aux91)
weightedsumleq([1,-1], [aux78,aux90], aux91)
abs(aux92,aux91)
reify(eq(1, aux92), aux93)
reify(sumgeq([aux93,aux89], 2), aux94)
reify(eq(2, aux92), aux95)
reify(eq(1, aux88), aux96)
reify(sumgeq([aux96,aux95], 2), aux97)
watchsumgeq([aux97,aux94], 1)
div(V7, 20, aux74)
weightedsumgeq([1,-1], [aux62,aux74], aux75)
weightedsumleq([1,-1], [aux62,aux74], aux75)
abs(aux76,aux75)
reify(eq(2, aux76), aux77)
modulo(V7, 20, aux78)
weightedsumgeq([1,-1], [aux66,aux78], aux79)
weightedsumleq([1,-1], [aux66,aux78], aux79)
abs(aux80,aux79)
reify(eq(1, aux80), aux81)
reify(sumgeq([aux81,aux77], 2), aux82)
reify(eq(2, aux80), aux83)
reify(eq(1, aux76), aux84)
reify(sumgeq([aux84,aux83], 2), aux85)
watchsumgeq([aux85,aux82], 1)
div(V6, 20, aux62)
weightedsumgeq([1,-1], [aux50,aux62], aux63)
weightedsumleq([1,-1], [aux50,aux62], aux63)
abs(aux64,aux63)
reify(eq(2, aux64), aux65)
modulo(V6, 20, aux66)
weightedsumgeq([1,-1], [aux54,aux66], aux67)
weightedsumleq([1,-1], [aux54,aux66], aux67)
abs(aux68,aux67)
reify(eq(1, aux68), aux69)
reify(sumgeq([aux69,aux65], 2), aux70)
reify(eq(2, aux68), aux71)
reify(eq(1, aux64), aux72)
reify(sumgeq([aux72,aux71], 2), aux73)
watchsumgeq([aux73,aux70], 1)
div(V5, 20, aux50)
weightedsumgeq([1,-1], [aux38,aux50], aux51)
weightedsumleq([1,-1], [aux38,aux50], aux51)
abs(aux52,aux51)
reify(eq(2, aux52), aux53)
modulo(V5, 20, aux54)
weightedsumgeq([1,-1], [aux42,aux54], aux55)
weightedsumleq([1,-1], [aux42,aux54], aux55)
abs(aux56,aux55)
reify(eq(1, aux56), aux57)
reify(sumgeq([aux57,aux53], 2), aux58)
reify(eq(2, aux56), aux59)
reify(eq(1, aux52), aux60)
reify(sumgeq([aux60,aux59], 2), aux61)
watchsumgeq([aux61,aux58], 1)
div(V4, 20, aux38)
weightedsumgeq([1,-1], [aux26,aux38], aux39)
weightedsumleq([1,-1], [aux26,aux38], aux39)
abs(aux40,aux39)
reify(eq(2, aux40), aux41)
modulo(V4, 20, aux42)
weightedsumgeq([1,-1], [aux30,aux42], aux43)
weightedsumleq([1,-1], [aux30,aux42], aux43)
abs(aux44,aux43)
reify(eq(1, aux44), aux45)
reify(sumgeq([aux45,aux41], 2), aux46)
reify(eq(2, aux44), aux47)
reify(eq(1, aux40), aux48)
reify(sumgeq([aux48,aux47], 2), aux49)
watchsumgeq([aux49,aux46], 1)
div(V3, 20, aux26)
weightedsumgeq([1,-1], [aux14,aux26], aux27)
weightedsumleq([1,-1], [aux14,aux26], aux27)
abs(aux28,aux27)
reify(eq(2, aux28), aux29)
modulo(V3, 20, aux30)
weightedsumgeq([1,-1], [aux18,aux30], aux31)
weightedsumleq([1,-1], [aux18,aux30], aux31)
abs(aux32,aux31)
reify(eq(1, aux32), aux33)
reify(sumgeq([aux33,aux29], 2), aux34)
reify(eq(2, aux32), aux35)
reify(eq(1, aux28), aux36)
reify(sumgeq([aux36,aux35], 2), aux37)
watchsumgeq([aux37,aux34], 1)
div(V2, 20, aux14)
weightedsumgeq([1,-1], [aux1,aux14], aux15)
weightedsumleq([1,-1], [aux1,aux14], aux15)
abs(aux16,aux15)
reify(eq(2, aux16), aux17)
modulo(V2, 20, aux18)
weightedsumgeq([1,-1], [aux6,aux18], aux19)
weightedsumleq([1,-1], [aux6,aux18], aux19)
abs(aux20,aux19)
reify(eq(1, aux20), aux21)
reify(sumgeq([aux21,aux17], 2), aux22)
reify(eq(2, aux20), aux23)
reify(eq(1, aux16), aux24)
reify(sumgeq([aux24,aux23], 2), aux25)
watchsumgeq([aux25,aux22], 1)
div(V0, 20, aux0)
div(V1, 20, aux1)
weightedsumgeq([1,-1], [aux0,aux1], aux2)
weightedsumleq([1,-1], [aux0,aux1], aux2)
abs(aux3,aux2)
reify(eq(2, aux3), aux4)
modulo(V0, 20, aux5)
modulo(V1, 20, aux6)
weightedsumgeq([1,-1], [aux5,aux6], aux7)
weightedsumleq([1,-1], [aux5,aux6], aux7)
abs(aux8,aux7)
reify(eq(1, aux8), aux9)
reify(sumgeq([aux9,aux4], 2), aux10)
reify(eq(2, aux8), aux11)
reify(eq(1, aux3), aux12)
reify(sumgeq([aux12,aux11], 2), aux13)
watchsumgeq([aux13,aux10], 1)
diseq(V6, V8)
diseq(V5, V8)
diseq(V5, V7)
diseq(V4, V8)
diseq(V4, V7)
diseq(V4, V6)
diseq(V3, V8)
diseq(V3, V7)
diseq(V3, V6)
diseq(V3, V5)
diseq(V2, V8)
diseq(V2, V7)
diseq(V2, V6)
diseq(V2, V5)
diseq(V2, V4)
diseq(V1, V8)
diseq(V1, V7)
diseq(V1, V6)
diseq(V1, V5)
diseq(V1, V4)
diseq(V1, V3)
diseq(V0, V7)
diseq(V0, V6)
diseq(V0, V5)
diseq(V0, V4)
diseq(V0, V3)
diseq(V0, V2)

**EOF**
