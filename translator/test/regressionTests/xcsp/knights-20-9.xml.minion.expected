MINION 3

#This file has been automatically generated by TAILOR v0.2
#bug-reports: andrea@cs.st-and.ac.uk

# amount of common subexpressions used:53
# amount of inferred common subexpressions used:0
# amount of original variables saved (over direct equality):0
# amount of constraints:127
# amount of auxiliary variables: 37

**VARIABLES**
BOUND V0 {0..399}
BOUND V1 {0..399}
BOUND V2 {0..399}
BOUND V3 {0..399}
BOUND V4 {0..399}
BOUND V5 {0..399}
BOUND V6 {0..399}
BOUND V7 {0..399}
BOUND V8 {0..399}

# auxiliary variables
DISCRETE aux0 {1..19}
DISCRETE aux1 {1..19}
DISCRETE aux2 {-18..18}
DISCRETE aux3 {0..19}
DISCRETE aux4 {0..19}
DISCRETE aux5 {-19..19}
BOOL aux6 
DISCRETE aux7 {1..19}
DISCRETE aux8 {-18..18}
DISCRETE aux9 {0..19}
DISCRETE aux10 {-19..19}
DISCRETE aux11 {1..19}
DISCRETE aux12 {-18..18}
DISCRETE aux13 {0..19}
DISCRETE aux14 {-19..19}
DISCRETE aux15 {1..19}
DISCRETE aux16 {-18..18}
DISCRETE aux17 {0..19}
DISCRETE aux18 {-19..19}
DISCRETE aux19 {1..19}
DISCRETE aux20 {-18..18}
DISCRETE aux21 {0..19}
DISCRETE aux22 {-19..19}
DISCRETE aux23 {1..19}
DISCRETE aux24 {-18..18}
DISCRETE aux25 {0..19}
DISCRETE aux26 {-19..19}
DISCRETE aux27 {1..19}
DISCRETE aux28 {-18..18}
DISCRETE aux29 {0..19}
DISCRETE aux30 {-19..19}
DISCRETE aux31 {1..19}
DISCRETE aux32 {-18..18}
DISCRETE aux33 {0..19}
DISCRETE aux34 {-19..19}
DISCRETE aux35 {-18..18}
DISCRETE aux36 {-19..19}

# aliases

**SEARCH**

PRINT [
[V0],[V1],[V2],[V3],[V4],[V5],[V6],[V7],
[V8]]

VARORDER [
V0,V1,V2,V3,V4,V5,V6,V7,
V8,
aux0,aux1,aux2,aux3,aux4,aux5,aux6,aux7,
aux8,aux9,aux10,aux11,aux12,aux13,aux14,aux15,
aux16,aux17,aux18,aux19,aux20,aux21,aux22,aux23,
aux24,aux25,aux26,aux27,aux28,aux29,aux30,aux31,
aux32,aux33,aux34,aux35,aux36]


**CONSTRAINTS**

weightedsumgeq([1,-1], [aux31,aux0], aux35)
weightedsumleq([1,-1], [aux31,aux0], aux35)
abs(2,aux35)
weightedsumgeq([1,-1], [aux33,aux3], aux36)
weightedsumleq([1,-1], [aux33,aux3], aux36)
abs(1,aux36)
abs(2,aux36)
abs(1,aux35)
sumgeq([aux6,aux6], 1)
div(V8, 20, aux31)
weightedsumgeq([1,-1], [aux27,aux31], aux32)
weightedsumleq([1,-1], [aux27,aux31], aux32)
abs(2,aux32)
modulo(V8, 20, aux33)
weightedsumgeq([1,-1], [aux29,aux33], aux34)
weightedsumleq([1,-1], [aux29,aux33], aux34)
abs(1,aux34)
abs(2,aux34)
abs(1,aux32)
sumgeq([aux6,aux6], 1)
div(V7, 20, aux27)
weightedsumgeq([1,-1], [aux23,aux27], aux28)
weightedsumleq([1,-1], [aux23,aux27], aux28)
abs(2,aux28)
modulo(V7, 20, aux29)
weightedsumgeq([1,-1], [aux25,aux29], aux30)
weightedsumleq([1,-1], [aux25,aux29], aux30)
abs(1,aux30)
abs(2,aux30)
abs(1,aux28)
sumgeq([aux6,aux6], 1)
div(V6, 20, aux23)
weightedsumgeq([1,-1], [aux19,aux23], aux24)
weightedsumleq([1,-1], [aux19,aux23], aux24)
abs(2,aux24)
modulo(V6, 20, aux25)
weightedsumgeq([1,-1], [aux21,aux25], aux26)
weightedsumleq([1,-1], [aux21,aux25], aux26)
abs(1,aux26)
abs(2,aux26)
abs(1,aux24)
sumgeq([aux6,aux6], 1)
div(V5, 20, aux19)
weightedsumgeq([1,-1], [aux15,aux19], aux20)
weightedsumleq([1,-1], [aux15,aux19], aux20)
abs(2,aux20)
modulo(V5, 20, aux21)
weightedsumgeq([1,-1], [aux17,aux21], aux22)
weightedsumleq([1,-1], [aux17,aux21], aux22)
abs(1,aux22)
abs(2,aux22)
abs(1,aux20)
sumgeq([aux6,aux6], 1)
div(V4, 20, aux15)
weightedsumgeq([1,-1], [aux11,aux15], aux16)
weightedsumleq([1,-1], [aux11,aux15], aux16)
abs(2,aux16)
modulo(V4, 20, aux17)
weightedsumgeq([1,-1], [aux13,aux17], aux18)
weightedsumleq([1,-1], [aux13,aux17], aux18)
abs(1,aux18)
abs(2,aux18)
abs(1,aux16)
sumgeq([aux6,aux6], 1)
div(V3, 20, aux11)
weightedsumgeq([1,-1], [aux7,aux11], aux12)
weightedsumleq([1,-1], [aux7,aux11], aux12)
abs(2,aux12)
modulo(V3, 20, aux13)
weightedsumgeq([1,-1], [aux9,aux13], aux14)
weightedsumleq([1,-1], [aux9,aux13], aux14)
abs(1,aux14)
abs(2,aux14)
abs(1,aux12)
sumgeq([aux6,aux6], 1)
div(V2, 20, aux7)
weightedsumgeq([1,-1], [aux1,aux7], aux8)
weightedsumleq([1,-1], [aux1,aux7], aux8)
abs(2,aux8)
modulo(V2, 20, aux9)
weightedsumgeq([1,-1], [aux4,aux9], aux10)
weightedsumleq([1,-1], [aux4,aux9], aux10)
abs(1,aux10)
abs(2,aux10)
abs(1,aux8)
sumgeq([aux6,aux6], 1)
div(V0, 20, aux0)
div(V1, 20, aux1)
weightedsumgeq([1,-1], [aux0,aux1], aux2)
weightedsumleq([1,-1], [aux0,aux1], aux2)
abs(2,aux2)
modulo(V0, 20, aux3)
modulo(V1, 20, aux4)
weightedsumgeq([1,-1], [aux3,aux4], aux5)
weightedsumleq([1,-1], [aux3,aux4], aux5)
abs(1,aux5)
reify(sumgeq([1,2], 2), aux6)
abs(2,aux5)
abs(1,aux2)
sumgeq([aux6,aux6], 1)
diseq(V6, V8)
diseq(V5, V8)
diseq(V5, V7)
diseq(V4, V8)
diseq(V4, V7)
diseq(V4, V6)
diseq(V3, V8)
diseq(V3, V7)
diseq(V3, V6)
diseq(V3, V5)
diseq(V2, V8)
diseq(V2, V7)
diseq(V2, V6)
diseq(V2, V5)
diseq(V2, V4)
diseq(V1, V8)
diseq(V1, V7)
diseq(V1, V6)
diseq(V1, V5)
diseq(V1, V4)
diseq(V1, V3)
diseq(V0, V7)
diseq(V0, V6)
diseq(V0, V5)
diseq(V0, V4)
diseq(V0, V3)
diseq(V0, V2)

**EOF**
