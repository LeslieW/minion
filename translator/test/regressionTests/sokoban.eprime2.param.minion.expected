MINION 3

#This file has been automatically generated by TAILOR v0.2
#bug-reports: andrea@cs.st-and.ac.uk

# amount of common subexpressions used:8
# amount of inferred common subexpressions used:0
# amount of original variables saved (over direct equality):0
# amount of constraints:237
# amount of auxiliary variables: 52

**VARIABLES**
DISCRETE sokPosn[5] {0..35}
DISCRETE move[4] {-6..6}
DISCRETE crateGoalPosns[5,2] {0..35}

# auxiliary variables
BOOL aux0 
BOOL aux1 
BOOL aux2 
BOOL aux3 
BOOL aux4 
BOOL aux5 
BOOL aux6 
BOOL aux7 
BOOL aux8 
BOOL aux9 
BOOL aux10 
BOOL aux11 
BOOL aux12 
BOOL aux13 
BOOL aux14 
BOOL aux15 
BOOL aux16 
BOOL aux17 
BOOL aux18 
BOOL aux19 
BOOL aux20 
BOOL aux21 
BOOL aux22 
BOOL aux23 
BOOL aux24 
BOOL aux25 
BOOL aux26 
BOOL aux27 
BOOL aux28 
BOOL aux29 
BOOL aux30 
BOOL aux31 
BOOL aux32 
BOOL aux33 
BOOL aux34 
BOOL aux35 
BOOL aux36 
BOOL aux37 
BOOL aux38 
BOOL aux39 
BOOL aux40 
BOOL aux41 
BOOL aux42 
BOOL aux43 
BOOL aux44 
BOOL aux45 
BOOL aux46 
BOOL aux47 
BOOL aux48 
BOOL aux49 
BOOL aux50 
BOOL aux51 

# aliases

**SEARCH**

PRINT [
sokPosn,move,crateGoalPosns]

VARORDER [
sokPosn,move,crateGoalPosns,
aux0,aux1,aux2,aux3,aux4,aux5,aux6,aux7,
aux8,aux9,aux10,aux11,aux12,aux13,aux14,aux15,
aux16,aux17,aux18,aux19,aux20,aux21,aux22,aux23,
aux24,aux25,aux26,aux27,aux28,aux29,aux30,aux31,
aux32,aux33,aux34,aux35,aux36,aux37,aux38,aux39,
aux40,aux41,aux42,aux43,aux44,aux45,aux46,aux47,
aux48,aux49,aux50,aux51]


**CONSTRAINTS**

reify(eq(26, crateGoalPosns[4, 1]), aux24)
reify(eq(9, crateGoalPosns[4, 1]), aux25)
reify(eq(26, crateGoalPosns[4, 0]), aux26)
reify(eq(9, crateGoalPosns[4, 0]), aux27)
watchsumgeq([aux24,aux25], 1)
watchsumgeq([aux27,aux26], 1)
reify(eq(crateGoalPosns[3, 1], crateGoalPosns[4, 1]), aux16)
reify(eq(crateGoalPosns[3, 0], crateGoalPosns[4, 0]), aux17)
watchsumgeq([aux0,aux16], 1)
reify(eq(crateGoalPosns[2, 1], crateGoalPosns[3, 1]), aux18)
reify(eq(crateGoalPosns[2, 0], crateGoalPosns[3, 0]), aux19)
watchsumgeq([aux18,aux4], 1)
reify(eq(crateGoalPosns[1, 1], crateGoalPosns[2, 1]), aux20)
reify(eq(crateGoalPosns[1, 0], crateGoalPosns[2, 0]), aux21)
watchsumgeq([aux20,aux8], 1)
reify(eq(crateGoalPosns[0, 1], crateGoalPosns[1, 1]), aux22)
reify(eq(crateGoalPosns[0, 0], crateGoalPosns[1, 0]), aux23)
watchsumgeq([aux12,aux22], 1)
watchsumgeq([aux17,aux2], 1)
watchsumgeq([aux19,aux6], 1)
watchsumgeq([aux10,aux21], 1)
watchsumgeq([aux23,aux14], 1)
reify(eq(crateGoalPosns[3, 1], sokPosn[4]), aux0)
reify(sumleq([crateGoalPosns[3, 1],move[3]], crateGoalPosns[4, 1]), aux28)
reify(sumgeq([crateGoalPosns[3, 1],move[3]], crateGoalPosns[4, 1]), aux29)
product(aux28,aux29, aux30)
eq(aux30, aux1)
reify(eq(crateGoalPosns[3, 0], sokPosn[4]), aux2)
reify(sumleq([crateGoalPosns[3, 0],move[3]], crateGoalPosns[4, 0]), aux31)
reify(sumgeq([crateGoalPosns[3, 0],move[3]], crateGoalPosns[4, 0]), aux32)
product(aux31,aux32, aux33)
eq(aux33, aux3)
ineq(aux0,aux1,0)
reify(eq(crateGoalPosns[2, 1], sokPosn[3]), aux4)
reify(sumleq([crateGoalPosns[2, 1],move[2]], crateGoalPosns[3, 1]), aux34)
reify(sumgeq([crateGoalPosns[2, 1],move[2]], crateGoalPosns[3, 1]), aux35)
product(aux34,aux35, aux36)
eq(aux36, aux5)
reify(eq(crateGoalPosns[2, 0], sokPosn[3]), aux6)
reify(sumleq([crateGoalPosns[2, 0],move[2]], crateGoalPosns[3, 0]), aux37)
reify(sumgeq([crateGoalPosns[2, 0],move[2]], crateGoalPosns[3, 0]), aux38)
product(aux37,aux38, aux39)
eq(aux39, aux7)
ineq(aux4,aux5,0)
reify(eq(crateGoalPosns[1, 1], sokPosn[2]), aux8)
reify(sumleq([crateGoalPosns[1, 1],move[1]], crateGoalPosns[2, 1]), aux40)
reify(sumgeq([crateGoalPosns[1, 1],move[1]], crateGoalPosns[2, 1]), aux41)
product(aux40,aux41, aux42)
eq(aux42, aux9)
reify(eq(crateGoalPosns[1, 0], sokPosn[2]), aux10)
reify(sumleq([crateGoalPosns[1, 0],move[1]], crateGoalPosns[2, 0]), aux43)
reify(sumgeq([crateGoalPosns[1, 0],move[1]], crateGoalPosns[2, 0]), aux44)
product(aux43,aux44, aux45)
eq(aux45, aux11)
ineq(aux8,aux9,0)
reify(eq(crateGoalPosns[0, 1], sokPosn[1]), aux12)
reify(sumleq([crateGoalPosns[0, 1],move[0]], crateGoalPosns[1, 1]), aux46)
reify(sumgeq([crateGoalPosns[0, 1],move[0]], crateGoalPosns[1, 1]), aux47)
product(aux46,aux47, aux48)
eq(aux48, aux13)
reify(eq(crateGoalPosns[0, 0], sokPosn[1]), aux14)
reify(sumleq([crateGoalPosns[0, 0],move[0]], crateGoalPosns[1, 0]), aux49)
reify(sumgeq([crateGoalPosns[0, 0],move[0]], crateGoalPosns[1, 0]), aux50)
product(aux49,aux50, aux51)
eq(aux51, aux15)
ineq(aux12,aux13,0)
ineq(aux2,aux3,0)
ineq(aux6,aux7,0)
ineq(aux10,aux11,0)
ineq(aux14,aux15,0)
alldiff([crateGoalPosns[4,_]])
alldiff([crateGoalPosns[3,_]])
alldiff([crateGoalPosns[2,_]])
alldiff([crateGoalPosns[1,_]])
alldiff([crateGoalPosns[0,_]])
eq(20, crateGoalPosns[0, 1])
eq(15, crateGoalPosns[0, 0])
sumleq([move[3],sokPosn[3]], sokPosn[4])
sumgeq([move[3],sokPosn[3]], sokPosn[4])
sumleq([move[2],sokPosn[2]], sokPosn[3])
sumgeq([move[2],sokPosn[2]], sokPosn[3])
sumleq([move[1],sokPosn[1]], sokPosn[2])
sumgeq([move[1],sokPosn[1]], sokPosn[2])
sumleq([move[0],sokPosn[0]], sokPosn[1])
sumgeq([move[0],sokPosn[0]], sokPosn[1])
diseq(35, sokPosn[4])
diseq(34, sokPosn[4])
diseq(33, sokPosn[4])
diseq(32, sokPosn[4])
diseq(31, sokPosn[4])
diseq(30, sokPosn[4])
diseq(29, sokPosn[4])
diseq(24, sokPosn[4])
diseq(23, sokPosn[4])
diseq(18, sokPosn[4])
diseq(17, sokPosn[4])
diseq(12, sokPosn[4])
diseq(11, sokPosn[4])
diseq(10, sokPosn[4])
diseq(8, sokPosn[4])
diseq(7, sokPosn[4])
diseq(6, sokPosn[4])
diseq(5, sokPosn[4])
diseq(4, sokPosn[4])
diseq(3, sokPosn[4])
diseq(2, sokPosn[4])
diseq(1, sokPosn[4])
diseq(35, sokPosn[3])
diseq(34, sokPosn[3])
diseq(33, sokPosn[3])
diseq(32, sokPosn[3])
diseq(31, sokPosn[3])
diseq(30, sokPosn[3])
diseq(29, sokPosn[3])
diseq(24, sokPosn[3])
diseq(23, sokPosn[3])
diseq(18, sokPosn[3])
diseq(17, sokPosn[3])
diseq(12, sokPosn[3])
diseq(11, sokPosn[3])
diseq(10, sokPosn[3])
diseq(8, sokPosn[3])
diseq(7, sokPosn[3])
diseq(6, sokPosn[3])
diseq(5, sokPosn[3])
diseq(4, sokPosn[3])
diseq(3, sokPosn[3])
diseq(2, sokPosn[3])
diseq(1, sokPosn[3])
diseq(35, sokPosn[2])
diseq(34, sokPosn[2])
diseq(33, sokPosn[2])
diseq(32, sokPosn[2])
diseq(31, sokPosn[2])
diseq(30, sokPosn[2])
diseq(29, sokPosn[2])
diseq(24, sokPosn[2])
diseq(23, sokPosn[2])
diseq(18, sokPosn[2])
diseq(17, sokPosn[2])
diseq(12, sokPosn[2])
diseq(11, sokPosn[2])
diseq(10, sokPosn[2])
diseq(8, sokPosn[2])
diseq(7, sokPosn[2])
diseq(6, sokPosn[2])
diseq(5, sokPosn[2])
diseq(4, sokPosn[2])
diseq(3, sokPosn[2])
diseq(2, sokPosn[2])
diseq(1, sokPosn[2])
diseq(35, sokPosn[1])
diseq(34, sokPosn[1])
diseq(33, sokPosn[1])
diseq(32, sokPosn[1])
diseq(31, sokPosn[1])
diseq(30, sokPosn[1])
diseq(29, sokPosn[1])
diseq(24, sokPosn[1])
diseq(23, sokPosn[1])
diseq(18, sokPosn[1])
diseq(17, sokPosn[1])
diseq(12, sokPosn[1])
diseq(11, sokPosn[1])
diseq(10, sokPosn[1])
diseq(8, sokPosn[1])
diseq(7, sokPosn[1])
diseq(6, sokPosn[1])
diseq(5, sokPosn[1])
diseq(4, sokPosn[1])
diseq(3, sokPosn[1])
diseq(2, sokPosn[1])
diseq(1, sokPosn[1])
diseq(35, sokPosn[0])
diseq(34, sokPosn[0])
diseq(33, sokPosn[0])
diseq(32, sokPosn[0])
diseq(31, sokPosn[0])
diseq(30, sokPosn[0])
diseq(29, sokPosn[0])
diseq(24, sokPosn[0])
diseq(23, sokPosn[0])
diseq(18, sokPosn[0])
diseq(17, sokPosn[0])
diseq(12, sokPosn[0])
diseq(11, sokPosn[0])
diseq(10, sokPosn[0])
diseq(8, sokPosn[0])
diseq(7, sokPosn[0])
diseq(6, sokPosn[0])
diseq(5, sokPosn[0])
diseq(4, sokPosn[0])
diseq(3, sokPosn[0])
diseq(2, sokPosn[0])
diseq(1, sokPosn[0])
diseq(0, sokPosn[4])
diseq(0, sokPosn[3])
diseq(0, sokPosn[2])
diseq(0, sokPosn[1])
diseq(0, sokPosn[0])
eq(13, sokPosn[0])
diseq(-5, move[3])
diseq(-4, move[3])
diseq(-3, move[3])
diseq(-1, move[3])
diseq(0, move[3])
diseq(2, move[3])
diseq(3, move[3])
diseq(4, move[3])
diseq(-5, move[2])
diseq(-4, move[2])
diseq(-3, move[2])
diseq(-1, move[2])
diseq(0, move[2])
diseq(2, move[2])
diseq(3, move[2])
diseq(4, move[2])
diseq(-5, move[1])
diseq(-4, move[1])
diseq(-3, move[1])
diseq(-1, move[1])
diseq(0, move[1])
diseq(2, move[1])
diseq(3, move[1])
diseq(4, move[1])
diseq(-5, move[0])
diseq(-4, move[0])
diseq(-3, move[0])
diseq(-1, move[0])
diseq(0, move[0])
diseq(2, move[0])
diseq(3, move[0])
diseq(4, move[0])
diseq(5, move[3])
diseq(5, move[2])
diseq(5, move[1])
diseq(5, move[0])

**EOF**
