$ Magic Square problem with Symmetry Breaking Constraint
$ (CSPlib Problem 19)
$  http://www.cs.st-andrews.ac.uk/~ianm/CSPLib/prob/prob019/
$
$  An order n magic square is a n by n matrix containing the numbers 1 to 
$  n^2, with each row, column and main diagonal equal the same sum.
$
$ modelled by Andrea Rendl

language ESSENCE' 1.b.a

given n : int
letting N be domain int(1..n)

find magicSquare : matrix indexed by [N,N] of int(1..n*n)
find theSum : int(1..n*n*n)

such that 

alldifferent(magicSquare),

$ upper bound for the sum
theSum < (n*n*n - ( sum i : int(1..n-1).  i)),

$ the lower bound for the sum
theSum > ( sum i : int(1..n).  i), 

$ the sum over all columns
forall row : N .
   ( sum col : N .
       magicSquare[row,col] ) = theSum,


$ the sum over all rows
forall col : N .
   ( sum row : N .
       magicSquare[row,col] ) = theSum,


$ main diagonal
(sum i : N . magicSquare[i,i]) = theSum, 



$ symmetry breaking constraint
$ (matrix-row, -column, rotation, reflection symmetry)


forall k,l : int(2..n) . 
   magicSquare[1,1] < magicSquare[k,l],


forall i : int(2..n) .
   (i+1 <= n) => 
       (magicSquare[2,i] < magicSquare[2,i+1]),  


forall j : int(2..n) .
   (j+1 <= n) =>
      (magicSquare[j,2] < magicSquare[j+1,1]),


magicSquare[1,n] < magicSquare[n,1]


